<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据湖知多少</title>
    <link href="/2020/04/25/%E6%95%B0%E6%8D%AE%E6%B9%96%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <url>/2020/04/25/%E6%95%B0%E6%8D%AE%E6%B9%96%E7%9F%A5%E5%A4%9A%E5%B0%91/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h4 id="数据湖"><a href="#数据湖" class="headerlink" title="数据湖"></a>数据湖</h4><blockquote><p>数据湖是一个集中式存储库，允许您以任意规模存储所有结构化和非结构化数据。您可以按原样存储数据（无需先对数据进行结构化处理），并运行不同类型的分析 – 从控制面板和可视化到大数据处理、实时分析和机器学习，以指导做出更好的决策。</p></blockquote><p>这是AWS给出的解释。</p><p>看了很多数据湖的介绍文章，笔者认为数据胡和我们常说的ODS数据很类似，也就是原始数据的保存区域，存储来自各业务系统（消息队列）的原始数据。比如电商网站的访问日志（埋点的时候是以JSON存储），物联网终端设备实时发送的数据等原始数据直接存储在数据仓库的ODS层。</p><h4 id="数据湖为什么火了"><a href="#数据湖为什么火了" class="headerlink" title="数据湖为什么火了"></a>数据湖为什么火了</h4><p>做数据仓库已经有ODS数据了，那么怎么突然大家都在提数据湖了？</p><p><strong>真正的原因在于数据分析和机器学习这两年成为了主流</strong>，可以看看现在的招聘网站，很多招聘数据分析师和算法工程师的岗位，笔者所在城市尤为明显。15年的时候大家都在建立各自的大数据平台，那时候你懂点Hadoop，已经很了不起了。现在各个大数据平台已经建设成熟，逐步为业务服务，越来越多的公司需要利用大数据服务于业务，提升变现能力。</p><p>基于大数据建设的数据仓库往往是各个维度的聚合数据，大多服务于传统的报表分析。而机器学习往往需要使用到原始数据，另外很多机器学习用到的也不至于格式化数据，用户的评论，图像等都可以应用到机器学习中。</p><h4 id="为什么要有数据湖"><a href="#为什么要有数据湖" class="headerlink" title="为什么要有数据湖"></a>为什么要有数据湖</h4><p><img src="https://upload-images.jianshu.io/upload_images/4579636-80e39b8830ee065f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>可以看下上面的这个组织架构图。数据湖的存在更多的是改变部门的组织架构，毕竟现在大部分公司都更注重业务分析的价值。</p><p>传统企业的数据团队被当做IT体系，整天要求提数。现在，数据团队只需要负责提供简单易用的工具，业务部门直接进行数据的使用。这也就是人人具备数据分析能力（<del>人人都是数据分析师</del>）。</p><h4 id="数据湖-vs-数据仓库"><a href="#数据湖-vs-数据仓库" class="headerlink" title="数据湖 vs 数据仓库"></a>数据湖 vs 数据仓库</h4><p><img src="https://upload-images.jianshu.io/upload_images/4579636-7cdf4810819ec131?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>这是AWS给出的对比，还是比较中肯的。</p><p>传统的数据仓库工作方式是集中式的：业务人员给需求到数据团队，数据团队根据要求加工、开发成维度表，供业务团队通过BI报表工具查询或者业务分析系统展示。</p><p>数据湖是开放、自助式的：开放数据给所有人使用，数据团队更多是提供工具、环境供各业务团队使用，业务团队进行开发、分析。</p><p>和数据仓库不同的是，以前数据仓库都是先设计schema，然后灌入数据。数据湖的schema是随用随生成，随着分析场景不同而不同。关于数据湖的技术实现方面可以了解下 <a href="https://delta.io/" target="_blank" rel="noopener">delta lake</a>这个项目（我司的平台部分功能在delta lake这个项目出来之前已经实现了一些功能）。</p><p>数据湖对于数据分析师来说对数据的操控性更强，但是要求也更高，不光懂业务，懂sql，懂数据，还要懂大数据处理技术，每个人都在处理自己需要的数据，会造成很多冗余数据存储和计算资源浪费，无法形成共性的可复用的数据层，这方面数仓是有益的补充。数据湖并不是为了颠覆数据仓库，是为了满足数仓无法满足的数据需求，二者是互补的。</p><p><img src="https://upload-images.jianshu.io/upload_images/4579636-b50431bb328ffe64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="扫描关注我.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>元数据知多少</title>
    <link href="/2020/04/25/%E5%85%83%E6%95%B0%E6%8D%AE%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <url>/2020/04/25/%E5%85%83%E6%95%B0%E6%8D%AE%E7%9F%A5%E5%A4%9A%E5%B0%91/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>小B是一名数据分析师，他问小A XXX的所有指标给我一下，小A“鄙视的”给了他一个文档。</p><h4 id="元数据知道多少"><a href="#元数据知道多少" class="headerlink" title="元数据知道多少"></a>元数据知道多少</h4><p>小B作为一名数据分析师，为什么自己没能去找到数据呢？</p><p>这就要说下数据仓库的元数据管理。我们都知道传统的数据库中每张表都有注释，包括表注释，字段注释，你拿到一个不熟悉的表肯定要先看注释，然后才知道每个字段的意思。就像你学习英语的时候查那本牛津字典一样，你能很快查到每个单词的意思，不就你还能看单词“猜出”一个单词的意思。同样数据仓库也有这样一套“注释”，我们称之为元数据。</p><blockquote><p>数据仓库的元数据是负责记录和管理数据的含义、格式、血缘关系等。</p></blockquote><p>作为数据分析师，做分析之前，你都要先知道自己需要什么数据，去哪找到这些数据。没错，就是数据仓库的元数据管理系统。所以，理解数据仓库，需要从元数据开始。</p><h4 id="元数据中有什么"><a href="#元数据中有什么" class="headerlink" title="元数据中有什么"></a>元数据中有什么</h4><p><img src="https://upload-images.jianshu.io/upload_images/4579636-457aed0868a3d8f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="1584239367737.png"></p><ul><li><p><strong>模型说明</strong>，模型的业务含义，所属主题，数据分析师可以通过说明知道模型存储的是什么数据</p></li><li><p><strong>模型字段</strong>，模型中每个字段代表的意思，数据分析师可以了解模型中有哪些指标数据和维度信息</p></li><li><p><strong>模型需求来源</strong>，这个模型的需求谁提出来的，还是建模人员自己规划的，可以帮助数据分析师了解模型建立的初衷</p></li><li><p><strong>模型开发者</strong>，就像你代码一样，最上面都是author 。数据分析师可以找到对应的模型开发者了解一切他想要的信息。</p></li><li><p><strong>模型存储信息</strong>，包括分区信息，数据大小信息，数据波动情况等，数据分析师了解后，不至于一个SQL把即席查询搞死。</p></li><li><p><strong>血缘关系</strong>，数据分析师可以了解模型里面字段的来龙去脉，在出现数据问题时，进行追踪溯源，找出“始作俑者”。</p></li><li><p><strong>变更记录</strong>，数据分析师后续进行大时间范围的分析时，方便确定数据的有效可用范围。比如，20200101变更模型，增加注释“<em>2020增加字段a，2020年之前无该字段数据</em>”。</p></li></ul><h4 id="模型开发者眼中的元数据"><a href="#模型开发者眼中的元数据" class="headerlink" title="模型开发者眼中的元数据"></a>模型开发者眼中的元数据</h4><p>上面的元数据很大意义上是给数据分析师看的，其实还有一部分元数据是给模型开发人员看的。</p><ul><li><p>模型中字段的合法值类型、范围等</p></li><li><p>ETL程序使用的转换规则</p></li><li><p>UDF(自定义函数)说明</p></li><li><p>ETL报错代码含义</p></li><li><p>……</p></li></ul><p>模型开发人员除了做好“数据分析师眼中的”元数据，还要管理好“开发的”元数据。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>元数据承担着数据治理的重任，完整的元数据管理系统是数据仓库建设成功的根基，也是数据仓库发挥作用大小的决定项之一。</p><p>最为数据分析师，使用好元数据，可以快速帮助你更快的构建特征工程。</p><p>大家的元数据建设都是怎样的，有什么困惑，可以留言分享下。</p>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库知多少</title>
    <link href="/2020/04/25/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <url>/2020/04/25/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%9F%A5%E5%A4%9A%E5%B0%91/</url>
    
    <content type="html"><![CDATA[<p><meta name="referrer" content="no-referrer"></p><h4 id="数据仓库知多少"><a href="#数据仓库知多少" class="headerlink" title="数据仓库知多少"></a>数据仓库知多少</h4><p>首先，我们来了解一下数据仓库吧！数据仓库是一个面向主题的、集成的、相对稳定的、反应历史变化的数据集合。</p><p>我们来看这几个词：</p><ul><li><strong>面向主题</strong>，数据仓库会规划各种业务主题，所以我们需要理解各大主题的范畴以及之间的关系，这样就了解了数仓的基本架构。</li><li><strong>集成</strong>，数据仓库的数据会来自各个业务系统数据或者外部爬取数据，所以需要我们知道每个数据仓库的模型字段都是来自哪个源，这样我们就能快速全面的了解相关业务。</li><li><strong>相对稳定</strong>，数据仓库的数据一般不会实时变化，所以我们今天看去年的数据和明天看去年的数据是一样的，如果我们发现某一个月度数据不对，就可能需要重新汇总历史月份每天的数据（请理解数数仓小伙伴们没及时给你数据）</li><li><strong>反应历史变化</strong>，这就是为什么预测一般就需要数据分析师们大显身手了。</li></ul><h4 id="如何利用数据仓库优化数据分析"><a href="#如何利用数据仓库优化数据分析" class="headerlink" title="如何利用数据仓库优化数据分析"></a>如何利用数据仓库优化数据分析</h4><p>首先数据分析又是干什么的呢？基于业务需求，结合历史数据，利用相关统计学方法和某些数据挖掘工具算法对数据进行整合、分析，并形成一套最终解决某个业务场景的方案（刚入门数据分析的浅显思考）。</p><p>听团队小伙伴说，在数据分析的过程种有大部分的工作都是在处理数据（大部门分我认为是60%工作量），所以为了提高工作效率和质量，借助数据仓库进行数据分析是一个很好的选择。</p><p><strong>如何来使用数据仓库呢？</strong></p><ul><li><strong>了解原始数据</strong>，想要真正的理解指标，你必须了解原始明细数据，知道是哪里来的，经过了怎样维度的计算得到的。</li><li><strong>寻找“干净”数据</strong>，数据分析要求数据都是“干净的”（可以作为算法特征输入），而数据仓库中的模型一般都符合你的要求。我们需要找到“干净的”模型，但事实往往不会很顺利，我们需要找到相近的数据，然后自己找到之间同的纽带（关联条件）汇总数据。</li><li><strong>反馈数据</strong>，数据分析在做完整个分析方案后，可以和数据放仓库小伙伴一起分享成果，让数仓同事学习数据分析思路的同时，也可以更好的规划模型，从而进入良性循环。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>数据仓库和数据分析都存在的组织架构在很多大团队会有，很多小团队是没有专门的数据分析人员或者数据仓库人员的，二者是合为一体的。</p><p>做为一个数据分析猿，你都用哪些数据处理手段，或者对数据仓库需要到怎么的理解程度，可以留言告诉我，一起探讨！</p>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析01---规范化方法</title>
    <link href="/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9001-%E8%A7%84%E8%8C%83%E5%8C%96%E6%96%B9%E6%B3%95/"/>
    <url>/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9001-%E8%A7%84%E8%8C%83%E5%8C%96%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<hr><ol><li>Min-max 规范化<br>将原始数据规范到[0-1]之间，公式如下：</li></ol><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">新数值=<span class="hljs-comment">(原数值-极小值)</span>/<span class="hljs-comment">(极大值-极小值)</span><br></code></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-comment"># coding:utf-8</span><br>from sklearn import preprocessing<br>import numpy as np<br><span class="hljs-comment"># 初始化数据，每一行表示一个样本，每一列表示一个特征</span><br>x = np.array([[ 0., -3.,  1.],<br>              [ 3.,  1.,  2.],<br>              [ 0.,  1., -1.]])<br><span class="hljs-comment"># 将数据进行 [0,1] 规范化</span><br>min_max_scaler = preprocessing.MinMaxScaler()<br>minmax_x = min_max_scaler.fit_transform(x)<br>print (minmax_x)<br></code></pre></td></tr></table></figure><p>  2.Z-Score规范化</p><blockquote><p>假设 A 与 B 的考试成绩都为 80 分，A 的考卷满分是 100 分（及格 60 分），B 的考卷满分是 500 分（及格 300<br>分）。虽然两个人都考了 80 分，但是 A 的 80 分与 B 的 80 分代表完全不同的含义。</p></blockquote><p>那么如何用相同的标准来比较 A 与 B 的成绩呢？Z-Score 就是用来可以解决这一问题的。<br>公式如下：</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-attr">新数值 </span>=<span class="hljs-string">（原数值 - 均值）/ 标准差。</span><br></code></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">from sklearn import preprocessing<br>import numpy as np<br># 初始化数据<br>x = np.array([[ <span class="hljs-number">0.</span>, <span class="hljs-number">-3.</span>,  <span class="hljs-number">1.</span>],<br>              [ <span class="hljs-number">3.</span>,  <span class="hljs-number">1.</span>,  <span class="hljs-number">2.</span>],<br>              [ <span class="hljs-number">0.</span>,  <span class="hljs-number">1.</span>, <span class="hljs-number">-1.</span>]])<br># 将数据进行 Z-Score 规范化<br>scaled_x = preprocessing.scale(x)<br>print (scaled_x)<br></code></pre></td></tr></table></figure><p>我们能看到 Z-Score 的优点是算法简单，不受数据量级影响，结果易于比较。不足在于，它需要数据整体的平均值和方差，而且结果没有实际意义，只是用于比较。<br> 3.小数定标规范<br> 小数定标规范化就是通过移动小数点的位置来进行规范化。小数点移动多少位取决于属性 A 的取值中的最大绝对值。<br> 举个例子，比如属性 A 的取值范围是 -999 到 88，那么最大绝对值为 999，小数点就会移动 3 位，即新数值 = 原数值 /1000。那么 A 的取值范围就被规范化为 -0.999 到 0.088。<br> 代码实现:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined"># coding:utf<span class="hljs-number">-8</span><br>from sklearn import preprocessing<br>import numpy as np<br># 初始化数据<br>x = np.array(<span class="hljs-string">[[ 0., -3.,  1.],<br>              [ 3.,  1.,  2.],<br>              [ 0.,  1., -1.]]</span>)<br># 小数定标规范化<br>j = np.<span class="hljs-built_in">ceil</span>(np.<span class="hljs-built_in">log10</span>(np.<span class="hljs-built_in">max</span>(<span class="hljs-built_in">abs</span>(x))))<br>scaled_x = x/(<span class="hljs-number">10</span>**j)<br><span class="hljs-built_in">print</span> (scaled_x)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析02---线性回归</title>
    <link href="/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9002-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <url>/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9002-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><blockquote><p>可分为线性回归分析和非线性回归分析。如果在回归分析中，只包括一个自变量和一个因变量，且二者的关系可用一条直线近似表示，这种回归分析称为一元线性回归分析。如果回归分析中包括两个或两个以上的自变量，且因变量和自变量之间是线性关系，则称为多元线性回归分析。</p></blockquote><p>Python sklearn中的LinearRegreesion实例：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> linear_model<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment"># 读入CSV数据</span><br>csv_data = pd.read_csv(<span class="hljs-string">'E:\pycode\data\md0301.csv'</span>).dropna() <span class="hljs-comment">#过滤空值</span><br><span class="hljs-built_in">print</span>(csv_data.shape)<br><span class="hljs-built_in">print</span>(csv_data.all)<br><br><span class="hljs-comment"># 建立线性回归模型</span><br>regr = linear_model.LinearRegression()<br><span class="hljs-comment"># 拟合</span><br>regr.fit(csv_data[<span class="hljs-string">'m_motor_rotate'</span>].values.reshape(<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>), csv_data[<span class="hljs-string">'vehicle_speed'</span>]) <span class="hljs-comment"># 注意此处.reshape(-1, 1)，因为X是一维的！</span><br><span class="hljs-comment">#得到线性回归公式的系数y=ax+b</span><br>a=regr.coef_<br><span class="hljs-built_in">print</span>(len(a))<br>b=regr.intercept_<br><span class="hljs-built_in">print</span>(b)<br><br><span class="hljs-built_in">print</span>(regr.score(csv_data[<span class="hljs-string">'m_motor_rotate'</span>].values.reshape(<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>), csv_data[<span class="hljs-string">'vehicle_speed'</span>]))<br><span class="hljs-comment"># 1.真实的点</span><br>plt.scatter(csv_data[<span class="hljs-string">'m_motor_rotate'</span>], csv_data[<span class="hljs-string">'vehicle_speed'</span>], color=<span class="hljs-string">'black'</span>)<br><span class="hljs-comment"># 2.拟合的直线</span><br>plt.plot(csv_data[<span class="hljs-string">'m_motor_rotate'</span>], regr.predict(csv_data[<span class="hljs-string">'m_motor_rotate'</span>].values.reshape(<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>)), color=<span class="hljs-string">'red'</span>, linewidth=<span class="hljs-number">1</span>)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p>运行如下：<br><img src="https://upload-images.jianshu.io/upload_images/4579636-3b43c2960ca9cf3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="线性回归"></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析03---决策树</title>
    <link href="/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9003-%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <url>/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9003-%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<p>标签（空格分隔）： 数据分析</p><hr><meta name="referrer" content="no-referrer"><h4 id="CART-创建决策树做分类"><a href="#CART-创建决策树做分类" class="headerlink" title="CART 创建决策树做分类"></a>CART 创建决策树做分类</h4><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-comment"># encoding=utf-8</span><br>from sklearn.model_selection <span class="hljs-built_in">import</span> train_test_split<br>from sklearn.metrics <span class="hljs-built_in">import</span> accuracy_score<br>from sklearn.tree <span class="hljs-built_in">import</span> DecisionTreeClassifier<br>from sklearn.datasets <span class="hljs-built_in">import</span> load_iris<br><span class="hljs-built_in">import</span> graphviz<br>from sklearn <span class="hljs-built_in">import</span> tree<br><span class="hljs-built_in">import</span> os<br>os.environ[<span class="hljs-string">"PATH"</span>] += os.pathsep + 'C:\\Users\\qincf\\AppData\\Local\\Continuum\\anaconda3\Library\\bin\\graphviz'<br><br><span class="hljs-comment"># 准备数据集</span><br><span class="hljs-attr">iris=load_iris()</span><br><span class="hljs-comment"># 获取特征集和分类标识</span><br><span class="hljs-attr">features</span> = iris.data<br><span class="hljs-attr">labels</span> = iris.target<br><span class="hljs-comment"># 随机抽取 33% 的数据作为测试集，其余为训练集</span><br>train_features, test_features, train_labels, <span class="hljs-attr">test_labels</span> = train_test_split(features, labels, <span class="hljs-attr">test_size=0.33,</span> <span class="hljs-attr">random_state=0)</span><br><span class="hljs-comment"># 创建 CART 分类树</span><br><span class="hljs-attr">clf</span> = DecisionTreeClassifier(<span class="hljs-attr">criterion='gini')</span><br><span class="hljs-comment"># 拟合构造 CART 分类树</span><br><span class="hljs-attr">clf</span> = clf.fit(train_features, train_labels)<br><span class="hljs-comment"># 用 CART 分类树做预测</span><br><span class="hljs-attr">test_predict</span> = clf.predict(test_features)<br>print(test_predict)<br><span class="hljs-comment"># 预测结果与测试集结果作比对</span><br><span class="hljs-attr">score</span> = accuracy_score(test_labels, test_predict)<br>print(<span class="hljs-string">"CART 分类树准确率 %.4lf"</span> % score)<br><br><span class="hljs-comment">##打印CART</span><br><span class="hljs-attr">dot_data</span> = tree.export_graphviz(clf,<span class="hljs-attr">out_file=None)</span><br><span class="hljs-attr">graph</span> = graphviz.Source(dot_data)<br>graph<br>print(graph.view())<br></code></pre></td></tr></table></figure><h4 id="分类树如下："><a href="#分类树如下：" class="headerlink" title="分类树如下："></a>分类树如下：</h4><p><img src="https://upload-images.jianshu.io/upload_images/4579636-8a8304dce82fd083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="image.png"></p><h4 id="CART-回归树做预测"><a href="#CART-回归树做预测" class="headerlink" title="CART 回归树做预测"></a>CART 回归树做预测</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs undefined"># encoding=utf-<span class="hljs-number">8</span><br>from sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br>from sklearn.metrics <span class="hljs-keyword">import</span> mean_squared_error,mean_absolute_error<br><br>from sklearn.<span class="hljs-keyword">tree</span> <span class="hljs-keyword">import</span> DecisionTreeRegressor<br>from sklearn.datasets <span class="hljs-keyword">import</span> load_boston<br><span class="hljs-keyword">import</span> graphviz<br>from sklearn <span class="hljs-keyword">import</span> <span class="hljs-keyword">tree</span><br><span class="hljs-keyword">import</span> os<br>os.environ[<span class="hljs-string">"PATH"</span>] += os.pathsep + <span class="hljs-string">'C:\\Users\\qincf\\AppData\\Local\\Continuum\\anaconda3\Library\\bin\\graphviz'</span><br></code></pre></td></tr></table></figure><p>​    </p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-comment"># 准备数据集</span><br>boston=load_boston()<br><span class="hljs-comment"># 探索数据</span><br>print(boston.feature_names)<br><span class="hljs-comment"># 获取特征集和房价</span><br>features = boston.data<br>prices = boston.target<br><span class="hljs-comment"># 随机抽取 33% 的数据作为测试集，其余为训练集</span><br>train_features, test_features, train_price, test_price = train_test_split(features, prices, test_size=0.33)<br><span class="hljs-comment"># 创建 CART 回归树</span><br>dtr=DecisionTreeRegressor()<br><span class="hljs-comment"># 拟合构造 CART 回归树</span><br>dtr.fit(train_features, train_price)<br><span class="hljs-comment"># 预测测试集中的房价</span><br>predict_price = dtr.predict(test_features)<br>print(test_features)<br><span class="hljs-comment"># 测试集的结果评价</span><br><span class="hljs-section">print('回归树二乘偏差均值:', mean_squared_error(test_price, predict_price))</span><br><span class="hljs-section">print('回归树绝对值偏差均值:', mean_absolute_error(test_price, predict_price))</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析04---朴素贝叶斯</title>
    <link href="/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9004-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
    <url>/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9004-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</url>
    
    <content type="html"><![CDATA[<p>标签（空格分隔）： 数据分析</p><hr><meta name="referrer" content="no-referrer"><blockquote><p>朴素贝叶斯分类最适合的场景就是文本分类、情感分析和垃圾邮件识别。其中情感分析和垃圾邮件识别都是通过文本来进行判断。从这里你能看出来，这三个场景本质上都是文本分类，这也是朴素贝叶斯最擅长的地方。所以朴素贝叶斯也常用于自然语言处理 NLP 的工具。<br>sklearn 的全称叫 Scikit-learn，它给我们提供了 3 个朴素贝叶斯分类算法，分别是高斯朴素贝叶斯（GaussianNB）、多项式朴素贝叶斯（MultinomialNB）和伯努利朴素贝叶斯（BernoulliNB）。</p></blockquote><p>这三种算法适合应用在不同的场景下，我们应该根据特征变量的不同选择不同的算法：</p><ul><li>高斯朴素贝叶斯：特征变量是连续变量，符合高斯分布，比如说人的身高，物体的长度。</li><li>多项式朴素贝叶斯：特征变量是离散变量，符合多项分布，在文档分类中特征变量体现在一个单词出现的次数，或者是单词的 TF-IDF 值等。</li><li>伯努利朴素贝叶斯：特征变量是布尔变量，符合 0/1 分布，在文档分类中特征是单词是否出现。</li></ul><blockquote><p>伯努利朴素贝叶斯是以文件为粒度，如果该单词在某文件中出现了即为 1，否则为 0。而多项式朴素贝叶斯是以单词为粒度，会计算在某个文件中的具体次数。而高斯朴素贝叶斯适合处理特征变量是连续变量，且符合正态分布（高斯分布）的情况。比如身高、体重这种自然界的现象就比较适合用高斯朴素贝叶斯来处理。而文本分类是使用多项式朴素贝叶斯或者伯努利朴素贝叶斯。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析05---SVM</title>
    <link href="/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9005-SVM/"/>
    <url>/2019/11/17/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%9005-SVM/</url>
    
    <content type="html"><![CDATA[<p>标签（空格分隔）： 数据分析</p><hr><meta name="referrer" content="no-referrer"><p>SVM 是有监督的学习模型，我们需要事先对数据打上分类标签，通过求解最大分类间隔来求解二分类问题。如果要求解多分类问题，可以将多个二分类器组合起来形成一个多分类器。</p><p>如何创建一个 SVM 分类器呢？我们首先使用 SVC 的构造函数：model = svm.SVC(kernel=‘rbf’, C=1.0, gamma=‘auto’)，这里有三个重要的参数 kernel、C 和 gamma。kernel 代表核函数的选择，它有四种选择，只不过默认是 rbf，即高斯核函数。</p><ol><li>linear：线性核函数 </li><li>poly：多项式核函数 </li><li>rbf：高斯核函数（默认） </li><li>sigmoid：sigmoid 核函数</li></ol><blockquote><p>线性核函数，是在数据线性可分的情况下使用的，运算速度快，效果好。不足在于它不能处理线性不可分的数据。<br>多项式核函数可以将数据从低维空间映射到高维空间，但参数比较多，计算量大。<br>高斯核函数同样可以将样本映射到高维空间，但相比于多项式核函数来说所需的参数比较少，通常性能不错，所以是默认使用的核函数。<br>了解深度学习的同学应该知道 sigmoid 经常用在神经网络的映射中。因此当选用 sigmoid 核函数时，SVM 实现的是多层神经网络。</p></blockquote><p>参数 C 代表目标函数的惩罚系数，惩罚系数指的是分错样本时的惩罚程度，默认情况下为 1.0。当 C 越大的时候，分类器的准确性越高，但同样容错率会越低，泛化能力会变差。相反，C 越小，泛化能力越强，但是准确性会降低。<br>参数 gamma 代表核函数的系数，默认为样本特征数的倒数，即 gamma = 1 / n_features。</p>]]></content>
    
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈数据中台</title>
    <link href="/2019/03/05/%E6%B5%85%E8%B0%88%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0/"/>
    <url>/2019/03/05/%E6%B5%85%E8%B0%88%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0/</url>
    
    <content type="html"><![CDATA[<hr><meta name="referrer" content="no-referrer"><h1 id="一、什么是数据中台"><a href="#一、什么是数据中台" class="headerlink" title="一、什么是数据中台"></a>一、什么是数据中台</h1><p>数据中台的概念最是阿里提出来的是为了实现数据的分层和水平解耦，提供数据服务能力。看了那么多中台的概念，对中台也有些自己的理解。笔者认为中台主要是为了提供全域的数据服务。主要包括以下4部分：数据资产、数据治理、数据模型、数据服务。<br><img src="https://img-blog.csdnimg.cn/20190226204152675.jpg" srcset="/img/loading.gif" alt="此处输入图片的描述"><br>打通数据建模对全域数据进行沉淀形成数据资产，从而提供统一的数据服务功能。</p><h1 id="二、如何建立数据中台"><a href="#二、如何建立数据中台" class="headerlink" title="二、如何建立数据中台"></a>二、如何建立数据中台</h1><p>建设数据中台主要就是从数据模型、数据资产、数据治理、数据服务四部分出发。</p><h2 id="1、数据模型"><a href="#1、数据模型" class="headerlink" title="1、数据模型"></a>1、数据模型</h2><p>数据模型，就是我们熟悉的数据仓库中的模型，按照数据仓库规范分层开发模型，实现数据的标准化，多采用维度建模。还有一些挖掘模型，如果用的多了，也可以沉淀到数据中台中。我们可以看出数据中台中的模型具有通用性。</p><h2 id="2、数据资产"><a href="#2、数据资产" class="headerlink" title="2、数据资产"></a>2、数据资产</h2><p>在数据仓库中我们已经建立了一些模型，但是只有打通数据孤岛后才可以称为资产。需要开发一些指标库，这些指标可以组合处理满足外部人员个性化的指标。需求。还包括一些元数据，比如模型信息、血缘关系、数据存储以及访问情况等。</p><h2 id="3、数据治理"><a href="#3、数据治理" class="headerlink" title="3、数据治理"></a>3、数据治理</h2><p>数据治理主要是为了保障数据资产的完整性、准确性、一致性、及时性。根据指定的规范开发模型、校验模型、管理模型。</p><h2 id="4、数据服务"><a href="#4、数据服务" class="headerlink" title="4、数据服务"></a>4、数据服务</h2><p>数据中台最重要的就是要对外提供统一的服务能力。数据服务包括提供给开发者，让开发者能够快速、简单的访问数据服务；对于业务分析人员可以让他们轻松的进行算法分析，包括模型管理、可视化编排流程，算法模型发布等功能。</p><h1 id="三、数据中台和数据仓库有什么不同"><a href="#三、数据中台和数据仓库有什么不同" class="headerlink" title="三、数据中台和数据仓库有什么不同"></a>三、数据中台和数据仓库有什么不同</h1><p>很多人对数据中台和数据仓库两个概念可能不是很清楚，笔者认为最主要的是思维理念不同，数据仓库是“管理数据”，数据中台是“经营数据”，数据中台是为了提供服务而生（也有说是为了前台而生）。</p><p>参考资料：《<a href="https://yq.aliyun.com/articles/297782" target="_blank" rel="noopener">数据中台-阿里巴巴的数据整合、价值发掘、社会赋能之道</a>》</p>]]></content>
    
    
    
    <tags>
      
      <tag>数据中台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GreenPlum的那些事《五》——浅谈GPDB中的资源队列</title>
    <link href="/2019/02/24/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%BA%94%E3%80%8B%E2%80%94%E2%80%94%E6%B5%85%E8%B0%88GPDB%E4%B8%AD%E7%9A%84%E8%B5%84%E6%BA%90%E9%98%9F%E5%88%97/"/>
    <url>/2019/02/24/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%BA%94%E3%80%8B%E2%80%94%E2%80%94%E6%B5%85%E8%B0%88GPDB%E4%B8%AD%E7%9A%84%E8%B5%84%E6%BA%90%E9%98%9F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<hr><meta name="referrer" content="no-referrer"><h2 id="资源队列介绍"><a href="#资源队列介绍" class="headerlink" title="资源队列介绍"></a>资源队列介绍</h2><p>当你安装好数据库的时候就会有一个默认的资源队列 <em>pg_default</em>，所有用户默认使用该队列。<br>GPDB建议你对不同类型的用户建立不同的资源队列，比如你有超级用户，WEB查询用户，报表用户还有个人用户等，你就需要根据用户使用场景和需求的不同，创建不同的资源队列进行分配。资源队列主要做了以下工作：</p><ul><li>查询数。对用户最大查询的并发数进行控制。</li><li>内存。对用户查询需要的内存资源进行控制。</li><li>优先级。对不同资源队列进行优先级区分。</li><li>查询成本。对每个查询需要的查询成本进行控制，此处的查询成本是指执行计划中的costs。<br>一个资源队列可以对应多个用户，但是一个用户只能有一个有效注册的资源队列。</li></ul><h2 id="资源队列如何起作用"><a href="#资源队列如何起作用" class="headerlink" title="资源队列如何起作用"></a>资源队列如何起作用</h2><p> 在世纪执行过程中，如果一个SQL执行的所需要的资源没有超过资源队列，那么它会立刻执行。如果执行的SQL超过了资源队列限制的资源，比如超过了最大并发数，那么该次执行就会等待，等到资源释放后，才能执行。资源队列针对执行的SQL，采用<strong>FIFO</strong>原则，即先进先出。如果资源队列设置了优先级，那么多个资源队列之间就会优先执行优先级高的用户操作。<br> <img src="https://gpdb.docs.pivotal.io/4330/graphics/resource_queues.jpg" srcset="/img/loading.gif" alt="资源队列样例"></p><p> 拥有<strong>SUPERUSER</strong> 角色的用户总是优先执行，不受资源队列的限制。</p><h2 id="内存限制如何起作用"><a href="#内存限制如何起作用" class="headerlink" title="内存限制如何起作用"></a>内存限制如何起作用</h2><p>内存限制是指用户在执行SQL时候使用的最大内存，GPDB的队列内存设置并不是每个SQL都能达到这个内存。比如一个队列设置最大内存为2000MB，最大回话数为10，那么默认每个SQL最大的执行内存为200MB。通过设置 statement_mem 可以调整这种情况，详细见<a href="https://gpdb.docs.pivotal.io/4330/admin_guide/workload_mgmt.html#topic12" target="_blank" rel="noopener"> Creating Queues with Memory Limits</a></p><h2 id="优先级如何起作用"><a href="#优先级如何起作用" class="headerlink" title="优先级如何起作用"></a>优先级如何起作用</h2><p>在任务执行期间，相同优先级的任务会平分资源，比如查询1和查询2，是同一个优先级队列下的任务，那么他们评分CPU资源。这时候来了一个查询3，是低优先级的，那么查询1和查询2的总资源会减少，但是还是会平分资源的。大概的资源分布见下图（百分比并不代表世纪的使用百分比，知识示例）<br><img src="https://gpdb.docs.pivotal.io/4330/graphics/gp_query_priority1.png" srcset="/img/loading.gif" alt="CPU利用"></p>]]></content>
    
    
    
    <tags>
      
      <tag>greenplum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GreenPlum的那些事《四》——增删改查</title>
    <link href="/2019/01/24/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E5%9B%9B%E3%80%8B%E2%80%94%E2%80%94%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <url>/2019/01/24/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E5%9B%9B%E3%80%8B%E2%80%94%E2%80%94%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>上文我们介绍了GPDB的常用管理操作，今天我们来说下它的增删改查。这是对于一个数据库最基本的功能了，然而GPDB有它自己的特性，我们一起来看下。</p><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>按列插入数据：</p><pre><code>gptest=# create table products (name varchar(20),price numeric(10,2),product_no bigint)  distributed by  (product_no);                     CREATE TABLEgptest=# INSERT INTO products (name, price, product_no) VALUES (&apos;Cheese&apos;, 9.99, 1);INSERT 0 1gptest=# select * from products;  name  | price | product_no --------+-------+------------ Cheese |  9.99 |          1(1 row)</code></pre><p>同事插入多列：</p><pre><code>gptest=# INSERT INTO products (product_no, name, price) VALUESgptest-#     (1, &apos;Cheese&apos;, 9.99),gptest-#     (2, &apos;Bread&apos;, 1.99),gptest-#     (3, &apos;Milk&apos;, 2.99);INSERT 0 3gptest=# select * from products;                                                                                                            name  | price | product_no --------+-------+------------ Cheese |  9.99 |          1 Cheese |  9.99 |          1 Bread  |  1.99 |          2 Milk   |  2.99 |          3(4 rows)</code></pre><p><strong>我们看到了GPDB插入数据和普通数据库一样，那么是否可以像传统的DBMS一样用作OLTP系统呢。不是的！GPDB官方文档指出对于append表最大127个并发实务操作，所以你不能把它用作生产业务系统数据库，对于高并发并不合适！</strong>对于频繁的数据插入操作，我们通常不用insert操作，用copy命令，后面我们会介绍。</p><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><pre><code>gptest=# UPDATE products SET price = 10 WHERE price = 9.99;UPDATE 2gptest=# select * from products;  name  | price | product_no --------+-------+------------ Bread  |  1.99 |          2 Cheese | 10.00 |          1 Cheese | 10.00 |          1 Milk   |  2.99 |          3(4 rows)</code></pre><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><pre><code>gptest=# DELETE FROM products WHERE price = 10;DELETE 2gptest=# select * from products; name  | price | product_no -------+-------+------------ Milk  |  2.99 |          3 Bread |  1.99 |          2(2 rows)</code></pre><h2 id="清空表数据"><a href="#清空表数据" class="headerlink" title="清空表数据"></a>清空表数据</h2><pre><code>gptest=# truncate table products;TRUNCATE TABLEgptest=# select * from products;  name | price | product_no ------+-------+------------(0 rows)</code></pre><p>GPDB的删除和更新操作，并不是直接物理删除数据，而是对数据打了一个标志，select查询的时候看不到而已，GPDB会定时自动清空这些数据，回收空间。当然你也可以手动运行<strong><em>VACUUM</em></strong> 命令来手动回收空间。</p><pre><code>VACUUM products</code></pre><p>删除数据后，最好运行一下VACUUM，<strong>对于大表，不要轻易做VACUUM！</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>greenplum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GreenPlum的那些事《三》——常用操作</title>
    <link href="/2019/01/23/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%B8%89%E3%80%8B%E2%80%94%E2%80%94%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2019/01/23/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%B8%89%E3%80%8B%E2%80%94%E2%80%94%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>我们前面已经说了，GPDB是一个列式数据库，数据库都有什么特性呢？都能做什么呢？熟悉MySQL，Oracle的同学可能就比较清楚关系型数据库的管理，下面我们就来说下GPDB的一些管理和常用操作。</p><p><img src="https://upload-images.jianshu.io/upload_images/4579636-a5851a0738b231e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="数据库常用操作"><br>数据库常用操作分为:创建数据库、创建schema、创建资源池、创建角色、创建用户、创建表。下面我们一一来说下GPDB这些常用操作，和关系型数据库MYSQL有什么不同呢？</p><ol><li><p>创建数据库</p><p>gp_sydb=# CREATE DATABASE GPTEST;<br>CREATE DATABASE</p><p>删除数据库</p><p>gp_sydb=# DROP DATABASE GPTEST;<br>DROP DATABASE</p><p>你也可以通过 createdb  创建数据库</p><p> [gpadmin@mpp01 ~]$ createdb -h mpp01 -p 5432 GPTEST </p></li></ol><p>查看创建的数据库：</p><pre><code>gp_sydb=# \l                  List of databases   Name    |  Owner  | Encoding |  Access privileges  -----------+---------+----------+--------------------- GPTEST    | gpadmin | UTF8     |  gp_sydb   | gpadmin | UTF8     |  postgres  | gpadmin | UTF8     |  template0 | gpadmin | UTF8     | =c/gpadmin                                          : gpadmin=CTc/gpadmin template1 | gpadmin | UTF8     | =c/gpadmin                                          : gpadmin=CTc/gpadmin(5 rows)</code></pre><ol start="2"><li><p>创建schema</p><p>创建schema</p><p>GPTEST=# CREATE SCHEMA bdp;<br>CREATE SCHEMA</p></li></ol><p>查看schema</p><pre><code>GPTEST=# \dn       List of schemas        Name        |  Owner  --------------------+--------- bdp                | gpadmin gp_toolkit         | gpadmin information_schema | gpadmin pg_aoseg           | gpadmin pg_bitmapindex     | gpadmin pg_catalog         | gpadmin pg_toast           | gpadmin public             | gpadmin(8 rows)</code></pre><p>查看当前的schema</p><pre><code>GPTEST=# SELECT current_schema(); current_schema ---------------- public(1 row)</code></pre><p>可以看到当前schema是public，这是创建用户的时候，我们没有给它分配schema，那就是用默认的schema public。<br>把新建的schema赋给数据库gptest</p><pre><code>gptest=# \dn       List of schemas        Name        |  Owner  --------------------+--------- bdp                | gpadmin gp_toolkit         | gpadmin information_schema | gpadmin pg_aoseg           | gpadmin pg_bitmapindex     | gpadmin pg_catalog         | gpadmin pg_toast           | gpadmin public             | gpadmin(8 rows)gptest=# ALTER DATABASE GPTEST SET search_path TO bdp,                                                                                                    public, pg_catalog;ALTER DATABASEgptest=# SELECT current_schema(); current_schema ---------------- bdp(1 row)</code></pre><p>可以看到赋了新的schema。</p><ol start="3"><li>创建角色</li></ol><p>创建角色，如果有很多用户对于一批表都有一样的权限，这时候可以创建一个角色，把这些权限先赋给角色，然后把角色赋权给各个用户。</p><pre><code>gptest=# create role selectbdp;CREATE ROLEgptest=# \du                                                                      List of roles Role name |                                                           Attributes                                                            | Member of -----------+---------------------------------------------------------------------------------------------------------------------------------+----------- bdp01     |                                                                                                                                 | {} gpadmin   | Superuser, Create role, Create DB, Ext gpfdist Table, Wri Ext gpfdist Table, Ext http Table, Ext hdfs Table, Wri Ext hdfs Table | {} selectbdp | Cannot login                                                                                                                    | {}gptest=# </code></pre><p>可以看到角色已经创建成功。<br>赋权角色。</p><pre><code>gptest=# grant selectbdp to gpadmin;     GRANT ROLE</code></pre><p>角色其实就是一个用户组。</p><ol start="4"><li>创建用户：</li></ol><pre><code>gptest=# create user bdp01 WITH PASSWORD &apos;passwd123&apos;;NOTICE:  resource queue required -- using default resource queue &quot;pg_default&quot;CREATE ROLEgptest=# </code></pre><p>使用用户登录：</p><pre><code>psql -Ubdp01 -d gptest -w &apos;passwd123&apos;</code></pre><p>发现报错了：</p><pre><code>[gpadmin@mpp01 gpseg-1]$ psql -Ubdp01 -d gptest -w &apos;passwd123&apos;Password for user bdp01: psql: FATAL:  no pg_hba.conf entry for host &quot;[local]&quot;, user &quot;bdp01&quot;, database &quot;gptest&quot;, SSL off</code></pre><p>GPDB登录需要在pg_hba.conf文件中添加信任的用户：</p><pre><code>local    all         bdp01      trust</code></pre><p>添加后，使配置文件生效，再次登录：</p><pre><code>[gpadmin@mpp01 gpseg-1]$ psql -Ubdp01 -d gptest -w &apos;passwd123&apos;psql: warning: extra command-line argument &quot;passwd123&quot; ignoredpsql (8.3.23)Type &quot;help&quot; for help.gptest=&gt; </code></pre><p>登录成功！</p><ol start="5"><li>创建资源队列</li></ol><p>为什么要创建资源队列呢？我们知道一个数据库肯定不是给一个用户使用的，通常是有ETL用户，进行数据加载，数据清洗。还有WEB端用户进行查询，还有个人用户进行开发查询使用等等。这么多用户，如果不进行资源队列管控，那么就会出现资源争抢现象，影响线上应用功能。比如一个新手开发人员写了一个比较菜的查询语句，占用了大量资源，此时数据库的其他查询用户都需要排队等待了。再比如加载数据是需要使用大量资源，那么也会影响查询性能，以上你会发现，你需要把不同类型的操作进行资源隔离，这就是为什么要有资源队列了。<br>查看已有的资源队列：</p><pre><code>gptest=&gt; SELECT rolname, rsqname FROM pg_roles, gp_toolkit.gp_resqueue_statusgptest-&gt; WHERE pg_roles.rolresqueue=gp_toolkit.gp_resqueue_status.queueid;  rolname  |  rsqname   -----------+------------ bdp01     | pg_default selectbdp | pg_default gpadmin   | pg_default(3 rows)</code></pre><p>创建一个新的资源队列：</p><pre><code>gptest=#  create resource queue load_queue with (active_statements=3,MEMORY_LIMIT=&apos;1024MB&apos;,PRIORITY=LOW);                                                 CREATE QUEUE</code></pre><p>把创建的资源队列赋权给刚才创建的用户bdp01:</p><pre><code>gptest=# ALTER USER bdp01  resource queue load_queue;                                              ALTER ROLE</code></pre><p>再次查询资源池分配情况：</p><pre><code>gptest=# SELECT rolname, rsqname FROM pg_roles, gp_toolkit.gp_resqueue_status                                                                             WHERE pg_roles.rolresqueue=gp_toolkit.gp_resqueue_status.queueid;  rolname  |  rsqname   -----------+------------ bdp01     | load_queue selectbdp | pg_default gpadmin   | pg_default(3 rows)</code></pre><p>可以看到bpd01已经使用了新的资源池了。</p><ul><li>创建表<br>简单的建表语句，此处不在讲解了，来说两个地方，一个是分区，一个是分布键。</li><li>分区：<br>来看下分区的数据结构</li></ul><p><img src="http://docs.greenplum.org/5150/admin_guide/graphics/partitions.jpg" srcset="/img/loading.gif" alt="分区数据结构"></p><ul><li></li></ul><blockquote><p>分区是把一张大表按照适合的维度进行分割，通过表的继承，规则，约束实现。<br>并不是每个表都适合分区，只有很大的表才适合分区，应为分区多了会增加表的元数据信息，特别是多级分区。如果一个表被按照日和城市划分并且有1000个日以及1000个城市，那么分区的总数就是一百万。列存表会把每一列存在一个物理表中，因此如果这个表有100个列，系统就需要为该表管理一亿个文件。一方面Linux的iNode可能不会有这么大，就会出现文件查询报错等，分区过多了，对于数据库停止和恢复也会造成很大影响的。所以建立分区表的时候，对分区进行自动的创建和删除，以保障合适的数据周期很重要。</p><ul><li>分布键  在MPP架构中，一个查询是需要从所有segment获取数据然后在master汇总得到结果的。那么这样，影响查询性能的就有两个问题，查询最慢的segment和网络带宽。分布键就是为了解决第一个问题，让数据尽可能均匀的分布在每个segment上，从而避免数据倾斜导致的查询效率问题。第二个网络问题，MPP数据集群搭建要求集群内部为万兆网连接，并且机器配置一样，从而避免影响。<br><strong>分布键一般选择主键，比如手机号等。</strong><br><strong>尽量选择经常需要 JOIN 的列，当关联键和分布键均一致时，可以在 Segment 中完成 JOIN，不需要重分布或者广播小表。</strong></li></ul></blockquote><p>以上就是GPDB简单的管理流程，后面我们会再介绍更深入的查询优化和管理知识。</p>]]></content>
    
    
    
    <tags>
      
      <tag>greenplum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GreenPlum的那些事《二》——GreenPlun启动报错</title>
    <link href="/2019/01/22/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%BA%8C%E3%80%8B%E2%80%94%E2%80%94GreenPlun%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/"/>
    <url>/2019/01/22/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%BA%8C%E3%80%8B%E2%80%94%E2%80%94GreenPlun%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>在配置好GreenPlum过程中，需要注意一下几点：</p><ol><li>找好安装包</li><li>安装依赖，Gun版本需要注意</li><li>详细安装步骤参考<a href="https://blog.csdn.net/u014646662/article/details/82827563" target="_blank" rel="noopener">Greenplum安装介绍</a></li></ol><p>  自己是电脑虚拟机安装的中间出现很多报错，度娘加经验解决。最后启动还是报错，发现是资源不足，所以关闭了mirror，减少了segment。然后启动还是报错：</p><pre><code>&gt;     &gt; 20190122:20:23:14:003437 gpstart:mpp01:gpadmin-[INFO]:-Commencing parallel segment instance&gt; startup, please wait...&gt;     ... &gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-Process results...&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-----------------------------------------------------&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-   Successful segment starts                                            =&gt; 3&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-   Failed segment starts                                                = 0&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-   Skipped segment starts (segments are marked down in configuration)   = 0&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-----------------------------------------------------&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-Successfully started 3 of 3 segment&gt; instances &gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-----------------------------------------------------&gt;     20190122:20:23:17:003437 gpstart:mpp01:gpadmin-[INFO]:-Starting Master instance mpp01 directory /opt/greenplum/data/master/gpseg-1 &gt;     20190122:20:23:18:003437 gpstart:mpp01:gpadmin-[INFO]:-Command pg_ctl reports Master mpp01 instance active&gt;     20190122:20:23:19:003437 gpstart:mpp01:gpadmin-[WARNING]:-FATAL:  DTM initialization: failure during startup recovery, retry failed,&gt; check segment status (cdbtm.c:1517)&gt;     20190122:20:23:19:003437 gpstart:mpp01:gpadmin-[INFO]:-No standby master configured.  skipping...&gt;     20190122:20:23:19:003437 gpstart:mpp01:gpadmin-[INFO]:-Check status of database with gpstate utility</code></pre><p>查看日志没有找到什么原因，后台度娘发现了，原来是防火墙没有关闭。那么就来关闭防火墙：</p><pre><code>/etc/init.d/iptables stop[root@mpp03 ~]# /etc/init.d/iptables stop  iptables: Setting chains to policy ACCEPT: filter          [  OK  ]iptables: Flushing firewall rules:                         [  OK  ]iptables: Unloading modules:                               [  OK  ]</code></pre><p>  在3台机器上都关闭防火墙操作，然后启动</p><pre><code>gpstart    20190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-Process results...20190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-----------------------------------------------------20190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-   Successful segment starts                                            = 320190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-   Failed segment starts                                                = 020190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-   Skipped segment starts (segments are marked down in configuration)   = 020190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-----------------------------------------------------20190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-Successfully started 3 of 3 segment instances 20190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-----------------------------------------------------20190122:20:28:01:004200 gpstart:mpp01:gpadmin-[INFO]:-Starting Master instance mpp01 directory /opt/greenplum/data/master/gpseg-1 20190122:20:28:02:004200 gpstart:mpp01:gpadmin-[INFO]:-Command pg_ctl reports Master mpp01 instance active20190122:20:28:02:004200 gpstart:mpp01:gpadmin-[INFO]:-No standby master configured.  skipping...20190122:20:28:02:004200 gpstart:mpp01:gpadmin-[INFO]:-Database successfully started</code></pre><p>启动成功！</p><pre><code>psql[gpadmin@mpp01 ~]$ psqlpsql (8.3.23)Type &quot;help&quot; for help.gp_sydb=# </code></pre><p>启动成功了，开始下面的学习吧</p>]]></content>
    
    
    
    <tags>
      
      <tag>GreenPlum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GreenPlum的那些事《一》——GreenPlum数据库介绍</title>
    <link href="/2019/01/22/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%B8%80%E3%80%8B%E2%80%94%E2%80%94GreenPlum%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D/"/>
    <url>/2019/01/22/GreenPlum%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%B8%80%E3%80%8B%E2%80%94%E2%80%94GreenPlum%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="1-数据存储"><a href="#1-数据存储" class="headerlink" title="1. 数据存储"></a><strong>1. 数据存储</strong></h2><p><strong>行式数据库</strong>是按照行存储的，行存储就是各行放入连续的物理位置，就行我们平时写字一样，一行一行的写，读取的时候也是一行一行的读取。像SQL server,Oracle，mysql等传统的关系型数据库都属于行式数据库范畴。<br><strong>列式数据库</strong>是按照列存储的，列存储是把多行数据的每一列按照列存储在磁盘，就像一把数据写入excel表格中，每次按照列读取数据，像Vertica,GreenPlum,HBase(HBase其实不是真正的列式数据库，是按照列簇存储的)。<br><img src="https://img-blog.csdnimg.cn/20190109192442998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dpbmR5UUNG,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="列存储和行存储对比"></p><h2 id="2-GreenPlum架构"><a href="#2-GreenPlum架构" class="headerlink" title="2. GreenPlum架构"></a><strong>2. GreenPlum架构</strong></h2><p><strong>massively parallel processing 简称MPP，即无共享、大规模并行处理。</strong><br><img src="https://img-blog.csdnimg.cn/2019010919313313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dpbmR5UUNG,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="MPP架构"></p><blockquote><p>MPP架构有如下特点：</p><ul><li>Share Nothing节点之间数据不共享，只有通过网络连接实现的协同，每个节点有独立的存储和内存。</li><li>数据根据某种规则(如Hash)散布到各个节点</li><li>计算任务也是会发布到各个节点并行执行，最后再将结果聚合到整体返回</li><li>用户使用时会看做整体</li></ul></blockquote><p>Greenplum 数据库软件将数据平均分布到系统的所有节点服务器上，所以节点存储每张表或表分区的部分行，所有数据加载和查询都是自动在各个节点服务器上并行运行，并且该架构支持扩展到上万个节点。</p><p><strong>压缩数据</strong><br>根据数据类型、基数自动进行数据压缩，支持多种压缩算法，压缩比通常可达10:1左右，支持直接访问编码数据的数据值，大大节省在数据查询期间的CPU开销，获得相应有效 I/O 性能提升。</p><pre><code>所以在此说明下，建表的时候字段类型一定要选择合适的类型，比如数字类型就选数字类型，不要选字符类型，使用的时候在转换，时间类型也一样。</code></pre><p>以上简单的介绍了GPDB的一些特性，在使用中优化就要依据这些特性来的。后期会逐渐介绍GPDB的使用和优化。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十七）——Vertica消费kafka答疑</title>
    <link href="/2018/11/20/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94Vertica%E6%B6%88%E8%B4%B9kafka%E7%AD%94%E7%96%91/"/>
    <url>/2018/11/20/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94Vertica%E6%B6%88%E8%B4%B9kafka%E7%AD%94%E7%96%91/</url>
    
    <content type="html"><![CDATA[<p>关于如何消费kafka数据，请参看<a href="https://www.jianshu.com/p/3ee7e4405f2b" target="_blank" rel="noopener">Vertica的这些事（十四）——Vertica实时消费kafka实现</a><br>最近有小伙伴提出了消费kafka的一些疑问，答疑如下：</p><p>#####1、    Vertica消费kafka机制是什么？</p><blockquote><p>Vertica通过scheduler来按定义的频度调度执行copy table from kafkasource(…)来从kafka的主题加载数据。</p></blockquote><p>#####2、    Vertica消费kafka的偏移量是怎么维护的？</p><blockquote><p>Vertica的scheduler会把每个主题消费到的偏移量存储到表stream_microbatch_history中（schema由scheduler的参数指定和创建），没加载一批就会scheduler就会给它加上，下一次加载的时候会作为参数传递给kafkasource。</p></blockquote><p>#####3、    Vertica消费kafka是多个节点并发执行？资源怎么控制？</p><blockquote><p>Vertica是多个节点并行读取kafka主题多个patition的消息的。资源池的EXECUTIONPARALLELISM参数会决定节点内解析消息的并行线程数，内存等资源也由资源池控制。</p></blockquote><p>#####4、    Vertica消费kafka应该怎么监控？</p><blockquote><p>MC本身具备kafka消息加载的监控界面，表stream_microbatch_history中有详细的加载信息。</p></blockquote><p>#####5、    出现节点宕机对kafka消息读取有什么影响？</p><blockquote><p>Kafka读过的消息偏移量和业务数据都存放到Vertica中，就算Vertica集群数据不完全恢复，他们也会保证是一致的，恢复后会自动从数据库中记录的偏移量开始继续加载，不会出现数据对视。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十六）——Vertica如何建表</title>
    <link href="/2018/11/20/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94Vertica%E5%A6%82%E4%BD%95%E5%BB%BA%E8%A1%A8/"/>
    <url>/2018/11/20/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94Vertica%E5%A6%82%E4%BD%95%E5%BB%BA%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<p>大家看到题目可能会想，建表谁不会呀，还用讲嘛？但是如何建表能使你的应用查询更加快呢？</p><blockquote><p>####Anatomy of a Projection<br>The [CREATE PROJECTION]statement defines the individual elements of a projection, as the following graphic shows.<br><img src="https://upload-images.jianshu.io/upload_images/4579636-796c4929d698d573.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="image.png">The previous example contains the following significant elements:</p><p>####Column List and Encoding<br>Lists every column in the projection and defines the encoding for each column. Unlike traditional database architectures, HP Vertica operates on encoded data representations. Therefore, HP recommends that you use data encoding because it results in less disk I/O.</p><p>####Base Query<br>Identifies all the columns to incorporate in the projection through column name and table name references. The base query for large table projections can contain PK/FK joins to smaller tables.</p><p>####Sort Order<br>The sort order optimizes for a specific query or commonalities in a class of queries based on the query predicate. The best sort orders are determined by the WHERE clauses. For example, if a projection’s sort order is (x, y), and the query’s WHERE clause specifies (x=1 AND y=2), all of the needed data is found together in the sort order, so the query runs almost instantaneously.<br>You can also optimize a query by matching the projection’s sort order to the query’s GROUP BY clause. If you do not specify a sort order, HP Vertica uses the order in which columns are specified in the column definition as the projection’s sort order.<br>The ORDER BY clause specifies a projection’s sort order, which localizes logically grouped values so that a disk read can pick up many results at once. For maximum performance, do not sort projections on LONG VARBINARY and LONG VARCHAR columns.</p><p>####Segmentation<br>The segmentation clause determines whether a projection is segmented across nodes within the database. Segmentation distributes contiguous pieces of projections, calledsegments, for large and medium tables across database nodes. Segmentation maximizes database performance by distributing the load. Use SEGMENTED BY HASH to segment large table projections.<br>For small tables, use the UNSEGMENTED keyword to direct HP Vertica to replicate these tables, rather than segment them. Replication creates and stores identical copies of projections for small tables across all nodes in the cluster. Replication ensures high availability and recovery.<br>For maximum performance, do not segment projections on LONG VARBINARY and LONG VARCHAR columns.</p></blockquote><p>####以上来自官网，理解如下：</p><p>#####Projection的解析</p><p>#####Sort Order<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">1</span>、<span class="hljs-keyword">order</span> <span class="hljs-title">by</span> 后表中插入的数据是有序的，所以<span class="hljs-keyword">order</span> <span class="hljs-title">by</span> 的列就源自于你在查询语句时使用的where 字句的内容。例如，如果字句查询中有where x=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> y=<span class="hljs-number">2</span>,那么建立projection时<span class="hljs-keyword">order</span> <span class="hljs-title">by</span> (x, y)查询的时候就会迅速定位到符合条件的数据<br><span class="hljs-number">2</span>、<span class="hljs-keyword">group</span> <span class="hljs-title">by</span> 后面的字段，出现在<span class="hljs-keyword">order</span> <span class="hljs-title">by</span> 中也可以优化查询。<br><span class="hljs-number">3</span>、<span class="hljs-keyword">order</span> <span class="hljs-title">by</span> 不要建立在LONG VARBINARY <span class="hljs-keyword">and</span> LONG VARCHAR的列<br></code></pre></td></tr></table></figure></p><p>#####Segmentation<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">1</span>、Segmentation <span class="hljs-keyword">by</span> hash()就是按照某一列，打散数据，把数据均匀的分布在各个节点上，对于大表，要记得使用。所以 hash里的列是主键最好，也就是说该列数据不重复的值越多，越适合做hash.<br><span class="hljs-number">2</span>、Segmentation <span class="hljs-keyword">by</span> 的列不要用<span class="hljs-built_in">LONG</span> VARBINARY <span class="hljs-keyword">and</span> <span class="hljs-built_in">LONG</span> VARCHAR columns.<br>`<br></code></pre></td></tr></table></figure></p><p>根据以上规则建表，可以更大程度优化你的查询性能。</p>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十五）——Vertica报错TM</title>
    <link href="/2018/11/20/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94Vertica%E6%8A%A5%E9%94%99TM/"/>
    <url>/2018/11/20/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94Vertica%E6%8A%A5%E9%94%99TM/</url>
    
    <content type="html"><![CDATA[<blockquote><p>最近在用Vertica的时候碰到一个问题，Vertica在运行了一段时间后总是出现类似下面的错误<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">java.sql.SQLException: [<span class="hljs-string">Vertica</span>][<span class="hljs-symbol">VJDBC</span>](5065) ERROR: Too many ROS containers exist for the following projections:<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">projection</span>&gt;</span></span> (limit = 18078, ROS files = 12088, DV files = 5992, new files = 10)<br></code></pre></td></tr></table></figure></p></blockquote><blockquote><p>碰到找个问题就不得不说说Vertica的存储机制了。Vertica在默认情况下会把新写入的数据写入到WOS（写优化）中，然后根据一定的条件（比如说一定的时间周期）再把WOS中的数据写入到ROS（读优化）中，这时ROS有可能很多都是很小数据块的碎片，这是Vertica会在一定的时间周期后把这些ROS数据块合并成大的ROS文件。<br>这里把数据从WOS写入到ROS的过程Vertica管它叫MoveOut操作，而把零散的ROS合并成大的ROS的过程Vertica管它叫MergeOut操作。</p></blockquote><p>######好了，现在来看看我们的问题吧。错误里报的是ROS太多，那可能的原因是:</p><blockquote><ol><li>WOS写ROS太多，这个原因的原因很大的可能是每次insert/update的数据集太小，导致生成的碎片太多。</li><li>ROS太多，而配置的MoveOut和MergeOut的时间间隔太长，导致来不及做MoveOut和MergeOut。</li></ol></blockquote><p>#####好吧来看看我的应用吧</p><blockquote><ol><li>针对第一个可能的原因，确实是我们的应用的需求的问题，这个目前来说我们没法改变。</li><li>对于第二个可能的原因，我们查了一下Vertica的资料，在Vertica中默认的MergeOutInterval是600，MoveOutInterval是300。这两个参数可以通过下面的命令来查看<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">1<span class="hljs-keyword">SELECT</span> GET_CONFIG_PARAMETER(<span class="hljs-string">'MoveOutInterval'</span>);<br>2<span class="hljs-keyword">SELECT</span> GET_CONFIG_PARAMETER(<span class="hljs-string">'MergeOutInterval'</span>);<br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>由于我们的应用本身会产生很多的ROS碎片，所以我们想到了是不是可以通过减小MoveOut和MergeOut的Interval来让Vertica尽快的做MoveOut和MergeOut。因此我们修改了Vertica的参数:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">1<span class="hljs-keyword">SELECT</span> SET_CONFIG_PARAMETER(<span class="hljs-string">'MoveOutInterval'</span>, <span class="hljs-number">60</span>);<br>2<span class="hljs-keyword">SELECT</span> SET_CONFIG_PARAMETER(<span class="hljs-string">'MergeOutInterval'</span>, <span class="hljs-number">30</span>);<br></code></pre></td></tr></table></figure></p></blockquote><blockquote><p>在修改了这两个参数以后，我们的应用确实在运行了很长时间后都没有再出现上面的问题了。<br>其实关于这个问题，还有几个参数可以调节，具体资料可以参考<br><a href="http://my.vertica.com/docs/7.0.x/HTML/index.htm#Authoring/AdministratorsGuide/ConfiguringTheDB/TupleMoverParameters.htm%3FTocPath%3DAdministrator%27s%20Guide|Configuring%20the%20Database|Configuration%20Parameters|Configuring%20HP%20Vertica%20At%20the%20Command%20Line|_____2" title="Vertica Tuple Mover Parameters" target="_blank" rel="noopener">Vertica Tuple Mover Parameters</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flink的这些事（二）——Flink开发环境搭建</title>
    <link href="/2018/11/10/Flink%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94Flink%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2018/11/10/Flink%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94Flink%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>#IEDA开发环境</p><p>###1、安装java环境<br>参考上一篇文章<a href="https://www.jianshu.com/p/aa25c07fb807" target="_blank" rel="noopener">Flink的这些事（一）——Flink部署</a></p><p>###2、安装maven<br>参考博客<a href="https://www.jianshu.com/p/183d4f229103" target="_blank" rel="noopener">Maven安装与配置</a></p><p>###3、配置IDEA<br>参考博客<a href="https://www.jianshu.com/p/467bd544998d" target="_blank" rel="noopener">如何使用IntelliJ IDEA 配置Maven</a></p><p>###4、pom文件设置<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="xml"><span class="php"><span class="hljs-meta">&lt;?</span>xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"UTF-8"</span><span class="hljs-meta">?&gt;</span></span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0"</span><br>         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span><br>         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-dev<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">encoding</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scala.version</span>&gt;</span>2.11.12<span class="hljs-tag">&lt;/<span class="hljs-name">scala.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scala.binary.version</span>&gt;</span>2.11<span class="hljs-tag">&lt;/<span class="hljs-name">scala.binary.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hadoop.version</span>&gt;</span>2.7.6<span class="hljs-tag">&lt;/<span class="hljs-name">hadoop.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">flink.version</span>&gt;</span>1.6.1<span class="hljs-tag">&lt;/<span class="hljs-name">flink.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.scala-lang<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>scala-library<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;scala.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-streaming-java_$</span><span class="hljs-template-variable">&#123;scala.binary.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-scala_$</span><span class="hljs-template-variable">&#123;scala.binary.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-streaming-scala_$</span><span class="hljs-template-variable">&#123;scala.binary.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-table_$</span><span class="hljs-template-variable">&#123;scala.binary.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-clients_$</span><span class="hljs-template-variable">&#123;scala.binary.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-connector-kafka-0.10_$</span><span class="hljs-template-variable">&#123;scala.binary.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;flink.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hadoop<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hadoop-client<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;hadoop.version&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.1.38<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.22<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">sourceDirectory</span>&gt;</span>src/main/scala<span class="hljs-tag">&lt;/<span class="hljs-name">sourceDirectory</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">testSourceDirectory</span>&gt;</span>src/test/scala<span class="hljs-tag">&lt;/<span class="hljs-name">testSourceDirectory</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.alchim31.maven<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>scala-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>testCompile<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">args</span>&gt;</span><br>                                <span class="hljs-comment">&lt;!-- &lt;arg&gt;-make:transitive&lt;/arg&gt; --&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">arg</span>&gt;</span>-dependencyfile<span class="hljs-tag">&lt;/<span class="hljs-name">arg</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">arg</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.build.directory&#125;</span><span class="xml">/.scala_dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">arg</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">args</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.18.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">useFile</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">useFile</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">disableXmlReport</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">disableXmlReport</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*Test.*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*Suite.*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-shade-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>shade<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">filters</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">artifact</span>&gt;</span>*:*<span class="hljs-tag">&lt;/<span class="hljs-name">artifact</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">excludes</span>&gt;</span><br>                                        <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>META-INF/*.SF<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                                        <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>META-INF/*.DSA<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                                        <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>META-INF/*.RSA<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;/<span class="hljs-name">excludes</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">filters</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">transformers</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">transformer</span> <span class="hljs-attr">implementation</span>=<span class="hljs-string">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">mainClass</span>&gt;</span>org.apache.spark.WordCount<span class="hljs-tag">&lt;/<span class="hljs-name">mainClass</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">transformer</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">transformers</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span></span><br></code></pre></td></tr></table></figure></p><p>###5、代码示例<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><br><span class="hljs-keyword">import</span> org.apache.flink.api.common.functions.FlatMapFunction;<br><span class="hljs-keyword">import</span> org.apache.flink.api.java.utils.ParameterTool;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.datastream.DataStream;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.datastream.DataStreamSource;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.windowing.time.Time;<br><span class="hljs-keyword">import</span> org.apache.flink.util.Collector;<br><br><span class="hljs-comment">/**<br> * Author: qincf<br> * Date: 2018/11/02<br> * Desc: 使用flink对指定窗口内的数据进行实时统计，最终把结果打印出来<br> *       先在目标主机1.1.1.1机器上执行nc -l 9000<br> */</span><br><span class="hljs-keyword">public</span> class StreamingWindowWordCount &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(<span class="hljs-keyword">String</span>[] args) throws Exception &#123;<br>        <span class="hljs-comment">//定义socket的端口号</span><br>        <span class="hljs-keyword">int</span> port;<br>        <span class="hljs-built_in">try</span>&#123;<br>            ParameterTool parameterTool = ParameterTool.fromArgs(args);<br>            port = parameterTool.getInt(<span class="hljs-string">"port"</span>);<br>        &#125;<span class="hljs-built_in">catch</span> (Exception e)&#123;<br>            System.err.<span class="hljs-built_in">println</span>(<span class="hljs-string">"没有指定port参数，使用默认值9000"</span>);<br>            port = <span class="hljs-number">9000</span>;<br>        &#125;<br>        <span class="hljs-comment">//获取运行环境</span><br>        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();<br>        <span class="hljs-comment">//连接socket获取输入的数据</span><br>        DataStreamSource&lt;<span class="hljs-keyword">String</span>&gt; <span class="hljs-built_in">text</span> = env.socketTextStream(<span class="hljs-string">"1.1.1.1"</span>, port, <span class="hljs-string">"\n"</span>);<br>        <span class="hljs-comment">//计算数据</span><br>        DataStream&lt;WordWithCount&gt; windowCount = <span class="hljs-built_in">text</span>.flatMap(<span class="hljs-keyword">new</span> FlatMapFunction&lt;<span class="hljs-keyword">String</span>, WordWithCount&gt;() &#123;<br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> flatMap(<span class="hljs-keyword">String</span> value, Collector&lt;WordWithCount&gt; out) throws Exception &#123;<br>                <span class="hljs-keyword">String</span>[] splits = value.split(<span class="hljs-string">"\\s"</span>);<br>                <span class="hljs-built_in">for</span> (<span class="hljs-keyword">String</span> <span class="hljs-keyword">word</span>:splits) &#123;<br>                    out.collect(<span class="hljs-keyword">new</span> WordWithCount(<span class="hljs-keyword">word</span>,<span class="hljs-number">1</span>L));<br>                &#125;<br>            &#125;<br>        &#125;)<span class="hljs-comment">//打平操作，把每行的单词转为&lt;word,count&gt;类型的数据</span><br>                <span class="hljs-comment">//针对相同的word数据进行分组</span><br>                .keyBy(<span class="hljs-string">"word"</span>)<br>                <span class="hljs-comment">//指定计算数据的窗口大小和滑动窗口大小</span><br>                .timeWindow(Time.seconds(<span class="hljs-number">2</span>),Time.seconds(<span class="hljs-number">1</span>))<br>                .sum(<span class="hljs-string">"count"</span>);<br>        <span class="hljs-comment">//获取可视化JSON</span><br>        System.out.<span class="hljs-built_in">println</span>(env.getExecutionPlan());<br>        <span class="hljs-comment">//把数据打印到控制台,使用一个并行度</span><br>        windowCount.<span class="hljs-built_in">print</span>().setParallelism(<span class="hljs-number">1</span>);<br>        <span class="hljs-comment">//注意：因为flink是懒加载的，所以必须调用execute方法，上面的代码才会执行</span><br>        env.execute(<span class="hljs-string">"streaming word count"</span>);<br><br><br><br>    &#125;<br><br>    <span class="hljs-comment">/**<br>     * 主要为了存储单词以及单词出现的次数<br>     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> class WordWithCount&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-keyword">word</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">long</span> count;<br>        <span class="hljs-keyword">public</span> WordWithCount()&#123;&#125;<br>        <span class="hljs-keyword">public</span> WordWithCount(<span class="hljs-keyword">String</span> <span class="hljs-keyword">word</span>, <span class="hljs-keyword">long</span> count) &#123;<br>            <span class="hljs-keyword">this</span>.<span class="hljs-keyword">word</span> = <span class="hljs-keyword">word</span>;<br>            <span class="hljs-keyword">this</span>.count = count;<br>        &#125;<br><br>        @Override<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> toString() &#123;<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">"WordWithCount&#123;"</span> +<br>                    <span class="hljs-string">"word='"</span> + <span class="hljs-keyword">word</span> + <span class="hljs-string">'\''</span> +<br>                    <span class="hljs-string">", count="</span> + count +<br>                    <span class="hljs-string">'&#125;'</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure></p><p>###6、测试步骤<br>首先在1.1.1.1机器上使用nc命令模拟数据发送<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">nc -l <span class="hljs-number">9000</span><br></code></pre></td></tr></table></figure></p><p>然后在IEDA中运营StreamingWindowWordCount程序<br>在主机上输入字符<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[root<span class="hljs-symbol">@data01]</span><span class="hljs-meta"># nc -l 9000</span><br>a<br>a<br>b<br>c<br>d<br>d<br></code></pre></td></tr></table></figure></p><p>此时运行程序后，IDEA中会打印处结果<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs undefined">E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\b</span>in<span class="hljs-symbol">\j</span>ava.exe "-javaagent:E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\I</span>DEA<span class="hljs-symbol">\I</span>ntelliJ IDEA Community Edition 2018.2.5<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\i</span>dea_rt.jar=61830:E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\I</span>DEA<span class="hljs-symbol">\I</span>ntelliJ IDEA Community Edition 2018.2.5<span class="hljs-symbol">\b</span>in" -Dfile.encoding=UTF-8 -classpath E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\c</span>harsets.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\d</span>eploy.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\a</span>ccess-bridge-64.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\c</span>ldrdata.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\d</span>nsns.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\j</span>access.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\j</span>fxrt.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\l</span>ocaledata.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\n</span>ashorn.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\s</span>unec.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\s</span>unjce_provider.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\s</span>unmscapi.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\s</span>unpkcs11.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\e</span>xt<span class="hljs-symbol">\z</span>ipfs.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\j</span>avaws.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\j</span>ce.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\j</span>fr.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\j</span>fxswt.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\j</span>sse.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\m</span>anagement-agent.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\p</span>lugin.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\r</span>esources.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\J</span>ava<span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\r</span>t.jar;E:<span class="hljs-symbol">\c</span>ode<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\t</span>arget<span class="hljs-symbol">\c</span>lasses;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>cala-lang<span class="hljs-symbol">\s</span>cala-library<span class="hljs-symbol">\2</span>.11.12<span class="hljs-symbol">\s</span>cala-library-2.11.12.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-java<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-java-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-core<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-core-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-annotations<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-annotations-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-metrics-core<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-metrics-core-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\e</span>sotericsoftware<span class="hljs-symbol">\k</span>ryo<span class="hljs-symbol">\k</span>ryo<span class="hljs-symbol">\2</span>.24.0<span class="hljs-symbol">\k</span>ryo-2.24.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\e</span>sotericsoftware<span class="hljs-symbol">\m</span>inlog<span class="hljs-symbol">\m</span>inlog<span class="hljs-symbol">\1</span>.2<span class="hljs-symbol">\m</span>inlog-1.2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\o</span>bjenesis<span class="hljs-symbol">\o</span>bjenesis<span class="hljs-symbol">\2</span>.1<span class="hljs-symbol">\o</span>bjenesis-2.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-collections<span class="hljs-symbol">\c</span>ommons-collections<span class="hljs-symbol">\3</span>.2.2<span class="hljs-symbol">\c</span>ommons-collections-3.2.2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\c</span>ommons<span class="hljs-symbol">\c</span>ommons-compress<span class="hljs-symbol">\1</span>.4.1<span class="hljs-symbol">\c</span>ommons-compress-1.4.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\t</span>ukaani<span class="hljs-symbol">\x</span>z<span class="hljs-symbol">\1</span>.0<span class="hljs-symbol">\x</span>z-1.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-shaded-asm<span class="hljs-symbol">\5</span>.0.4-4.0<span class="hljs-symbol">\f</span>link-shaded-asm-5.0.4-4.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\c</span>ommons<span class="hljs-symbol">\c</span>ommons-lang3<span class="hljs-symbol">\3</span>.3.2<span class="hljs-symbol">\c</span>ommons-lang3-3.3.2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\c</span>ommons<span class="hljs-symbol">\c</span>ommons-math3<span class="hljs-symbol">\3</span>.5<span class="hljs-symbol">\c</span>ommons-math3-3.5.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>lf4j<span class="hljs-symbol">\s</span>lf4j-api<span class="hljs-symbol">\1</span>.7.7<span class="hljs-symbol">\s</span>lf4j-api-1.7.7.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\g</span>oogle<span class="hljs-symbol">\c</span>ode<span class="hljs-symbol">\f</span>indbugs<span class="hljs-symbol">\j</span>sr305<span class="hljs-symbol">\1</span>.3.9<span class="hljs-symbol">\j</span>sr305-1.3.9.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>orce-shading<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>orce-shading-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-streaming-java_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-streaming-java_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-runtime_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-runtime_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-queryable-state-client-java_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-queryable-state-client-java_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-hadoop-fs<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-hadoop-fs-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-io<span class="hljs-symbol">\c</span>ommons-io<span class="hljs-symbol">\2</span>.4<span class="hljs-symbol">\c</span>ommons-io-2.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-shaded-netty<span class="hljs-symbol">\4</span>.1.24.Final-4.0<span class="hljs-symbol">\f</span>link-shaded-netty-4.1.24.Final-4.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-shaded-jackson<span class="hljs-symbol">\2</span>.7.9-4.0<span class="hljs-symbol">\f</span>link-shaded-jackson-2.7.9-4.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\j</span>avassist<span class="hljs-symbol">\j</span>avassist<span class="hljs-symbol">\3</span>.19.0-GA<span class="hljs-symbol">\j</span>avassist-3.19.0-GA.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>ypesafe<span class="hljs-symbol">\a</span>kka<span class="hljs-symbol">\a</span>kka-actor_2.11<span class="hljs-symbol">\2</span>.4.20<span class="hljs-symbol">\a</span>kka-actor_2.11-2.4.20.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>ypesafe<span class="hljs-symbol">\c</span>onfig<span class="hljs-symbol">\1</span>.3.0<span class="hljs-symbol">\c</span>onfig-1.3.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>cala-lang<span class="hljs-symbol">\m</span>odules<span class="hljs-symbol">\s</span>cala-java8-compat_2.11<span class="hljs-symbol">\0</span>.7.0<span class="hljs-symbol">\s</span>cala-java8-compat_2.11-0.7.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>ypesafe<span class="hljs-symbol">\a</span>kka<span class="hljs-symbol">\a</span>kka-stream_2.11<span class="hljs-symbol">\2</span>.4.20<span class="hljs-symbol">\a</span>kka-stream_2.11-2.4.20.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\r</span>eactivestreams<span class="hljs-symbol">\r</span>eactive-streams<span class="hljs-symbol">\1</span>.0.0<span class="hljs-symbol">\r</span>eactive-streams-1.0.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>ypesafe<span class="hljs-symbol">\s</span>sl-config-core_2.11<span class="hljs-symbol">\0</span>.2.1<span class="hljs-symbol">\s</span>sl-config-core_2.11-0.2.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>ypesafe<span class="hljs-symbol">\a</span>kka<span class="hljs-symbol">\a</span>kka-protobuf_2.11<span class="hljs-symbol">\2</span>.4.20<span class="hljs-symbol">\a</span>kka-protobuf_2.11-2.4.20.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>ypesafe<span class="hljs-symbol">\a</span>kka<span class="hljs-symbol">\a</span>kka-slf4j_2.11<span class="hljs-symbol">\2</span>.4.20<span class="hljs-symbol">\a</span>kka-slf4j_2.11-2.4.20.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\c</span>lapper<span class="hljs-symbol">\g</span>rizzled-slf4j_2.11<span class="hljs-symbol">\1</span>.0.2<span class="hljs-symbol">\g</span>rizzled-slf4j_2.11-1.0.2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\g</span>ithub<span class="hljs-symbol">\s</span>copt<span class="hljs-symbol">\s</span>copt_2.11<span class="hljs-symbol">\3</span>.5.0<span class="hljs-symbol">\s</span>copt_2.11-3.5.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\x</span>erial<span class="hljs-symbol">\s</span>nappy<span class="hljs-symbol">\s</span>nappy-java<span class="hljs-symbol">\1</span>.1.4<span class="hljs-symbol">\s</span>nappy-java-1.1.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>witter<span class="hljs-symbol">\c</span>hill_2.11<span class="hljs-symbol">\0</span>.7.4<span class="hljs-symbol">\c</span>hill_2.11-0.7.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>witter<span class="hljs-symbol">\c</span>hill-java<span class="hljs-symbol">\0</span>.7.4<span class="hljs-symbol">\c</span>hill-java-0.7.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-shaded-guava<span class="hljs-symbol">\1</span>8.0-4.0<span class="hljs-symbol">\f</span>link-shaded-guava-18.0-4.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-scala_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-scala_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>cala-lang<span class="hljs-symbol">\s</span>cala-reflect<span class="hljs-symbol">\2</span>.11.12<span class="hljs-symbol">\s</span>cala-reflect-2.11.12.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>cala-lang<span class="hljs-symbol">\s</span>cala-compiler<span class="hljs-symbol">\2</span>.11.12<span class="hljs-symbol">\s</span>cala-compiler-2.11.12.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>cala-lang<span class="hljs-symbol">\m</span>odules<span class="hljs-symbol">\s</span>cala-xml_2.11<span class="hljs-symbol">\1</span>.0.5<span class="hljs-symbol">\s</span>cala-xml_2.11-1.0.5.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>cala-lang<span class="hljs-symbol">\m</span>odules<span class="hljs-symbol">\s</span>cala-parser-combinators_2.11<span class="hljs-symbol">\1</span>.0.4<span class="hljs-symbol">\s</span>cala-parser-combinators_2.11-1.0.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-streaming-scala_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-streaming-scala_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-table_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-table_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-clients_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-clients_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-optimizer_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-optimizer_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-cli<span class="hljs-symbol">\c</span>ommons-cli<span class="hljs-symbol">\1</span>.3.1<span class="hljs-symbol">\c</span>ommons-cli-1.3.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-connector-kafka-0.10_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-connector-kafka-0.10_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-connector-kafka-0.9_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-connector-kafka-0.9_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\f</span>link<span class="hljs-symbol">\f</span>link-connector-kafka-base_2.11<span class="hljs-symbol">\1</span>.6.1<span class="hljs-symbol">\f</span>link-connector-kafka-base_2.11-1.6.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\k</span>afka<span class="hljs-symbol">\k</span>afka-clients<span class="hljs-symbol">\0</span>.10.2.1<span class="hljs-symbol">\k</span>afka-clients-0.10.2.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\n</span>et<span class="hljs-symbol">\j</span>pountz<span class="hljs-symbol">\l</span>z4<span class="hljs-symbol">\l</span>z4<span class="hljs-symbol">\1</span>.3.0<span class="hljs-symbol">\l</span>z4-1.3.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-client<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-client-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-common<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-common-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\g</span>oogle<span class="hljs-symbol">\g</span>uava<span class="hljs-symbol">\g</span>uava<span class="hljs-symbol">\1</span>1.0.2<span class="hljs-symbol">\g</span>uava-11.0.2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\x</span>mlenc<span class="hljs-symbol">\x</span>mlenc<span class="hljs-symbol">\0</span>.52<span class="hljs-symbol">\x</span>mlenc-0.52.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-httpclient<span class="hljs-symbol">\c</span>ommons-httpclient<span class="hljs-symbol">\3</span>.1<span class="hljs-symbol">\c</span>ommons-httpclient-3.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-codec<span class="hljs-symbol">\c</span>ommons-codec<span class="hljs-symbol">\1</span>.4<span class="hljs-symbol">\c</span>ommons-codec-1.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-net<span class="hljs-symbol">\c</span>ommons-net<span class="hljs-symbol">\3</span>.1<span class="hljs-symbol">\c</span>ommons-net-3.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\m</span>ortbay<span class="hljs-symbol">\j</span>etty<span class="hljs-symbol">\j</span>etty-sslengine<span class="hljs-symbol">\6</span>.1.26<span class="hljs-symbol">\j</span>etty-sslengine-6.1.26.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\j</span>avax<span class="hljs-symbol">\s</span>ervlet<span class="hljs-symbol">\j</span>sp<span class="hljs-symbol">\j</span>sp-api<span class="hljs-symbol">\2</span>.1<span class="hljs-symbol">\j</span>sp-api-2.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-logging<span class="hljs-symbol">\c</span>ommons-logging<span class="hljs-symbol">\1</span>.1.3<span class="hljs-symbol">\c</span>ommons-logging-1.1.3.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\l</span>og4j<span class="hljs-symbol">\l</span>og4j<span class="hljs-symbol">\1</span>.2.17<span class="hljs-symbol">\l</span>og4j-1.2.17.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-lang<span class="hljs-symbol">\c</span>ommons-lang<span class="hljs-symbol">\2</span>.6<span class="hljs-symbol">\c</span>ommons-lang-2.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-configuration<span class="hljs-symbol">\c</span>ommons-configuration<span class="hljs-symbol">\1</span>.6<span class="hljs-symbol">\c</span>ommons-configuration-1.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-digester<span class="hljs-symbol">\c</span>ommons-digester<span class="hljs-symbol">\1</span>.8<span class="hljs-symbol">\c</span>ommons-digester-1.8.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-beanutils<span class="hljs-symbol">\c</span>ommons-beanutils<span class="hljs-symbol">\1</span>.7.0<span class="hljs-symbol">\c</span>ommons-beanutils-1.7.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>ommons-beanutils<span class="hljs-symbol">\c</span>ommons-beanutils-core<span class="hljs-symbol">\1</span>.8.0<span class="hljs-symbol">\c</span>ommons-beanutils-core-1.8.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\s</span>lf4j<span class="hljs-symbol">\s</span>lf4j-log4j12<span class="hljs-symbol">\1</span>.7.10<span class="hljs-symbol">\s</span>lf4j-log4j12-1.7.10.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\c</span>odehaus<span class="hljs-symbol">\j</span>ackson<span class="hljs-symbol">\j</span>ackson-core-asl<span class="hljs-symbol">\1</span>.9.13<span class="hljs-symbol">\j</span>ackson-core-asl-1.9.13.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\c</span>odehaus<span class="hljs-symbol">\j</span>ackson<span class="hljs-symbol">\j</span>ackson-mapper-asl<span class="hljs-symbol">\1</span>.9.13<span class="hljs-symbol">\j</span>ackson-mapper-asl-1.9.13.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\a</span>vro<span class="hljs-symbol">\a</span>vro<span class="hljs-symbol">\1</span>.7.4<span class="hljs-symbol">\a</span>vro-1.7.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\t</span>houghtworks<span class="hljs-symbol">\p</span>aranamer<span class="hljs-symbol">\p</span>aranamer<span class="hljs-symbol">\2</span>.3<span class="hljs-symbol">\p</span>aranamer-2.3.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\g</span>oogle<span class="hljs-symbol">\p</span>rotobuf<span class="hljs-symbol">\p</span>rotobuf-java<span class="hljs-symbol">\2</span>.5.0<span class="hljs-symbol">\p</span>rotobuf-java-2.5.0.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\g</span>oogle<span class="hljs-symbol">\c</span>ode<span class="hljs-symbol">\g</span>son<span class="hljs-symbol">\g</span>son<span class="hljs-symbol">\2</span>.2.4<span class="hljs-symbol">\g</span>son-2.2.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-auth<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-auth-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>ttpcomponents<span class="hljs-symbol">\h</span>ttpclient<span class="hljs-symbol">\4</span>.2.5<span class="hljs-symbol">\h</span>ttpclient-4.2.5.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>ttpcomponents<span class="hljs-symbol">\h</span>ttpcore<span class="hljs-symbol">\4</span>.2.4<span class="hljs-symbol">\h</span>ttpcore-4.2.4.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\d</span>irectory<span class="hljs-symbol">\s</span>erver<span class="hljs-symbol">\a</span>pacheds-kerberos-codec<span class="hljs-symbol">\2</span>.0.0-M15<span class="hljs-symbol">\a</span>pacheds-kerberos-codec-2.0.0-M15.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\d</span>irectory<span class="hljs-symbol">\s</span>erver<span class="hljs-symbol">\a</span>pacheds-i18n<span class="hljs-symbol">\2</span>.0.0-M15<span class="hljs-symbol">\a</span>pacheds-i18n-2.0.0-M15.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\d</span>irectory<span class="hljs-symbol">\a</span>pi<span class="hljs-symbol">\a</span>pi-asn1-api<span class="hljs-symbol">\1</span>.0.0-M20<span class="hljs-symbol">\a</span>pi-asn1-api-1.0.0-M20.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\d</span>irectory<span class="hljs-symbol">\a</span>pi<span class="hljs-symbol">\a</span>pi-util<span class="hljs-symbol">\1</span>.0.0-M20<span class="hljs-symbol">\a</span>pi-util-1.0.0-M20.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\c</span>urator<span class="hljs-symbol">\c</span>urator-framework<span class="hljs-symbol">\2</span>.7.1<span class="hljs-symbol">\c</span>urator-framework-2.7.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\c</span>urator<span class="hljs-symbol">\c</span>urator-client<span class="hljs-symbol">\2</span>.7.1<span class="hljs-symbol">\c</span>urator-client-2.7.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\c</span>urator<span class="hljs-symbol">\c</span>urator-recipes<span class="hljs-symbol">\2</span>.7.1<span class="hljs-symbol">\c</span>urator-recipes-2.7.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>trace<span class="hljs-symbol">\h</span>trace-core<span class="hljs-symbol">\3</span>.1.0-incubating<span class="hljs-symbol">\h</span>trace-core-3.1.0-incubating.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\z</span>ookeeper<span class="hljs-symbol">\z</span>ookeeper<span class="hljs-symbol">\3</span>.4.6<span class="hljs-symbol">\z</span>ookeeper-3.4.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-hdfs<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-hdfs-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\m</span>ortbay<span class="hljs-symbol">\j</span>etty<span class="hljs-symbol">\j</span>etty-util<span class="hljs-symbol">\6</span>.1.26<span class="hljs-symbol">\j</span>etty-util-6.1.26.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\i</span>o<span class="hljs-symbol">\n</span>etty<span class="hljs-symbol">\n</span>etty<span class="hljs-symbol">\3</span>.6.2.Final<span class="hljs-symbol">\n</span>etty-3.6.2.Final.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\i</span>o<span class="hljs-symbol">\n</span>etty<span class="hljs-symbol">\n</span>etty-all<span class="hljs-symbol">\4</span>.0.23.Final<span class="hljs-symbol">\n</span>etty-all-4.0.23.Final.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\x</span>erces<span class="hljs-symbol">\x</span>ercesImpl<span class="hljs-symbol">\2</span>.9.1<span class="hljs-symbol">\x</span>ercesImpl-2.9.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\x</span>ml-apis<span class="hljs-symbol">\x</span>ml-apis<span class="hljs-symbol">\1</span>.3.04<span class="hljs-symbol">\x</span>ml-apis-1.3.04.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\f</span>usesource<span class="hljs-symbol">\l</span>eveldbjni<span class="hljs-symbol">\l</span>eveldbjni-all<span class="hljs-symbol">\1</span>.8<span class="hljs-symbol">\l</span>eveldbjni-all-1.8.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-mapreduce-client-app<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-mapreduce-client-app-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-mapreduce-client-common<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-mapreduce-client-common-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-yarn-client<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-yarn-client-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-yarn-server-common<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-yarn-server-common-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-mapreduce-client-shuffle<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-mapreduce-client-shuffle-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-yarn-api<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-yarn-api-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-mapreduce-client-core<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-mapreduce-client-core-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-yarn-common<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-yarn-common-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\j</span>avax<span class="hljs-symbol">\x</span>ml<span class="hljs-symbol">\b</span>ind<span class="hljs-symbol">\j</span>axb-api<span class="hljs-symbol">\2</span>.2.2<span class="hljs-symbol">\j</span>axb-api-2.2.2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\j</span>avax<span class="hljs-symbol">\x</span>ml<span class="hljs-symbol">\s</span>tream<span class="hljs-symbol">\s</span>tax-api<span class="hljs-symbol">\1</span>.0-2<span class="hljs-symbol">\s</span>tax-api-1.0-2.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\j</span>avax<span class="hljs-symbol">\a</span>ctivation<span class="hljs-symbol">\a</span>ctivation<span class="hljs-symbol">\1</span>.1<span class="hljs-symbol">\a</span>ctivation-1.1.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\j</span>avax<span class="hljs-symbol">\s</span>ervlet<span class="hljs-symbol">\s</span>ervlet-api<span class="hljs-symbol">\2</span>.5<span class="hljs-symbol">\s</span>ervlet-api-2.5.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\s</span>un<span class="hljs-symbol">\j</span>ersey<span class="hljs-symbol">\j</span>ersey-core<span class="hljs-symbol">\1</span>.9<span class="hljs-symbol">\j</span>ersey-core-1.9.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\s</span>un<span class="hljs-symbol">\j</span>ersey<span class="hljs-symbol">\j</span>ersey-client<span class="hljs-symbol">\1</span>.9<span class="hljs-symbol">\j</span>ersey-client-1.9.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\c</span>odehaus<span class="hljs-symbol">\j</span>ackson<span class="hljs-symbol">\j</span>ackson-jaxrs<span class="hljs-symbol">\1</span>.9.13<span class="hljs-symbol">\j</span>ackson-jaxrs-1.9.13.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\c</span>odehaus<span class="hljs-symbol">\j</span>ackson<span class="hljs-symbol">\j</span>ackson-xc<span class="hljs-symbol">\1</span>.9.13<span class="hljs-symbol">\j</span>ackson-xc-1.9.13.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-mapreduce-client-jobclient<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-mapreduce-client-jobclient-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\o</span>rg<span class="hljs-symbol">\a</span>pache<span class="hljs-symbol">\h</span>adoop<span class="hljs-symbol">\h</span>adoop-annotations<span class="hljs-symbol">\2</span>.7.6<span class="hljs-symbol">\h</span>adoop-annotations-2.7.6.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\m</span>ysql<span class="hljs-symbol">\m</span>ysql-connector-java<span class="hljs-symbol">\5</span>.1.38<span class="hljs-symbol">\m</span>ysql-connector-java-5.1.38.jar;E:<span class="hljs-symbol">\t</span>ools<span class="hljs-symbol">\M</span>aven-Repository<span class="hljs-symbol">\c</span>om<span class="hljs-symbol">\a</span>libaba<span class="hljs-symbol">\f</span>astjson<span class="hljs-symbol">\1</span>.2.22<span class="hljs-symbol">\f</span>astjson-1.2.22.jar StreamingWindowWordCount<br>没有指定port参数，使用默认值9000<br>&#123;"nodes":[&#123;"id":1,"type":"Source: Socket Stream","pact":"Data Source","contents":"Source: Socket Stream","parallelism":1&#125;,&#123;"id":2,"type":"Flat Map","pact":"Operator","contents":"Flat Map","parallelism":8,"predecessors":[&#123;"id":1,"ship_strategy":"REBALANCE","side":"second"&#125;]&#125;,&#123;"id":4,"type":"Window(SlidingProcessingTimeWindows(2000, 1000), ProcessingTimeTrigger, SumAggregator, PassThroughWindowFunction)","pact":"Operator","contents":"Window(SlidingProcessingTimeWindows(2000, 1000), ProcessingTimeTrigger, SumAggregator, PassThroughWindowFunction)","parallelism":8,"predecessors":[&#123;"id":2,"ship_strategy":"HASH","side":"second"&#125;]&#125;]&#125;<br>WordWithCount&#123;word='a', count=1&#125;<br>WordWithCount&#123;word='a', count=2&#125;<br>WordWithCount&#123;word='b', count=1&#125;<br>WordWithCount&#123;word='d', count=1&#125;<br>WordWithCount&#123;word='c', count=1&#125;<br>WordWithCount&#123;word='c', count=1&#125;<br>WordWithCount&#123;word='a', count=1&#125;<br>WordWithCount&#123;word='d', count=1&#125;<br>WordWithCount&#123;word='b', count=1&#125;<br></code></pre></td></tr></table></figure></p><p>大家会看到，wordcount的结果。<br>仔细看还有一串json输出，这部分是什么呢？<br>代码中加了一个打印执行计划的部分：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/获取可视化JSON<br>System.out.println(env.getExecutionPlan())<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></p><p>Flink提供了一个可视化执行计划的结果，类似Spark的DAG图，把json粘贴到<a href="https://flink.apache.org/visualizer/" target="_blank" rel="noopener">Flink Plan Visualizer</a>可以看到执行计划图：<br><img src="https://upload-images.jianshu.io/upload_images/4579636-fb04d8830a79c07e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="image.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Flink</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flink的这些事（一）——Flink部署</title>
    <link href="/2018/11/09/Flink%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94Flink%E9%83%A8%E7%BD%B2/"/>
    <url>/2018/11/09/Flink%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94Flink%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h3 id="一、flink介绍"><a href="#一、flink介绍" class="headerlink" title="一、flink介绍"></a>一、flink介绍</h3><p>Apache Flink 是一个开源的分布式流处理和批处理系统。Flink 的核心是在数据流上提供数据分发、通信、具备容错的分布式计算。同时，Flink 在流处理引擎上构建了批处理引擎，原生支持了迭代计算、内存管理和程序优化。</p><h3 id="二、部署环境"><a href="#二、部署环境" class="headerlink" title="二、部署环境"></a>二、部署环境</h3><p>操作系统环境：</p><p>flink支持Linux, Mac OS X, 和 Windows环境部署，本次部署选择Linux环境部署。</p><p>JDK：<br>要求Java 7或者更高</p><h3 id="三、下载软件"><a href="#三、下载软件" class="headerlink" title="三、下载软件"></a>三、下载软件</h3><ul><li><a href="http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-i586.tar.gz" target="_blank" rel="noopener">jdk1.8.0_144</a></li><li><a href="https://archive.apache.org/dist/flink/flink-1.4.2/flink-1.4.2-bin-hadoop24-scala_2.11.tgz" target="_blank" rel="noopener">flink-1.4.2-bin-hadoop26-scala_2.11.tgz</a></li></ul><h3 id="四、部署步骤"><a href="#四、部署步骤" class="headerlink" title="四、部署步骤"></a>四、部署步骤</h3><p>1、JDK安装步骤此处省略，安装后验证下JDK环境<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ java -version<br>openjdk version <span class="hljs-string">"1.8.0_144"</span><br>OpenJDK Runtime Environment (build 1.8.0_144-b01)<br>OpenJDK 64-Bit<span class="hljs-built_in"> Server </span>VM (build 25.144-b01, mixed mode)<br></code></pre></td></tr></table></figure></p><p>2、安装部署flink<br>本文介绍flink部署分为两种模式：local，standalone。下面依次介绍这两种模式的部署方式。</p><p>找到下载的flink压缩包，进行解压</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ tar -zxvf flink<span class="hljs-number">-1.4</span><span class="hljs-number">.2</span>-bin-hadoop26-scala_2<span class="hljs-number">.11</span>.tgz<br></code></pre></td></tr></table></figure><p>首先是local模式，最为简单。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> flink-1.4.2</span><br><span class="hljs-meta">$</span><span class="bash"> bin/start-local.sh</span><br>Starting job manager<br></code></pre></td></tr></table></figure><p>我们可以通过查看日志确认是否启动成功</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ tailf flink-csap-taskmanager-<span class="hljs-number">0</span>-XXXX<span class="hljs-selector-class">.log</span><br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">718</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.filecache</span><span class="hljs-selector-class">.FileCache</span>                  - User file cache uses directory /tmp/flink-dist-cache-<span class="hljs-number">4</span>c371de9-<span class="hljs-number">0</span>f85-<span class="hljs-number">4889</span>-b4d9-<span class="hljs-number">4</span>a522641549c<br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">725</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - Starting TaskManager actor at akka:<span class="hljs-comment">//flink/user/taskmanager#-524742300.</span><br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">725</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - TaskManager data connection information: <span class="hljs-number">2</span>c358d6f38949f9aae31c5bddb0cc1dc @ LY1F-R021707-VM14<span class="hljs-selector-class">.local</span> (dataPort=<span class="hljs-number">55234</span>)<br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">726</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - TaskManager has <span class="hljs-number">1</span> task slot(s).<br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">727</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - Memory usage stats: [HEAP: <span class="hljs-number">111</span>/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span> MB, NON HEAP: <span class="hljs-number">35</span>/<span class="hljs-number">36</span>/-<span class="hljs-number">1</span> MB (used/committed/max)]<br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">730</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - Trying to register at JobManager akka<span class="hljs-selector-class">.tcp</span>:<span class="hljs-comment">//flink@localhost:6123/user/jobmanager (attempt 1, timeout: 500 milliseconds)</span><br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">848</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - Successful registration at JobManager (akka<span class="hljs-selector-class">.tcp</span>:<span class="hljs-comment">//flink@localhost:6123/user/jobmanager), starting network stack and library cache.</span><br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">851</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.taskmanager</span><span class="hljs-selector-class">.TaskManager</span>              - Determined BLOB server <span class="hljs-selector-tag">address</span> to be localhost/<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">52382</span>. Starting BLOB cache.<br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">858</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.blob</span><span class="hljs-selector-class">.PermanentBlobCache</span>              - Created BLOB cache storage directory /tmp/blobStore-c07b9e80-<span class="hljs-number">41</span>f0-<span class="hljs-number">490</span>f-<span class="hljs-number">8126</span>-<span class="hljs-number">7008144</span>c4b0b<br><span class="hljs-number">2018</span>-<span class="hljs-number">05</span>-<span class="hljs-number">03</span> <span class="hljs-number">10</span>:<span class="hljs-number">07</span>:<span class="hljs-number">53</span>,<span class="hljs-number">861</span> INFO  org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flink</span><span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.blob</span><span class="hljs-selector-class">.TransientBlobCache</span>              - Created BLOB cache storage directory /tmp/blobStore-e0d1b687-<span class="hljs-number">1</span>c47-<span class="hljs-number">41</span>c4-b5bc-<span class="hljs-number">10</span>ceaa39e778<br></code></pre></td></tr></table></figure><p>JobManager进程将会在8081端口上启动一个WEB页面，我们可以通过浏览器到hostname:8081中查看相关的信息。<br>可以打开页面查看到相关信息，说明local模式部署是没问题的。</p><p>下面来看一下standlone部署方式。</p><p>安装JDK，解压压缩包，都是一样的。不一样的是我们要修改解压后的flink配置文件。然后在集群主机间做免密，<a href="http://note.youdao.com/noteshare?id=6cca517765f4bf858f5a818802b8c620&amp;sub=99A504B997564447A6EB786AA6102C57" target="_blank" rel="noopener">免密操作方法</a>。</p><p>修改<strong>conf/flink-conf.yaml</strong>，我们将<strong>jobmanager.rpc.address</strong>的值设置成你master节点的IP地址。此外，我们通过<strong>jobmanager.heap.mb和taskmanager.heap.mb</strong>配置参数来设置每个节点的JVM能够分配的最大内存。从配置参数名字可以看出，这个参数的单位是MB，如果某些节点拥有比你之前设置的值更多的内存时，我们可以在那个节通过<strong>FLINK_TM_HEAP</strong>参数类覆盖值钱的设置。</p><p>我们需要把所有将要作为worker节点的IP地址存放在conf/slaves文件中，在conf/slaves文件中，每个IP地址必须放在一行，如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">192<span class="hljs-selector-class">.168</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.100</span><br>192<span class="hljs-selector-class">.168</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.101</span><br>.<br>.<br>.<br>192<span class="hljs-selector-class">.168</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.150</span><br></code></pre></td></tr></table></figure><p>然后将修改好的flink包整理复制到集群各个节点。每个节点flink路径保持一致。然后启动集群</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> bin/start-cluster.sh</span><br></code></pre></td></tr></table></figure><p>查看日志是否成功。</p><p>以上是部署方法，部署成功后，我们来跑一个demo程序，验证一下Flink的流处理功能，对其有个初步的了解。</p><p>flink为了更好的让大家理解，已经给大家提供了一些demo代码，demo的jar包可以在<strong>/examples/streaming</strong>首先看一下demo代码：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs undefined">object SocketWindowWordCount &#123;<br><br>    def main(args: <span class="hljs-built_in">Array</span>[<span class="hljs-built_in">String</span>]) : Unit = &#123;<br><br>        <span class="hljs-comment">// the port to connect to</span><br>        val port: Int = <span class="hljs-keyword">try</span> &#123;<br>            ParameterTool.fromArgs(args).getInt(<span class="hljs-string">"port"</span>)<br>        &#125; <span class="hljs-keyword">catch</span> &#123;<br>            <span class="hljs-keyword">case</span> e: <span class="hljs-function"><span class="hljs-params">Exception</span> =&gt;</span> &#123;<br>                System.err.println(<span class="hljs-string">"No port specified. Please run 'SocketWindowWordCount --port &lt;port&gt;'"</span>)<br>                <span class="hljs-keyword">return</span><br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// get the execution environment</span><br>        val env: StreamExecutionEnvironment = StreamExecutionEnvironment.getExecutionEnvironment<br><br>        <span class="hljs-comment">// get input data by connecting to the socket</span><br>        val text = env.socketTextStream(<span class="hljs-string">"localhost"</span>, port, <span class="hljs-string">'\n'</span>)<br><br>        <span class="hljs-comment">// parse the data, group it, window it, and aggregate the counts</span><br>        val windowCounts = text<br>            .flatMap &#123; <span class="hljs-function"><span class="hljs-params">w</span> =&gt;</span> w.split(<span class="hljs-string">"\\s"</span>) &#125;<br>            .map &#123; <span class="hljs-function"><span class="hljs-params">w</span> =&gt;</span> WordWithCount(w, <span class="hljs-number">1</span>) &#125;<br>            .keyBy(<span class="hljs-string">"word"</span>)<br>            .timeWindow(Time.seconds(<span class="hljs-number">5</span>), Time.seconds(<span class="hljs-number">1</span>))<br>            .sum(<span class="hljs-string">"count"</span>)<br><br>        <span class="hljs-comment">// print the results with a single thread, rather than in parallel</span><br>        windowCounts.print().setParallelism(<span class="hljs-number">1</span>)<br><br>        env.execute(<span class="hljs-string">"Socket Window WordCount"</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// Data type for words with count</span><br>    <span class="hljs-keyword">case</span> <span class="hljs-keyword">class</span> WordWithCount(word: <span class="hljs-built_in">String</span>, count: Long)<br>&#125;<br></code></pre></td></tr></table></figure><p>这个demo是监控端口，然后对端口输入单子进行wordcount的程序。</p><p>运行demo，首先打开一个窗口进行端口数据输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">$</span><span class="bash"> nc -l 9001</span><br>hello<br>hello<br>word<br>world<br></code></pre></td></tr></table></figure><p>然后运行demo监控端口单词输入统计：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ ./bin/flink <span class="hljs-built_in">run</span> examples/streaming/SocketWindowWordCount.jar <span class="hljs-comment">--port 9001</span><br></code></pre></td></tr></table></figure><p>运行后可以看到结果统计：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ more flink-csap-taskmanager-<span class="hljs-number">0</span>-XXX.<span class="hljs-keyword">out</span>.<span class="hljs-number">1</span><br>hello : 1<br>hello : 1<br>word : 1<br>world : 1<br></code></pre></td></tr></table></figure><p>以上就是flink的hello world，大家初步对flink有个了解。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Flink</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈用户行为分析（一）</title>
    <link href="/2018/10/16/%E6%B5%85%E8%B0%88%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2018/10/16/%E6%B5%85%E8%B0%88%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="浅谈用户行为分析（一）"><a href="#浅谈用户行为分析（一）" class="headerlink" title="浅谈用户行为分析（一）"></a>浅谈用户行为分析（一）</h1><p>标签（空格分隔）： 数据仓库 用户行为分析</p><hr><p>关于用户行为分析，很多互联网公司都有相关的需求，虽然业务不同，但是关于用户行为分析的方法和技术实现都是基本相同的。作者在两家公司都了用户行为分析的相关事项，分享一下自己的一些经验。</p><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一. 简介"></a>一. 简介</h2><p>用户行为分析可以概括如下：哪个用户在什么时候做了什么操作在哪里做了什么操作，为什么要做这些操作，通过什么方式，用了多长时间等问题，总结出来就是WHO，WHEN，WHERE，WHAT，WHY以及HOW，HOW TIME。</p><h2 id="二-基础数据"><a href="#二-基础数据" class="headerlink" title="二.基础数据"></a>二.基础数据</h2><p>根据以上5个W和2H，我们来讨论下们如何实现。<br>WHO，首先需要x获取登陆用户个人的信息。用户名称，角色等<br>WHEN，获取用户访问页面每个模块的时间，开始时间，结束时间等<br>WHAT，获取用户登陆页面后都做了什么操作，点击了哪些页面以及模块等<br>WHY，分析用户点击这些模块的目的是什么<br>HOW，用户通过什么方式访问的系统，web,APP,小程序等<br>HOW TIME，用户访问每个模块，浏览某个页面多长时间等<br>以上都是我们要获取的数据，获取到相关数据我们才能接着分析用户的行为。</p><h2 id="三-技术实现"><a href="#三-技术实现" class="headerlink" title="三.技术实现"></a>三.技术实现</h2><p>有了上面的思路，下面我们来说下实现的相关技术问题，如何落地用户行为分析。<br>a).首先是获取用户行为数据，目前比较多的方法有两种，一种是埋点，一种是插码（业内称无埋点技术）。先说下两种方式，第一埋点，埋点能够针对特定的页面位置获取用户的访问数据，能够更加精确的获取用户的访问动作等信息，没有其他杂乱数据，我们需要什么数据，就在页面对应的位置埋点就行。第二是插码，第一次听说这个技术是当时看到GrowingIO提出来的，个人认为这种技术其实是全埋点，也就是，你从登陆访问的所有信息都会被收集到，数据很多，也常常会遇到数据丢失的问题。（个人不是擅长前端，可能有更好的方法解决）。<br>b).获取到的用户的访问日志数据，是否就能用了呢？不行，这样收集到的数据很不规范，日志很乱，所以此时需要后端和前端定义好数据的保存格式，也就是保存哪些字段内容，需要把埋点数据按照约定的格式统一封装，以便于存储分析。<br>c).数据封装好后如何存储呢，我们知道对于互联网公司来说，用户的访问日志是非常大的，所以需要用户大数据存储技术，比如存储到HDFS上就是一个不错的选择。用户的访问日志都是实时产生的，如何落地到HDFS上呢？第一，埋点数据可以先落到磁盘，然后通过FLUME监听对应的磁盘目录，进行转发到HDFS，推荐使用kafka channel。第二，可以将用户访问的数据转发的一个特定的端口，使用FLUME监听对应的端口号，进行转发落地到HDFS。（期间，需要给FLUME足够的资源，注意进行心跳监控）。数据落地HDFS后，离线可以使用Hive SQL或者Spark SQL 进行分析。<br>对于离线分析，上述步骤，可以获取数据分析，对于个别实时需求，计算时则不需要进行落地HDFS，直接利用Storm，Spark Streaming，Flink等计算引擎消费Flume中转的kafka数据即可。</p><p>后面会讲解一下用户行为分析的一些指标怎么做……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何找到本年已过天数和剩余天数</title>
    <link href="/2018/09/22/%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%9C%AC%E5%B9%B4%E5%B7%B2%E8%BF%87%E5%A4%A9%E6%95%B0%E5%92%8C%E5%89%A9%E4%BD%99%E5%A4%A9%E6%95%B0/"/>
    <url>/2018/09/22/%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%9C%AC%E5%B9%B4%E5%B7%B2%E8%BF%87%E5%A4%A9%E6%95%B0%E5%92%8C%E5%89%A9%E4%BD%99%E5%A4%A9%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="如何找到本年已过天数和剩余天数"><a href="#如何找到本年已过天数和剩余天数" class="headerlink" title="如何找到本年已过天数和剩余天数"></a>如何找到本年已过天数和剩余天数</h2><blockquote><p>Vertica其实没有直接的函数，返回本年的已过天数和剩余天数。但是你需利用日期函数可以巧妙的完成上述功能，下面我们来看下如何实现吧~</p></blockquote><pre><code>dbadmin=&gt; SELECT sysdate                                                                 &quot;Today&quot;,    dbadmin-&gt;        DATEDIFF(day, TRUNC(sysdate, &apos;YY&apos;), TRUNC(sysdate))                     &quot;# of days that have passed in current year&quot;,    dbadmin-&gt;        DATEDIFF(day, TRUNC(sysdate), (ADD_MONTHS(TRUNC(sysdate, &apos;YY&apos;), 12)-1)) &quot;# of days remaining in current year&quot;;               Today            | # of days that have passed in current year | # of days remaining in current year    ----------------------------+--------------------------------------------+-------------------------------------     2018-08-06 11:56:03.111593 |                                        217 |                                 147    (1 row)</code></pre><blockquote><p>另外，你也可以将此功能写成一个函数，工其他开发人员调用。代码如下：</p></blockquote><pre><code> dbadmin=&gt; CREATE OR REPLACE FUNCTION days_passed_current_year (x TIMESTAMP) RETURN INT ASdbadmin-&gt; BEGINdbadmin-&gt;   RETURN DATEDIFF(day, TRUNC(x, &apos;YY&apos;), TRUNC(x));dbadmin-&gt; END;CREATE FUNCTIONdbadmin=&gt; CREATE OR REPLACE FUNCTION days_remaining_current_year (x TIMESTAMP) RETURN INT ASdbadmin-&gt; BEGINdbadmin-&gt;   RETURN DATEDIFF(day, TRUNC(x), (ADD_MONTHS(TRUNC(x, &apos;YY&apos;), 12)-1));dbadmin-&gt; END;CREATE FUNCTIONdbadmin=&gt; SELECT x                              AS &quot;Some Date&quot;,dbadmin-&gt;        days_passed_current_year(x)    AS &quot;# of days that have passed in the relative year&quot;,dbadmin-&gt;        days_remaining_current_year(x) AS &quot;# of days remaining in the relative year&quot;dbadmin-&gt;   FROM (SELECT &apos;2018-JAN-01 08:00&apos;::TIMESTAMP AS xdbadmin(&gt;          UNION ALLdbadmin(&gt;         SELECT &apos;2018-DEC-31 08:00&apos;::TIMESTAMPdbadmin(&gt;          UNION ALLdbadmin(&gt;         SELECT &apos;2017-SEP-19 08:00&apos;::TIMESTAMP) foo;      Some Date      | # of days that have passed in the relative year | # of days remaining in the relative year---------------------+-------------------------------------------------+------------------------------------------ 2018-01-01 08:00:00 |                                               0 |                                      364 2018-12-31 08:00:00 |                                             364 |                                        0 2017-09-19 08:00:00 |                                             261 |                                      103(3 rows)</code></pre><h2 id="是不是很简单，赶快自己试试吧！"><a href="#是不是很简单，赶快自己试试吧！" class="headerlink" title="是不是很简单，赶快自己试试吧！"></a>是不是很简单，赶快自己试试吧！</h2>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>行业MPP数据库对比</title>
    <link href="/2018/09/14/%E8%A1%8C%E4%B8%9AMPP%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E6%AF%94/"/>
    <url>/2018/09/14/%E8%A1%8C%E4%B8%9AMPP%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h2 id="行业内MPP数据库对比"><a href="#行业内MPP数据库对比" class="headerlink" title="行业内MPP数据库对比"></a>行业内MPP数据库对比</h2><ol><li><p>Vertica VS GreenPlum VS</p><blockquote><p>Vertica和greenplum有关系，greenplum是一个mpp的分布式关系型数据库，vertica集群也是，两者的关系：vertica 无 master 全部机都是master,而greeplum只能有一台master，然后做一个master的备份。这是对程序应用的稳定性起了最关键的作用。gpmaster关了，然后就不能连了,要手动切换到master的备份。而vertica3台机做一个备份策略的话，连接时写上三个节点的ip就不会挂。执行速度对比。vertica能秒杀一切mpp。毕竟是数据库发明者开发的。。而且安装简单90M多的数据库。而且是按入库前的大小。vertica 进库后是会压缩10倍的。如果数据不多。1个T左右，可以使用vertica的社区版。功能一样，3台x86秒杀500万的p570 oracle，greenplum与vertica都是基于postgresql开发的，语法与oracle有95%以上的相似。什么to_date，to_char等。</p></blockquote></li><li><p>Vertica VS G8</p><blockquote><p>曾经亲测过两者的性能，进行的POC测试，效率G8略低，而且在消费kafka方面，两者的效率相差很大，直接PK到G8。G8作为国产数据库，做的也是不错了。</p></blockquote></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spark的这些事（四）——Spark-on-yarn-动态资源配置</title>
    <link href="/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94Spark-on-yarn-%E5%8A%A8%E6%80%81%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94Spark-on-yarn-%E5%8A%A8%E6%80%81%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p><strong>一、YARN的配置</strong><br>首先需要对YARN进行配置，使其支持Spark的Shuffle Service。</p><p>修改每台集群上的<code>yarn-site.xml</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"> - 修改<br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle,spark_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined"> - 增加<br>&lt;property&gt;<br>&lt;name&gt;yarn<span class="hljs-selector-class">.nodemanager</span><span class="hljs-selector-class">.aux-services</span><span class="hljs-selector-class">.spark_shuffle</span><span class="hljs-selector-class">.class</span>&lt;/name&gt;<br>&lt;value&gt;org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.spark</span><span class="hljs-selector-class">.network</span><span class="hljs-selector-class">.yarn</span><span class="hljs-selector-class">.YarnShuffleService</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;spark<span class="hljs-selector-class">.shuffle</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.port</span>&lt;/name&gt;<br>&lt;value&gt;<span class="hljs-number">7337</span>&lt;/value&gt;<br>&lt;/property&gt;<br></code></pre></td></tr></table></figure><p>将<code>$SPARK_HOME/lib/spark-1.5.2-yarn-shuffle.jar</code>拷贝到每台<code>NodeManager的${HADOOP_HOME}/share/hadoop/yarn/lib/</code>下。<br>重启所有修改配置的节点。</p><p><strong>二、Spark的配置</strong><br>配置<code>$SPARK_HOME/conf/spark-defaults.conf</code>，增加以下参数：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">spark<span class="hljs-selector-class">.shuffle</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.enabled</span> true   <span class="hljs-comment">//启用External shuffle Service服务</span><br>spark<span class="hljs-selector-class">.shuffle</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.port</span> <span class="hljs-number">7337</span> <span class="hljs-comment">//Shuffle Service默认服务端口，必须和yarn-site中的一致</span><br>spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.enabled</span> true  <span class="hljs-comment">//开启动态资源分配</span><br>spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.minExecutors</span> <span class="hljs-number">1</span>  <span class="hljs-comment">//每个Application最小分配的executor数</span><br>spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.maxExecutors</span> <span class="hljs-number">30</span>  <span class="hljs-comment">//每个Application最大并发分配的executor数</span><br>spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.schedulerBacklogTimeout</span> <span class="hljs-number">1s</span> <br>spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.sustainedSchedulerBacklogTimeout</span> <span class="hljs-number">5s</span><br></code></pre></td></tr></table></figure><p><strong>动态资源分配策略：</strong><br>开启动态分配策略后，application会在task因没有足够资源被挂起的时候去动态申请资源，这种情况意味着该application现有的executor无法满足所有task并行运行。spark一轮一轮的申请资源，当有task挂起或等待<code>spark.dynamicAllocation.schedulerBacklogTimeout</code>(默认1s)`时间的时候，会开始动态资源分配；之后会每隔spark.dynamicAllocation.sustainedSchedulerBacklogTimeout(默认1s)时间申请一次，直到申请到足够的资源。每次申请的资源量是指数增长的，即1,2,4,8等。<br>之所以采用指数增长，出于两方面考虑：其一，开始申请的少是考虑到可能application会马上得到满足；其次要成倍增加，是为了防止application需要很多资源，而该方式可以在很少次数的申请之后得到满足。</p><p><strong>资源回收策略：</strong><br>当application的executor空闲时间超过<code>spark.dynamicAllocation.executorIdleTimeout（默认60s）</code>后，就会被回收。</p><p>使用spark-sql On Yarn执行SQL，动态分配资源<br>以yarn-client模式启动ThriftServer</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">cd <span class="hljs-variable">$SPARK_HOME</span>/sbin/<br>./start-thriftserver<span class="hljs-selector-class">.sh</span> \<br>--master yarn-client \<br>--conf spark<span class="hljs-selector-class">.driver</span><span class="hljs-selector-class">.memory</span>=<span class="hljs-number">10</span>G \<br>--conf spark<span class="hljs-selector-class">.shuffle</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.enabled</span>=true \<br>--conf spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.enabled</span>=true \<br>--conf spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.minExecutors</span>=<span class="hljs-number">1</span> \<br>--conf spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.maxExecutors</span>=<span class="hljs-number">300</span> \<br>--conf spark<span class="hljs-selector-class">.dynamicAllocation</span><span class="hljs-selector-class">.sustainedSchedulerBacklogTimeout</span>=<span class="hljs-number">5s</span><br></code></pre></td></tr></table></figure><p>启动后，ThriftServer会在Yarn上作为一个长服务来运行：</p>]]></content>
    
    
    
    <tags>
      
      <tag>spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spark的这些事（三）——spark常用的Transformations-和Actions</title>
    <link href="/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94spark%E5%B8%B8%E7%94%A8%E7%9A%84Transformations-%E5%92%8CActions/"/>
    <url>/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94spark%E5%B8%B8%E7%94%A8%E7%9A%84Transformations-%E5%92%8CActions/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="Transformations"><a href="#Transformations" class="headerlink" title="Transformations"></a><a href="http://spark.apache.org/docs/latest/programming-guide.html#transformations" target="_blank" rel="noopener">Transformations</a></h2><p><strong>map，filter</strong><br>spark最长用的两个Transformations：<strong>map，filter</strong>，下面就来介绍一下这两个。</p><p>先看下面这张图：</p><p><img src="http://upload-images.jianshu.io/upload_images/4579636-92d69157fe274d53?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="这里写图片描述"></p><p>从上图中可以清洗的看到 map和filter都是做的什么工作，那我们就代码演示一下。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">val <span class="hljs-selector-tag">input</span> = sc.parallelize(List(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<br><br>val result1 = <span class="hljs-selector-tag">input</span>.map(x=&gt;x*x)<br>val result2 = <span class="hljs-selector-tag">input</span>.<span class="hljs-attribute">filter</span>(x=&gt;x!=<span class="hljs-number">1</span>)<br><br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(result1.collect()</span></span>.mkString(<span class="hljs-string">","</span>))<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">"\n"</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(result2.collect()</span></span>.mkString(<span class="hljs-string">","</span>))<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">"\n"</span>)</span></span><br></code></pre></td></tr></table></figure><p>执行结果如下：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">18</span>:<span class="hljs-number">48</span>:<span class="hljs-number">31</span> INFO <span class="hljs-string">DAGScheduler:</span> ResultStage <span class="hljs-number">0</span> (collect at Map.<span class="hljs-string">scala:</span><span class="hljs-number">17</span>) finished <span class="hljs-keyword">in</span> <span class="hljs-number">0.093</span> s<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">18</span>:<span class="hljs-number">48</span>:<span class="hljs-number">31</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">0</span> <span class="hljs-string">finished:</span> collect at Map.<span class="hljs-string">scala:</span><span class="hljs-number">17</span>, took <span class="hljs-number">0.268871</span> s<br><span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span>,<span class="hljs-number">16</span><br>........<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">18</span>:<span class="hljs-number">48</span>:<span class="hljs-number">31</span> INFO <span class="hljs-string">DAGScheduler:</span> ResultStage <span class="hljs-number">1</span> (collect at Map.<span class="hljs-string">scala:</span><span class="hljs-number">19</span>) finished <span class="hljs-keyword">in</span> <span class="hljs-number">0.000</span> s<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">18</span>:<span class="hljs-number">48</span>:<span class="hljs-number">31</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">1</span> <span class="hljs-string">finished:</span> collect at Map.<span class="hljs-string">scala:</span><span class="hljs-number">19</span>, took <span class="hljs-number">0.018291</span> s<br><span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>再回头看下上面那张图，是不是明白什么意思了！</p><p><strong>flatMap</strong><br>另外一个常用的就是flatMap，输入一串字符，分割出每个字符</p><p><img src="http://upload-images.jianshu.io/upload_images/4579636-23f6c34d7f36ada3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="map和flatmap的区别"></p><p>来用代码实践一下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">val <span class="hljs-keyword">lines</span> = sc.parallelize(List(<span class="hljs-string">"hello world"</span>,<span class="hljs-string">"hi"</span>))<br>   val <span class="hljs-keyword">words</span> = <span class="hljs-keyword">lines</span>.flatMap (<span class="hljs-keyword">lines</span>=&gt;<span class="hljs-keyword">lines</span>.<span class="hljs-built_in">split</span>(<span class="hljs-string">" "</span>))<br>   print(<span class="hljs-keyword">words</span>.<span class="hljs-keyword">first</span>())<br>   print(<span class="hljs-string">"\n"</span>)<br></code></pre></td></tr></table></figure></p><p>执行结果：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">23</span>:<span class="hljs-number">24</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">2</span> <span class="hljs-string">finished:</span> first at Map.<span class="hljs-string">scala:</span><span class="hljs-number">24</span>, took <span class="hljs-number">0.016987</span> s<br>hello<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">23</span>:<span class="hljs-number">24</span> INFO <span class="hljs-string">SparkContext:</span> Invoking stop() from shutdown hook<br></code></pre></td></tr></table></figure><p>分隔符如果改一下的话：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">val <span class="hljs-keyword">words</span> = <span class="hljs-keyword">lines</span>.flatMap (<span class="hljs-keyword">lines</span>=&gt;<span class="hljs-keyword">lines</span>.<span class="hljs-built_in">split</span>(<span class="hljs-string">","</span>))<br></code></pre></td></tr></table></figure><p>结果会怎样呢？</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">16/08/17 19:33:14 <span class="hljs-builtin-name">INFO</span> TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, <span class="hljs-keyword">from</span><span class="hljs-built_in"> pool </span><br>hello world<br>16/08/17 19:33:14 <span class="hljs-builtin-name">INFO</span> SparkContext: Invoking stop() <span class="hljs-keyword">from</span> shutdown hook<br></code></pre></td></tr></table></figure><p>和想象的一样吧~</p><p><strong>distinct，distinct，intersection，subtract</strong><br>还有几个比较常用的：distinct，distinct，intersection，subtract</p><p><img src="http://upload-images.jianshu.io/upload_images/4579636-1eea352bfe4e23e7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="这里写图片描述"></p><p>来看看代码实践：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">val rdd1 = <span class="hljs-keyword">sc</span>.parallelize(<span class="hljs-keyword">List</span>(<span class="hljs-string">"coffee"</span>,<span class="hljs-string">"coffee"</span>,<span class="hljs-string">"panda"</span>,<span class="hljs-string">"monkey"</span>,<span class="hljs-string">"tea"</span>))<br>    val rdd2 = <span class="hljs-keyword">sc</span>.parallelize(<span class="hljs-keyword">List</span>(<span class="hljs-string">"coffee"</span>,<span class="hljs-string">"monkey"</span>,<span class="hljs-string">"kitty"</span>))<br>    <br>    rdd1.<span class="hljs-keyword">distinct</span>().take(100).<span class="hljs-keyword">foreach</span>(println)<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs undefined">16/08/17 19:52:29 <span class="hljs-builtin-name">INFO</span> DAGScheduler: ResultStage 4 (take at Map.scala:30) finished <span class="hljs-keyword">in</span> 0.047 s<br>16/08/17 19:52:29 <span class="hljs-builtin-name">INFO</span> TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, <span class="hljs-keyword">from</span><span class="hljs-built_in"> pool </span><br>16/08/17 19:52:29 <span class="hljs-builtin-name">INFO</span> DAGScheduler: Job 3 finished: take at Map.scala:30, took 0.152405 s<br>monkey<br>coffee<br>panda<br>tea<br>16/08/17 19:52:29 <span class="hljs-builtin-name">INFO</span> SparkContext: Starting job: take at Map.scala:32<br></code></pre></td></tr></table></figure><p>代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-selector-tag">rdd1</span><span class="hljs-selector-class">.union</span>(<span class="hljs-selector-tag">rdd2</span>)<span class="hljs-selector-class">.take</span>(100)<span class="hljs-selector-class">.foreach</span>(<span class="hljs-selector-tag">println</span>)<br></code></pre></td></tr></table></figure></p><p>结果：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">6</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">52</span>:<span class="hljs-number">29</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">5</span> <span class="hljs-string">finished:</span> take at Map.<span class="hljs-string">scala:</span><span class="hljs-number">32</span>, took <span class="hljs-number">0.011825</span> s<br>coffee<br>coffee<br>panda<br>monkey<br>tea<br>coffee<br>monkey<br>kitty<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">52</span>:<span class="hljs-number">30</span> INFO <span class="hljs-string">SparkContext:</span> Starting <span class="hljs-string">job:</span> take at Map.<span class="hljs-string">scala:</span><span class="hljs-number">34</span><br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">52</span>:<span class="hljs-number">30</span> INFO <span class="hljs-string">DAGScheduler:</span> Registering RDD <span class="hljs-number">11</span> (intersection at Map.<span class="hljs-string">scala:</span><span class="hljs-number">34</span>)<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">52</span>:<span class="hljs-number">30</span> INFO <span class="hljs-string">DAGScheduler:</span> Registering RDD <span class="hljs-number">12</span> (intersection at Map.<span class="hljs-string">scala:</span><span class="hljs-number">34</span>)<br></code></pre></td></tr></table></figure><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-selector-tag">rdd1</span><span class="hljs-selector-class">.intersection</span>(<span class="hljs-selector-tag">rdd2</span>)<span class="hljs-selector-class">.take</span>(100)<span class="hljs-selector-class">.foreach</span>(<span class="hljs-selector-tag">println</span>)<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">16/08/17 19:52:30 <span class="hljs-builtin-name">INFO</span> TaskSetManager: Finished task 0.0 <span class="hljs-keyword">in</span> stage 9.0 (TID 9) <span class="hljs-keyword">in</span> 31 ms on localhost (1/1)<br>16/08/17 19:52:30 <span class="hljs-builtin-name">INFO</span> TaskSchedulerImpl: Removed TaskSet 9.0, whose tasks have all completed, <span class="hljs-keyword">from</span><span class="hljs-built_in"> pool </span><br>16/08/17 19:52:30 <span class="hljs-builtin-name">INFO</span> DAGScheduler: ResultStage 9 (take at Map.scala:34) finished <span class="hljs-keyword">in</span> 0.031 s<br>16/08/17 19:52:30 <span class="hljs-builtin-name">INFO</span> DAGScheduler: Job 6 finished: take at Map.scala:34, took 0.060785 s<br>monkey<br>coffee<br>16/08/17 19:52:30 <span class="hljs-builtin-name">INFO</span> SparkContext: Starting job: take at Map.scala:36<br></code></pre></td></tr></table></figure><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-selector-tag">rdd1</span><span class="hljs-selector-class">.subtract</span>(<span class="hljs-selector-tag">rdd2</span>)<span class="hljs-selector-class">.take</span>(100)<span class="hljs-selector-class">.foreach</span>(<span class="hljs-selector-tag">println</span>)<br></code></pre></td></tr></table></figure><p>结果：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">52</span>:<span class="hljs-number">30</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">6</span> <span class="hljs-string">finished:</span> take at Map.<span class="hljs-string">scala:</span><span class="hljs-number">34</span>, took <span class="hljs-number">0.060785</span> s<br>monkey<br>coffee<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">52</span>:<span class="hljs-number">30</span> INFO <span class="hljs-string">SparkContext:</span> Starting <span class="hljs-string">job:</span> take at Map.<span class="hljs-string">scala:</span><span class="hljs-number">36</span><br></code></pre></td></tr></table></figure><p>再看看上面的图，很容易理解吧</p><h2 id="Actions"><a href="#Actions" class="headerlink" title="Actions"></a><a href="http://spark.apache.org/docs/latest/programming-guide.html#actions" target="_blank" rel="noopener">Actions</a></h2><p>常用的Transformations就介绍到这里，下面介绍下常用的Action:<br><strong>reduce,countByValue,takeOrdered,takeSample,aggregate</strong></p><p>首先看一下：reduce</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">val rdd5 = sc.parallelize(List(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<br>print(<span class="hljs-string">"reduce action:"</span>+rdd5.reduce((x,y)=&gt;x+y)+<span class="hljs-string">"<span class="hljs-subst">\n</span>"</span>)<br></code></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">15</span> <span class="hljs-string">finished:</span> reduce at Function.<span class="hljs-string">scala:</span><span class="hljs-number">55</span>, took <span class="hljs-number">0.012698</span> s<br>reduce <span class="hljs-string">action:</span><span class="hljs-number">10</span><br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO <span class="hljs-string">SparkContext:</span> Starting <span class="hljs-string">job:</span> aggregate at Function.<span class="hljs-string">scala:</span><span class="hljs-number">57</span><br></code></pre></td></tr></table></figure><p><strong>countByValue</strong></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">print(<span class="hljs-name">rdd1</span>.countByValue() + <span class="hljs-string">"\n"</span>)<br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span>/<span class="hljs-number">08</span>/<span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO DAGScheduler: Job <span class="hljs-number">11</span> finished: countByValue <span class="hljs-built_in">at</span> Function.scala:<span class="hljs-number">48</span>, took <span class="hljs-number">0.031726</span> s<br>M<span class="hljs-function"><span class="hljs-title">ap</span>(monkey -&gt;</span> <span class="hljs-number">1</span>, <span class="hljs-function"><span class="hljs-title">coffee</span> -&gt;</span> <span class="hljs-number">2</span>, <span class="hljs-function"><span class="hljs-title">panda</span> -&gt;</span> <span class="hljs-number">1</span>, <span class="hljs-function"><span class="hljs-title">tea</span> -&gt;</span> <span class="hljs-number">1</span>)<br><span class="hljs-number">16</span>/<span class="hljs-number">08</span>/<span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO SparkContext: Starting job: takeOrdered <span class="hljs-built_in">at</span> Function.scala:<span class="hljs-number">50</span><br></code></pre></td></tr></table></figure><p><strong>takeOrdered</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-selector-tag">rdd1</span><span class="hljs-selector-class">.takeOrdered</span>(10)<span class="hljs-selector-class">.take</span>(100)<span class="hljs-selector-class">.foreach</span>(<span class="hljs-selector-tag">println</span>)<br></code></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">12</span> <span class="hljs-string">finished:</span> takeOrdered at Function.<span class="hljs-string">scala:</span><span class="hljs-number">50</span>, took <span class="hljs-number">0.026160</span> s<br>coffee<br>coffee<br>monkey<br>panda<br>tea<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO <span class="hljs-string">SparkContext:</span> Starting <span class="hljs-string">job:</span> takeSample at Function.<span class="hljs-string">scala:</span><span class="hljs-number">52</span><br></code></pre></td></tr></table></figure><p><strong>aggregate</strong><br>这个要重点介绍一下：</p><blockquote><p>Spark文档中aggregate函数定义如下<br>def aggregate<a href="zeroValue: U" target="_blank" rel="noopener">U</a>(seqOp: (U, T) ⇒ U, combOp: (U, U) ⇒ U)(implicit arg0: ClassTag[U]): U<br>Aggregate the elements of each partition, and then the results for all the partitions, using given combine functions and a neutral “zero value”. This function can return a different result type, U, than the type of this RDD, T. Thus, we need one operation for merging a T into an U and one operation for merging two U’s, as in scala.TraversableOnce. Both of these functions are allowed to modify and return their first argument instead of creating a new U to avoid memory allocation.  </p><p>seqOp操作会聚合各分区中的元素，然后combOp操作把所有分区的聚合结果再次聚合，两个操作的初始值都是zeroValue.   seqOp的操作是遍历分区中的所有元素(T)，第一个T跟zeroValue做操作，结果再作为与第二个T做操作的zeroValue，直到遍历完整个分区。combOp操作是把各分区聚合的结果，再聚合。aggregate函数返回一个跟RDD不同类型的值。因此，需要一个操作seqOp来把分区中的元素T合并成一个U，另外一个操作combOp把所有U聚合。</p></blockquote><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">val rdd5 = sc.parallelize(List(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<br>val rdd6 = rdd5.aggregate(<span class="hljs-function"><span class="hljs-params">(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)</span>)  (<span class="hljs-params">(x, y)</span> =&gt;</span><span class="hljs-function"><span class="hljs-params">(x._1 + y, x._2+<span class="hljs-number">1</span>)</span>,  <span class="hljs-params">(x, y)</span> =&gt;</span>(x._1 + y._1, x._2 + y._2))<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">"aggregate action : "</span> + rdd6 + <span class="hljs-string">"\n"</span>  )<br></code></pre></td></tr></table></figure><p>我们看一下结果：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO <span class="hljs-string">DAGScheduler:</span> Job <span class="hljs-number">16</span> <span class="hljs-string">finished:</span> aggregate at Function.<span class="hljs-string">scala:</span><span class="hljs-number">57</span>, took <span class="hljs-number">0.011686</span> s<br>aggregate <span class="hljs-string">action :</span> (<span class="hljs-number">10</span>,<span class="hljs-number">4</span>)<br><span class="hljs-number">16</span><span class="hljs-regexp">/08/</span><span class="hljs-number">18</span> <span class="hljs-number">11</span>:<span class="hljs-number">51</span>:<span class="hljs-number">16</span> INFO <span class="hljs-string">SparkContext:</span> Invoking stop() from shutdown hook<br></code></pre></td></tr></table></figure><p>我们可以根据以上执行的例子来理解aggregate 用法：</p><blockquote><ul><li>第一步：将rdd5中的元素与初始值遍历进行聚合操作<ul><li>第二步：将初始值加1进行遍历聚合</li><li>第三步：将结果进行聚合</li><li>根据本次的RDD 背部实现如下：</li><li>第一步：其实是0+1</li><li>1+2</li><li>3+3</li><li>6+4</li><li>然后执行：0+1</li><li>1+1</li><li>2+1</li><li>3+1</li><li>此时返回(10,4)</li><li>本次执行是一个节点，如果在集群中的话，多个节点，会先把数据打到不同的分区上，比如(1,2) (3,4)</li><li>得到的结果就会是(3,2) (7,2)</li><li>然后进行第二步combine就得到 (10,4)</li></ul></li></ul></blockquote><p>这样你应该能理解aggregate这个函数了吧</p><p>以上就是对常用的Transformations 和Actions介绍，对于初学者来说，动手代码实践各个函数，才是明白其功能最好的方法。</p><p>PS ：<a href="https://github.com/windyqinchaofeng/Sparkcoding/blob/master/src/com/csap/spark/Function.scala" target="_blank" rel="noopener">源码</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spark的这些事（二）——几个概念</title>
    <link href="/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5/"/>
    <url>/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>1、SparkContext [经常简称为 sc]</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-attribute">spark</span> app 的起点和入口，一般用来加载数据集，生成第一个 rdd。<br></code></pre></td></tr></table></figure><p>2、定义一个 spark 应用程序所需要的三大步骤的逻辑：加载数据集，处理数据，结果展示。</p><ul><li>加载数据集</li></ul><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">加载数据集，这里的数据集大概分为两组:<br>    -<span class="ruby"> 一种是不变的，静态数据集，大多数场景都是从数据库，文件系统上面加载进来<br></span>    -<span class="ruby"> 另一种是动态的数据集，一般做 streaming 应用的时候用到，大多数场景是通过 socket 来加载数据，复杂场景可以通过文件系统，akka actors，kafka，kinesis 和 一些第三方提供的 streaming api [twitter 等] 来作为数据源加载数据</span><br></code></pre></td></tr></table></figure><ul><li>处理数据</li></ul><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">处理数据，这是重点中的重点，不过不外乎都是从三个方面来完成这里的数据清理，逻辑运算等:<br>    -<span class="ruby"> 自定义的一些复杂处理函数或者第三方包 [下面我们称为函数集]<br></span>    -<span class="ruby"> 通过 RDD 的 transform，action 和函数集来完成整个处理，计算流程<br></span>    -<span class="ruby"> 通过 RDD 提供的 cache，persist，checkpoint 方法把一些处理流程中的重要处理节点和常用数据缓存和备份，以加速处理，计算速度</span><br></code></pre></td></tr></table></figure><ul><li>结果展示</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">结果展示，这里一般情况都是使用 RDD 的 collect，take，<span class="hljs-keyword">first</span>，top 等方法把结果取出来，更常用的是先把结果取出来，放到一个数据库或文件系统上，然后再提供给专门展示结果的另一个 <span class="hljs-built_in">application</span> 使用。<br></code></pre></td></tr></table></figure><p>3、有向无环图（DGA）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">有向无环图，有向即有方向，无环即不可逆，其实更详细的说是一个时间上的先来后到，即祖先与子孙的关系，是不可逆的。<br></code></pre></td></tr></table></figure><p><a href="http://baike.baidu.com/link?url=tzBdpDUcmMp-xu2Tf-dRatmMo3-B1yVMG5Jg9vM6FK5VB2lWBsbaqKUJhilj8D7N" target="_blank" rel="noopener">有向无环图（百度百科）</a></p><p>4、RDD<br><a href="http://shiyanjun.cn/archives/744.html" target="_blank" rel="noopener">关于RDD的一篇论文翻译</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spark的这些事（一）——Windows下spark开发环境搭建</title>
    <link href="/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94Windows%E4%B8%8Bspark%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2018/09/12/Spark%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94Windows%E4%B8%8Bspark%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>一、首先准备需要安装的软件<br>scala-2.10.4<br>下载地址：<a href="http://www.scala-lang.org/download/2.10.4.html" target="_blank" rel="noopener">http://www.scala-lang.org/download/2.10.4.html</a><br>scala-SDK-4.4.1-vfinal-2.11-win32.win32.x86_64<br>下载地址：<a href="http://scala-ide.org/" target="_blank" rel="noopener">http://scala-ide.org/</a><br>spark-1.6.2-bin-hadoop2.6<br>下载地址：<a href="http://spark.apache.org/" target="_blank" rel="noopener">http://spark.apache.org/</a></p><p>当然还有jdk这里就不说了<br>scala-2.10.4下载后直接安装~</p><p>scala-SDK-4.4.1-vfinal-2.11-win32.win32.x86_64和spark-1.6.2-bin-hadoop2.6下载后直接解压</p><p>scalaIDE解压后就是一个eclipse，这个大家都比较熟悉了。打开IDE，在解压后的spark包中的lib文件夹下找到spark-assembly-1.6.2-hadoop2.6.0，添加到IDE中。<br>然后环境就搭建完成了~<br>下面就来开发一个测试程序试一下：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">package</span> com.day1.spark<br><br><span class="hljs-keyword">import</span> org.apache.spark.<span class="hljs-type">SparkConf</span><br><span class="hljs-keyword">import</span> org.apache.spark.<span class="hljs-type">SparkContext</span><br><br><span class="hljs-class"><span class="hljs-keyword">object</span> <span class="hljs-title">WordCount</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">def</span>  <span class="hljs-title">main</span></span>(args: <span class="hljs-type">Array</span>[<span class="hljs-type">String</span>]): <span class="hljs-type">Unit</span> = &#123;<br>    <br>    <span class="hljs-keyword">val</span> conf = <span class="hljs-keyword">new</span> <span class="hljs-type">SparkConf</span>()<br>    conf.setAppName(<span class="hljs-string">"MY frist Spark App"</span>)<br>    conf.setMaster(<span class="hljs-string">"local"</span>)<br>    <br>    <span class="hljs-keyword">var</span> sc = <span class="hljs-keyword">new</span> <span class="hljs-type">SparkContext</span>(conf)<br>    <br>    <span class="hljs-keyword">val</span> lines = sc.textFile(<span class="hljs-string">"D:\\test.txt"</span>, <span class="hljs-number">1</span>)<br>    <br>    <span class="hljs-keyword">val</span> words = lines.flatMap &#123; line =&gt; line.split(<span class="hljs-string">" "</span>) &#125;<br>    <br>    <span class="hljs-keyword">val</span> pairs = words.map &#123; word =&gt; (word,<span class="hljs-number">1</span>) &#125;<br>    <br>    <span class="hljs-keyword">val</span> <span class="hljs-type">WordCount</span> = pairs.reduceByKey(_+_)<br>    <br>    <span class="hljs-type">WordCount</span>.foreach(wordNumberPair=&gt;println(wordNumberPair._1 + <span class="hljs-string">":"</span> + wordNumberPair._2))<br>    <br>    sc.stop()<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>右键运行：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-string">Using</span> <span class="hljs-string">Spark's</span> <span class="hljs-string">default</span> <span class="hljs-string">log4j</span> <span class="hljs-attr">profile:</span> <span class="hljs-string">org/apache/spark/log4j-defaults.properties</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:04</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkContext:</span> <span class="hljs-string">Running</span> <span class="hljs-string">Spark</span> <span class="hljs-string">version</span> <span class="hljs-number">1.6</span><span class="hljs-number">.2</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:13</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SecurityManager:</span> <span class="hljs-string">Changing</span> <span class="hljs-string">view</span> <span class="hljs-string">acls</span> <span class="hljs-attr">to:</span> <span class="hljs-string">qinchaofeng</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:13</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SecurityManager:</span> <span class="hljs-string">Changing</span> <span class="hljs-string">modify</span> <span class="hljs-string">acls</span> <span class="hljs-attr">to:</span> <span class="hljs-string">qinchaofeng</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:13</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SecurityManager:</span> <span class="hljs-attr">SecurityManager:</span> <span class="hljs-string">authentication</span> <span class="hljs-string">disabled;</span> <span class="hljs-string">ui</span> <span class="hljs-string">acls</span> <span class="hljs-string">disabled;</span> <span class="hljs-string">users</span> <span class="hljs-string">with</span> <span class="hljs-string">view</span> <span class="hljs-attr">permissions:</span> <span class="hljs-string">Set(qinchaofeng);</span> <span class="hljs-string">users</span> <span class="hljs-string">with</span> <span class="hljs-string">modify</span> <span class="hljs-attr">permissions:</span> <span class="hljs-string">Set(qinchaofeng)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Utils:</span> <span class="hljs-string">Successfully</span> <span class="hljs-string">started</span> <span class="hljs-string">service</span> <span class="hljs-string">'sparkDriver'</span> <span class="hljs-string">on</span> <span class="hljs-string">port</span> <span class="hljs-number">50513.</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Slf4jLogger:</span> <span class="hljs-string">Slf4jLogger</span> <span class="hljs-string">started</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Remoting:</span> <span class="hljs-string">Starting</span> <span class="hljs-string">remoting</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Remoting:</span> <span class="hljs-string">Remoting</span> <span class="hljs-string">started;</span> <span class="hljs-string">listening</span> <span class="hljs-string">on</span> <span class="hljs-string">addresses</span> <span class="hljs-string">:[akka.tcp://sparkDriverActorSystem@192.168.108.207:50526]</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Utils:</span> <span class="hljs-string">Successfully</span> <span class="hljs-string">started</span> <span class="hljs-string">service</span> <span class="hljs-string">'sparkDriverActorSystem'</span> <span class="hljs-string">on</span> <span class="hljs-string">port</span> <span class="hljs-number">50526.</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkEnv:</span> <span class="hljs-string">Registering</span> <span class="hljs-string">MapOutputTracker</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkEnv:</span> <span class="hljs-string">Registering</span> <span class="hljs-string">BlockManagerMaster</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DiskBlockManager:</span> <span class="hljs-string">Created</span> <span class="hljs-string">local</span> <span class="hljs-string">directory</span> <span class="hljs-string">at</span> <span class="hljs-attr">C:\Users\qinchaofeng\AppData\Local\Temp\blockmgr-25c047c4-505d-4cfb-addd-d777e5a430d7</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">MemoryStore</span> <span class="hljs-string">started</span> <span class="hljs-string">with</span> <span class="hljs-string">capacity</span> <span class="hljs-number">797.6</span> <span class="hljs-string">MB</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:14</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkEnv:</span> <span class="hljs-string">Registering</span> <span class="hljs-string">OutputCommitCoordinator</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Utils:</span> <span class="hljs-string">Successfully</span> <span class="hljs-string">started</span> <span class="hljs-string">service</span> <span class="hljs-string">'SparkUI'</span> <span class="hljs-string">on</span> <span class="hljs-string">port</span> <span class="hljs-number">4040.</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkUI:</span> <span class="hljs-string">Started</span> <span class="hljs-string">SparkUI</span> <span class="hljs-string">at</span> <span class="hljs-attr">http://192.168.108.207:4040</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Executor:</span> <span class="hljs-string">Starting</span> <span class="hljs-string">executor</span> <span class="hljs-string">ID</span> <span class="hljs-string">driver</span> <span class="hljs-string">on</span> <span class="hljs-string">host</span> <span class="hljs-string">localhost</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Utils:</span> <span class="hljs-string">Successfully</span> <span class="hljs-string">started</span> <span class="hljs-string">service</span> <span class="hljs-string">'org.apache.spark.network.netty.NettyBlockTransferService'</span> <span class="hljs-string">on</span> <span class="hljs-string">port</span> <span class="hljs-number">50533.</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">NettyBlockTransferService:</span> <span class="hljs-string">Server</span> <span class="hljs-string">created</span> <span class="hljs-string">on</span> <span class="hljs-number">50533</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerMaster:</span> <span class="hljs-string">Trying</span> <span class="hljs-string">to</span> <span class="hljs-string">register</span> <span class="hljs-string">BlockManager</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerMasterEndpoint:</span> <span class="hljs-string">Registering</span> <span class="hljs-string">block</span> <span class="hljs-string">manager</span> <span class="hljs-attr">localhost:50533</span> <span class="hljs-string">with</span> <span class="hljs-number">797.6</span> <span class="hljs-string">MB</span> <span class="hljs-string">RAM,</span> <span class="hljs-string">BlockManagerId(driver,</span> <span class="hljs-string">localhost,</span> <span class="hljs-number">50533</span><span class="hljs-string">)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerMaster:</span> <span class="hljs-string">Registered</span> <span class="hljs-string">BlockManager</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">Block</span> <span class="hljs-string">broadcast_0</span> <span class="hljs-string">stored</span> <span class="hljs-string">as</span> <span class="hljs-string">values</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">(estimated</span> <span class="hljs-string">size</span> <span class="hljs-number">153.6</span> <span class="hljs-string">KB,</span> <span class="hljs-string">free</span> <span class="hljs-number">153.6</span> <span class="hljs-string">KB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">Block</span> <span class="hljs-string">broadcast_0_piece0</span> <span class="hljs-string">stored</span> <span class="hljs-string">as</span> <span class="hljs-string">bytes</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">(estimated</span> <span class="hljs-string">size</span> <span class="hljs-number">13.9</span> <span class="hljs-string">KB,</span> <span class="hljs-string">free</span> <span class="hljs-number">167.5</span> <span class="hljs-string">KB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerInfo:</span> <span class="hljs-string">Added</span> <span class="hljs-string">broadcast_0_piece0</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">on</span> <span class="hljs-attr">localhost:50533</span> <span class="hljs-string">(size:</span> <span class="hljs-number">13.9</span> <span class="hljs-string">KB,</span> <span class="hljs-attr">free:</span> <span class="hljs-number">797.6</span> <span class="hljs-string">MB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:15</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkContext:</span> <span class="hljs-string">Created</span> <span class="hljs-string">broadcast</span> <span class="hljs-number">0</span> <span class="hljs-string">from</span> <span class="hljs-string">textFile</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:15</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:16</span> <span class="hljs-string">WARN</span> <span class="hljs-string">:</span> <span class="hljs-string">Your</span> <span class="hljs-string">hostname,</span> <span class="hljs-string">qinchaofeng1</span> <span class="hljs-string">resolves</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">loopback/non-reachable</span> <span class="hljs-attr">address:</span> <span class="hljs-attr">fe80:0:0:0:0:5efe:c0a8:6ccf%12,</span> <span class="hljs-string">but</span> <span class="hljs-string">we</span> <span class="hljs-string">couldn't</span> <span class="hljs-string">find</span> <span class="hljs-string">any</span> <span class="hljs-string">external</span> <span class="hljs-string">IP</span> <span class="hljs-string">address!</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">FileInputFormat:</span> <span class="hljs-string">Total</span> <span class="hljs-string">input</span> <span class="hljs-string">paths</span> <span class="hljs-string">to</span> <span class="hljs-string">process</span> <span class="hljs-string">:</span> <span class="hljs-number">1</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkContext:</span> <span class="hljs-string">Starting</span> <span class="hljs-attr">job:</span> <span class="hljs-string">foreach</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:23</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Registering</span> <span class="hljs-string">RDD</span> <span class="hljs-number">3</span> <span class="hljs-string">(map</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:19)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Got</span> <span class="hljs-string">job</span> <span class="hljs-number">0</span> <span class="hljs-string">(foreach</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:23)</span> <span class="hljs-string">with</span> <span class="hljs-number">1</span> <span class="hljs-string">output</span> <span class="hljs-string">partitions</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Final</span> <span class="hljs-attr">stage:</span> <span class="hljs-string">ResultStage</span> <span class="hljs-number">1</span> <span class="hljs-string">(foreach</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:23)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Parents</span> <span class="hljs-string">of</span> <span class="hljs-string">final</span> <span class="hljs-attr">stage:</span> <span class="hljs-string">List(ShuffleMapStage</span> <span class="hljs-number">0</span><span class="hljs-string">)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Missing</span> <span class="hljs-attr">parents:</span> <span class="hljs-string">List(ShuffleMapStage</span> <span class="hljs-number">0</span><span class="hljs-string">)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Submitting</span> <span class="hljs-string">ShuffleMapStage</span> <span class="hljs-number">0</span> <span class="hljs-string">(MapPartitionsRDD[3]</span> <span class="hljs-string">at</span> <span class="hljs-string">map</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:19),</span> <span class="hljs-string">which</span> <span class="hljs-string">has</span> <span class="hljs-literal">no</span> <span class="hljs-string">missing</span> <span class="hljs-string">parents</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:24</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">Block</span> <span class="hljs-string">broadcast_1</span> <span class="hljs-string">stored</span> <span class="hljs-string">as</span> <span class="hljs-string">values</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">(estimated</span> <span class="hljs-string">size</span> <span class="hljs-number">4.1</span> <span class="hljs-string">KB,</span> <span class="hljs-string">free</span> <span class="hljs-number">171.6</span> <span class="hljs-string">KB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">Block</span> <span class="hljs-string">broadcast_1_piece0</span> <span class="hljs-string">stored</span> <span class="hljs-string">as</span> <span class="hljs-string">bytes</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">(estimated</span> <span class="hljs-string">size</span> <span class="hljs-number">2.3</span> <span class="hljs-string">KB,</span> <span class="hljs-string">free</span> <span class="hljs-number">173.8</span> <span class="hljs-string">KB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerInfo:</span> <span class="hljs-string">Added</span> <span class="hljs-string">broadcast_1_piece0</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">on</span> <span class="hljs-attr">localhost:50533</span> <span class="hljs-string">(size:</span> <span class="hljs-number">2.3</span> <span class="hljs-string">KB,</span> <span class="hljs-attr">free:</span> <span class="hljs-number">797.6</span> <span class="hljs-string">MB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkContext:</span> <span class="hljs-string">Created</span> <span class="hljs-string">broadcast</span> <span class="hljs-number">1</span> <span class="hljs-string">from</span> <span class="hljs-string">broadcast</span> <span class="hljs-string">at</span> <span class="hljs-string">DAGScheduler.scala:1006</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Submitting</span> <span class="hljs-number">1</span> <span class="hljs-string">missing</span> <span class="hljs-string">tasks</span> <span class="hljs-string">from</span> <span class="hljs-string">ShuffleMapStage</span> <span class="hljs-number">0</span> <span class="hljs-string">(MapPartitionsRDD[3]</span> <span class="hljs-string">at</span> <span class="hljs-string">map</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:19)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSchedulerImpl:</span> <span class="hljs-string">Adding</span> <span class="hljs-string">task</span> <span class="hljs-string">set</span> <span class="hljs-number">0.0</span> <span class="hljs-string">with</span> <span class="hljs-number">1</span> <span class="hljs-string">tasks</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSetManager:</span> <span class="hljs-string">Starting</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">0.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-string">localhost,</span> <span class="hljs-string">partition</span> <span class="hljs-number">0</span><span class="hljs-string">,PROCESS_LOCAL,</span> <span class="hljs-number">2108</span> <span class="hljs-string">bytes)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Executor:</span> <span class="hljs-string">Running</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">0.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">0</span><span class="hljs-string">)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">HadoopRDD:</span> <span class="hljs-string">Input</span> <span class="hljs-attr">split:</span> <span class="hljs-attr">file:/D:/test.txt:0+214</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">deprecation:</span> <span class="hljs-string">mapred.tip.id</span> <span class="hljs-string">is</span> <span class="hljs-string">deprecated.</span> <span class="hljs-string">Instead,</span> <span class="hljs-string">use</span> <span class="hljs-string">mapreduce.task.id</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">deprecation:</span> <span class="hljs-string">mapred.task.id</span> <span class="hljs-string">is</span> <span class="hljs-string">deprecated.</span> <span class="hljs-string">Instead,</span> <span class="hljs-string">use</span> <span class="hljs-string">mapreduce.task.attempt.id</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">deprecation:</span> <span class="hljs-string">mapred.task.is.map</span> <span class="hljs-string">is</span> <span class="hljs-string">deprecated.</span> <span class="hljs-string">Instead,</span> <span class="hljs-string">use</span> <span class="hljs-string">mapreduce.task.ismap</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">deprecation:</span> <span class="hljs-string">mapred.task.partition</span> <span class="hljs-string">is</span> <span class="hljs-string">deprecated.</span> <span class="hljs-string">Instead,</span> <span class="hljs-string">use</span> <span class="hljs-string">mapreduce.task.partition</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">deprecation:</span> <span class="hljs-string">mapred.job.id</span> <span class="hljs-string">is</span> <span class="hljs-string">deprecated.</span> <span class="hljs-string">Instead,</span> <span class="hljs-string">use</span> <span class="hljs-string">mapreduce.job.id</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Executor:</span> <span class="hljs-string">Finished</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">0.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">0</span><span class="hljs-string">).</span> <span class="hljs-number">2253</span> <span class="hljs-string">bytes</span> <span class="hljs-string">result</span> <span class="hljs-string">sent</span> <span class="hljs-string">to</span> <span class="hljs-string">driver</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSetManager:</span> <span class="hljs-string">Finished</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">0.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">0</span><span class="hljs-string">)</span> <span class="hljs-string">in</span> <span class="hljs-number">156</span> <span class="hljs-string">ms</span> <span class="hljs-string">on</span> <span class="hljs-string">localhost</span> <span class="hljs-string">(1/1)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSchedulerImpl:</span> <span class="hljs-string">Removed</span> <span class="hljs-string">TaskSet</span> <span class="hljs-number">0.0</span><span class="hljs-string">,</span> <span class="hljs-string">whose</span> <span class="hljs-string">tasks</span> <span class="hljs-string">have</span> <span class="hljs-string">all</span> <span class="hljs-string">completed,</span> <span class="hljs-string">from</span> <span class="hljs-string">pool</span> <br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">ShuffleMapStage</span> <span class="hljs-number">0</span> <span class="hljs-string">(map</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:19)</span> <span class="hljs-string">finished</span> <span class="hljs-string">in</span> <span class="hljs-number">0.156</span> <span class="hljs-string">s</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">looking</span> <span class="hljs-string">for</span> <span class="hljs-string">newly</span> <span class="hljs-string">runnable</span> <span class="hljs-string">stages</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-attr">running:</span> <span class="hljs-string">Set()</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-attr">waiting:</span> <span class="hljs-string">Set(ResultStage</span> <span class="hljs-number">1</span><span class="hljs-string">)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-attr">failed:</span> <span class="hljs-string">Set()</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Submitting</span> <span class="hljs-string">ResultStage</span> <span class="hljs-number">1</span> <span class="hljs-string">(ShuffledRDD[4]</span> <span class="hljs-string">at</span> <span class="hljs-string">reduceByKey</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:21),</span> <span class="hljs-string">which</span> <span class="hljs-string">has</span> <span class="hljs-literal">no</span> <span class="hljs-string">missing</span> <span class="hljs-string">parents</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">Block</span> <span class="hljs-string">broadcast_2</span> <span class="hljs-string">stored</span> <span class="hljs-string">as</span> <span class="hljs-string">values</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">(estimated</span> <span class="hljs-string">size</span> <span class="hljs-number">2.5</span> <span class="hljs-string">KB,</span> <span class="hljs-string">free</span> <span class="hljs-number">176.3</span> <span class="hljs-string">KB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">Block</span> <span class="hljs-string">broadcast_2_piece0</span> <span class="hljs-string">stored</span> <span class="hljs-string">as</span> <span class="hljs-string">bytes</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">(estimated</span> <span class="hljs-string">size</span> <span class="hljs-number">1583.0</span> <span class="hljs-string">B,</span> <span class="hljs-string">free</span> <span class="hljs-number">177.9</span> <span class="hljs-string">KB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerInfo:</span> <span class="hljs-string">Added</span> <span class="hljs-string">broadcast_2_piece0</span> <span class="hljs-string">in</span> <span class="hljs-string">memory</span> <span class="hljs-string">on</span> <span class="hljs-attr">localhost:50533</span> <span class="hljs-string">(size:</span> <span class="hljs-number">1583.0</span> <span class="hljs-string">B,</span> <span class="hljs-attr">free:</span> <span class="hljs-number">797.6</span> <span class="hljs-string">MB)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkContext:</span> <span class="hljs-string">Created</span> <span class="hljs-string">broadcast</span> <span class="hljs-number">2</span> <span class="hljs-string">from</span> <span class="hljs-string">broadcast</span> <span class="hljs-string">at</span> <span class="hljs-string">DAGScheduler.scala:1006</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Submitting</span> <span class="hljs-number">1</span> <span class="hljs-string">missing</span> <span class="hljs-string">tasks</span> <span class="hljs-string">from</span> <span class="hljs-string">ResultStage</span> <span class="hljs-number">1</span> <span class="hljs-string">(ShuffledRDD[4]</span> <span class="hljs-string">at</span> <span class="hljs-string">reduceByKey</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:21)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSchedulerImpl:</span> <span class="hljs-string">Adding</span> <span class="hljs-string">task</span> <span class="hljs-string">set</span> <span class="hljs-number">1.0</span> <span class="hljs-string">with</span> <span class="hljs-number">1</span> <span class="hljs-string">tasks</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSetManager:</span> <span class="hljs-string">Starting</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">1.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-string">localhost,</span> <span class="hljs-string">partition</span> <span class="hljs-number">0</span><span class="hljs-string">,NODE_LOCAL,</span> <span class="hljs-number">1894</span> <span class="hljs-string">bytes)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Executor:</span> <span class="hljs-string">Running</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">1.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">1</span><span class="hljs-string">)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">ShuffleBlockFetcherIterator:</span> <span class="hljs-string">Getting</span> <span class="hljs-number">1</span> <span class="hljs-string">non-empty</span> <span class="hljs-string">blocks</span> <span class="hljs-string">out</span> <span class="hljs-string">of</span> <span class="hljs-number">1</span> <span class="hljs-string">blocks</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">ShuffleBlockFetcherIterator:</span> <span class="hljs-string">Started</span> <span class="hljs-number">0</span> <span class="hljs-string">remote</span> <span class="hljs-string">fetches</span> <span class="hljs-string">in</span> <span class="hljs-number">16</span> <span class="hljs-string">ms</span><br><span class="hljs-attr">avg_flow:</span><span class="hljs-number">1</span><br><span class="hljs-attr">avg_flow_fee:</span><span class="hljs-number">1</span><br><span class="hljs-attr">local_city_nm:</span><span class="hljs-number">1</span><br><span class="hljs-attr">cust_num:</span><span class="hljs-number">1</span><br><span class="hljs-attr">birthday:</span><span class="hljs-number">1</span><br><span class="hljs-attr">Gender:</span><span class="hljs-number">1</span><br><span class="hljs-attr">cust_nm:</span><span class="hljs-number">1</span><br><span class="hljs-attr">join_net_time:</span><span class="hljs-number">1</span><br><span class="hljs-attr">avg_call_fee:</span><span class="hljs-number">1</span><br><span class="hljs-attr">net_age:</span><span class="hljs-number">1</span><br><span class="hljs-attr">prov_code:</span><span class="hljs-number">1</span><br><span class="hljs-attr">cmpgn:</span><span class="hljs-number">1</span><br><span class="hljs-attr">buy_time:</span><span class="hljs-number">1</span><br><span class="hljs-attr">using_meal:</span><span class="hljs-number">1</span><br><span class="hljs-attr">chnl:</span><span class="hljs-number">1</span><br><span class="hljs-attr">arpu:</span><span class="hljs-number">1</span><br><span class="hljs-attr">term_brand:</span><span class="hljs-number">1</span><br><span class="hljs-attr">term_model:</span><span class="hljs-number">1</span><br><span class="hljs-attr">avg_call_times:</span><span class="hljs-number">1</span><br><span class="hljs-attr">flow_pkg:</span><span class="hljs-number">1</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">Executor:</span> <span class="hljs-string">Finished</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">1.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">1</span><span class="hljs-string">).</span> <span class="hljs-number">1165</span> <span class="hljs-string">bytes</span> <span class="hljs-string">result</span> <span class="hljs-string">sent</span> <span class="hljs-string">to</span> <span class="hljs-string">driver</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">ResultStage</span> <span class="hljs-number">1</span> <span class="hljs-string">(foreach</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:23)</span> <span class="hljs-string">finished</span> <span class="hljs-string">in</span> <span class="hljs-number">0.062</span> <span class="hljs-string">s</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSetManager:</span> <span class="hljs-string">Finished</span> <span class="hljs-string">task</span> <span class="hljs-number">0.0</span> <span class="hljs-string">in</span> <span class="hljs-string">stage</span> <span class="hljs-number">1.0</span> <span class="hljs-string">(TID</span> <span class="hljs-number">1</span><span class="hljs-string">)</span> <span class="hljs-string">in</span> <span class="hljs-number">62</span> <span class="hljs-string">ms</span> <span class="hljs-string">on</span> <span class="hljs-string">localhost</span> <span class="hljs-string">(1/1)</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">TaskSchedulerImpl:</span> <span class="hljs-string">Removed</span> <span class="hljs-string">TaskSet</span> <span class="hljs-number">1.0</span><span class="hljs-string">,</span> <span class="hljs-string">whose</span> <span class="hljs-string">tasks</span> <span class="hljs-string">have</span> <span class="hljs-string">all</span> <span class="hljs-string">completed,</span> <span class="hljs-string">from</span> <span class="hljs-string">pool</span> <br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">DAGScheduler:</span> <span class="hljs-string">Job</span> <span class="hljs-number">0</span> <span class="hljs-attr">finished:</span> <span class="hljs-string">foreach</span> <span class="hljs-string">at</span> <span class="hljs-string">WordCount.scala:23,</span> <span class="hljs-string">took</span> <span class="hljs-number">0.356812</span> <span class="hljs-string">s</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkUI:</span> <span class="hljs-string">Stopped</span> <span class="hljs-string">Spark</span> <span class="hljs-string">web</span> <span class="hljs-string">UI</span> <span class="hljs-string">at</span> <span class="hljs-attr">http://192.168.108.207:4040</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MapOutputTrackerMasterEndpoint:</span> <span class="hljs-string">MapOutputTrackerMasterEndpoint</span> <span class="hljs-string">stopped!</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">MemoryStore:</span> <span class="hljs-string">MemoryStore</span> <span class="hljs-string">cleared</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManager:</span> <span class="hljs-string">BlockManager</span> <span class="hljs-string">stopped</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">BlockManagerMaster:</span> <span class="hljs-string">BlockManagerMaster</span> <span class="hljs-string">stopped</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-string">OutputCommitCoordinator$OutputCommitCoordinatorEndpoint:</span> <span class="hljs-string">OutputCommitCoordinator</span> <span class="hljs-string">stopped!</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">SparkContext:</span> <span class="hljs-string">Successfully</span> <span class="hljs-string">stopped</span> <span class="hljs-string">SparkContext</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">ShutdownHookManager:</span> <span class="hljs-string">Shutdown</span> <span class="hljs-string">hook</span> <span class="hljs-string">called</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-string">RemoteActorRefProvider$RemotingTerminator:</span> <span class="hljs-string">Shutting</span> <span class="hljs-string">down</span> <span class="hljs-string">remote</span> <span class="hljs-string">daemon.</span><br><span class="hljs-number">16</span><span class="hljs-string">/07/18</span> <span class="hljs-number">19</span><span class="hljs-string">:07:25</span> <span class="hljs-string">INFO</span> <span class="hljs-attr">ShutdownHookManager:</span> <span class="hljs-string">Deleting</span> <span class="hljs-string">directory</span> <span class="hljs-attr">C:\Users\qinchaofeng\AppData\Local\Temp\spark-c54f4cb1-7351-47d1-9fd4-fbdac0fae228</span><br></code></pre></td></tr></table></figure><p>可以看到已经执行成功了！</p><p><a href="https://github.com/windyqinchaofeng/Sparkcoding/blob/master/src/com/csap/spark/WordCount.scala" target="_blank" rel="noopener">源码</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十四）——Vertica实时消费kafka实现</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94Vertica%E5%AE%9E%E6%97%B6%E6%B6%88%E8%B4%B9kafka%E5%AE%9E%E7%8E%B0/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94Vertica%E5%AE%9E%E6%97%B6%E6%B6%88%E8%B4%B9kafka%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>一、    安装环境<br>Vertica官方提供了消费kafka的方法，需要注意版本对应<br> <img src="http://upload-images.jianshu.io/upload_images/4579636-1bdb8d907cc0f59a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="这里写图片描述"><br>消费kafka原理，是Vertica提供的Udx</p><p><img src="http://upload-images.jianshu.io/upload_images/4579636-a50aee6cba0da716?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="这里写图片描述"></p><p>首先需要安装相应的环境</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-regexp">/$&#123;vertica&#125;/</span>packages<span class="hljs-regexp">/kafka/</span>ddl<span class="hljs-regexp">/install.sql</span><br></code></pre></td></tr></table></figure><p>判断是否安装成功</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-regexp">/$&#123;vertica&#125;/</span>packages<span class="hljs-regexp">/kafka/</span>ddl<span class="hljs-regexp">/isinstalled.sql</span><br></code></pre></td></tr></table></figure><p>二、    单次消费kafka<br>参考官方文档 <a href="https://my.vertica.com/docs/7.2.x/HTML/index.htm#Authoring/KafkaIntegrationGuide/UsingCOPYwithKafka.htm?TocPath=Integrating%2520with%2520Apache%2520Kafka%7C_____5" target="_blank" rel="noopener">Using COPY with Kafka</a></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">COPY schema.target_table SOURCE KafkaSource (stream=<span class="hljs-string">'topic1|1|1,topic2|2|2'</span>, brokers=<span class="hljs-string">'host1:9092,<br>                                                host2:9092'</span>,<span class="hljs-built_in">duration</span>= INTERVAL<span class="hljs-string">'timeslice'</span>,stop_on_eof=<span class="hljs-literal">TRUE</span>,<br>                                                eof_timeout= INTERVAL<span class="hljs-string">'timeslice'</span>)<br>        PARSER KafkaJSONParser(flatten_arrays=<span class="hljs-literal">False</span>, flatten_maps=<span class="hljs-literal">False</span>)<br>           REJECTED <span class="hljs-built_in">DATA</span> AS TABLE schema.rejection_table TRICKLE;<br></code></pre></td></tr></table></figure><p>三、    实时消费kafka<br>参考官方文档<a href="https://my.vertica.com/docs/7.2.x/HTML/index.htm#Authoring/KafkaIntegrationGuide/Using_Kafka_with_HP_Vertica.htm?TocPath=Integrating%2520with%2520Apache%2520Kafka%7C_____4" target="_blank" rel="noopener">Using Kafka with Vertica</a></p><ol><li>首先创建一个Scheduler</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/packages/kafka/bin/vkconfig<span class="hljs-built_in"> scheduler </span>--<span class="hljs-builtin-name">add</span> --config-schema myScheduler --operator user1<br></code></pre></td></tr></table></figure><p>使用conf封装Vertica数据库登录信息</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">kafka_config=”—cinfig-schema kafka01 –dbhoust <span class="hljs-number">172.17</span><span class="hljs-number">.12</span><span class="hljs-number">.1</span> –username dbadmin –password pass1”<br></code></pre></td></tr></table></figure><ol start="2"><li>创建Scheduler脚本</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/packages/kafka/bin/vkconfig<span class="hljs-built_in"> scheduler </span>–<span class="hljs-builtin-name">add</span> <span class="hljs-variable">$&#123; kafka_config &#125;</span> –config-schema kafka_config  --operator dbadmin<br></code></pre></td></tr></table></figure><ol start="3"><li>创建kafka集群信息</li></ol><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">BROKERS=”<span class="hljs-number">172.17</span><span class="hljs-meta">.12</span><span class="hljs-meta">.2</span>:<span class="hljs-number">9099</span>, <span class="hljs-number">172.17</span><span class="hljs-meta">.12</span><span class="hljs-meta">.3</span>:<span class="hljs-number">9099</span>, <span class="hljs-number">172.17</span><span class="hljs-meta">.12</span><span class="hljs-meta">.4</span>:<span class="hljs-number">9099</span>”<br>/opt/vertica/packages/kafka/bin/vkconfig kafka-cluster –<span class="hljs-keyword">add</span>  $&#123; kafka_config &#125; --onfig-schema kafka_config  --cluster KafkaCluster –brokers $ BROKERS<br></code></pre></td></tr></table></figure><ol start="4"><li>读取topic</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/packages/kafka/bin/vkconfig topic –add $&#123; kafka_config &#125; –target public<span class="hljs-selector-class">.kafka_tgt</span> –rejection-<span class="hljs-selector-tag">table</span> public<span class="hljs-selector-class">.kafka_rej</span> –cluster KafkaCluster –topic web_pagelogs –number-partitions <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><ol start="5"><li>发布Scheduler</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-regexp">/opt/</span>vertica<span class="hljs-regexp">/packages/</span>kafka<span class="hljs-regexp">/bin/</span>vkconfig launch <span class="hljs-variable">$&#123; kafka_config &#125;</span> -- onfig-schema kafka_config –instance-name webpagelogs<br></code></pre></td></tr></table></figure><ol start="6"><li>删除scheduler</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/packages/kafka/bin/vkconfig<span class="hljs-built_in"> scheduler </span><span class="hljs-variable">$&#123;kafka_config&#125;</span> –<span class="hljs-builtin-name">remove</span> –config-schema kafka_config<br></code></pre></td></tr></table></figure><ol start="7"><li>删除topic接收</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-regexp">/opt/</span>vertica<span class="hljs-regexp">/packages/</span>kafka<span class="hljs-regexp">/bin/</span>vkconfig topic <span class="hljs-variable">$&#123;kafka_config&#125;</span> –remove –target public.kafka_tgt<br></code></pre></td></tr></table></figure><p>PS：<br>通过最新对Vertica消费kafka的使用，发现这个功能比较鸡肋。多个topic也只能放到一个scheduler里面执行消费，而且每次修改增加都需要停下所有topic的消费进程。另外在使用过程中也发现了丢失数据的现象。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十三）——Vertica备份元数据信息</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Vertica%E5%A4%87%E4%BB%BD%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Vertica%E5%A4%87%E4%BB%BD%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><blockquote><p>—备份资源池</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span>    <span class="hljs-string">'CREATE RESOURCE POOL '</span> || <span class="hljs-keyword">name</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> memorysize                <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' MEMORYSIZE '</span>                 || <span class="hljs-string">''''</span> || memorysize               || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> maxmemorysize = <span class="hljs-string">''</span>                <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' MAXMEMORYSIZE '</span>              || <span class="hljs-string">''''</span> || maxmemorysize            || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> executionparallelism     = <span class="hljs-string">'AUTO'</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' EXECUTIONPARALLELISM '</span>       || <span class="hljs-string">''''</span> || executionparallelism     || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> NULLIFZERO(<span class="hljs-keyword">priority</span>)      <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' PRIORITY '</span>                   || <span class="hljs-string">''''</span> || <span class="hljs-keyword">priority</span>                 || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> runtimepriority           <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' RUNTIMEPRIORITY '</span>            ||         runtimepriority                  <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> runtimeprioritythreshold  <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' RUNTIMEPRIORITYTHRESHOLD '</span>   ||         runtimeprioritythreshold         <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> queuetimeout              <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' QUEUETIMEOUT '</span>               ||         queuetimeout                     <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> maxconcurrency            <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' MAXCONCURRENCY '</span>             ||         maxconcurrency                   <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> runtimecap                <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' RUNTIMECAP '</span>                 || <span class="hljs-string">''''</span> || runtimecap               || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-string">' ; '</span><br><span class="hljs-keyword">FROM</span> v_catalog.resource_pools<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NOT</span> is_internal<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span>;<br></code></pre></td></tr></table></figure><blockquote><p>—备份角色</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Create Roles'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'CREATE ROLE '</span> || <span class="hljs-keyword">name</span> || <span class="hljs-string">' ;'</span> <span class="hljs-keyword">AS</span> TXT_CR<br><span class="hljs-keyword">FROM</span> v_catalog.roles<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'public'</span>,<span class="hljs-string">'dbadmin'</span>,<span class="hljs-string">'pseudosuperuser'</span>,<span class="hljs-string">'dbduser'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Add users to roles'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'GRANT '</span> || all_roles || <span class="hljs-string">' TO '</span> || user_name || <span class="hljs-string">';'</span><br><span class="hljs-keyword">FROM</span> v_catalog.users<br><span class="hljs-keyword">WHERE</span> user_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'dbadmin'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>–备份schema</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Create Schema'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'CREATE SCHEMA '</span> || schema_name  ||  <span class="hljs-string">';'</span><br><span class="hljs-keyword">FROM</span> schemata<br><span class="hljs-keyword">WHERE</span> schema_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'v_internal'</span>,<span class="hljs-string">'v_catalog'</span>,<span class="hljs-string">'v_monitor'</span>,<span class="hljs-string">'TxtIndex'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>–备份用户</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Create Users'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'CREATE USER '</span> || user_name  || <span class="hljs-string">' RESOURCE POOL '</span> || resource_pool ||  <span class="hljs-string">' ;'</span><br><span class="hljs-keyword">FROM</span> v_catalog.users<br><span class="hljs-keyword">WHERE</span> user_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'dbadmin'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>—各手shcema大小</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-comment">/*+(estimated_raw_size)*/</span><br>       pj.anchor_table_schema,<br>       pj.used_compressed_gb,<br>       pj.used_compressed_gb * la.ratio <span class="hljs-keyword">AS</span> raw_estimate_gb<br><span class="hljs-keyword">FROM</span>   (<span class="hljs-keyword">SELECT</span> ps.anchor_table_schema,<br>               <span class="hljs-keyword">SUM</span>(used_bytes) / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> ) <span class="hljs-keyword">AS</span> used_compressed_gb<br>        <span class="hljs-keyword">FROM</span>   v_catalog.projections p<br>               <span class="hljs-keyword">JOIN</span> v_monitor.projection_storage ps<br>                 <span class="hljs-keyword">ON</span> ps.projection_id = p.projection_id<br>        <span class="hljs-keyword">WHERE</span>  p.is_super_projection = <span class="hljs-string">'t'</span><br>        <span class="hljs-keyword">GROUP</span>  <span class="hljs-keyword">BY</span> ps.anchor_table_schema) pj<br>       <span class="hljs-keyword">CROSS</span> <span class="hljs-keyword">JOIN</span> (<span class="hljs-keyword">SELECT</span> (<span class="hljs-keyword">SELECT</span> database_size_bytes<br>                           <span class="hljs-keyword">FROM</span>   v_catalog.license_audits<br>                           <span class="hljs-keyword">ORDER</span>  <span class="hljs-keyword">BY</span> audit_start_timestamp <span class="hljs-keyword">DESC</span><br>                           <span class="hljs-keyword">LIMIT</span>  <span class="hljs-number">1</span>) / (<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">SUM</span>(used_bytes)<br>                                        <span class="hljs-keyword">FROM</span>   V_MONITOR.projection_storage) <span class="hljs-keyword">AS</span> ratio) la<br><span class="hljs-keyword">ORDER</span>  <span class="hljs-keyword">BY</span> pj.used_compressed_gb <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><blockquote><p>–备份赋权语句<br>–backup grants</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> <span class="hljs-string">'grant '</span>|| privileges_description || <span class="hljs-string">' on '</span>|| object_name || <span class="hljs-string">' to '</span>|| grantee||<span class="hljs-string">';'</span> <br><span class="hljs-keyword">from</span> <span class="hljs-keyword">grants</span> <span class="hljs-keyword">where</span> grantor&lt;&gt;grantee <br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> object_name;<br></code></pre></td></tr></table></figure><p>备份建表语句以及schema语句</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">SELECT EXPORT_CATALOG('','DESIGN_ALL')<span class="hljs-string">"</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十二）——-vertica备份与恢复</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94-vertica%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94-vertica%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="最近在使用vertica，上网找了很多资料都没有，只有自己看官方文档动手搞一下了，今天搞了vertica的备份与恢复-以下是整理的过程，分享给大家，如有问题欢迎大家指正-可加QQ群交流：412191494"><a href="#最近在使用vertica，上网找了很多资料都没有，只有自己看官方文档动手搞一下了，今天搞了vertica的备份与恢复-以下是整理的过程，分享给大家，如有问题欢迎大家指正-可加QQ群交流：412191494" class="headerlink" title="最近在使用vertica，上网找了很多资料都没有，只有自己看官方文档动手搞一下了，今天搞了vertica的备份与恢复 以下是整理的过程，分享给大家，如有问题欢迎大家指正~ 可加QQ群交流：412191494"></a>最近在使用vertica，上网找了很多资料都没有，只有自己看官方文档动手搞一下了，今天搞了vertica的备份与恢复 以下是整理的过程，分享给大家，如有问题欢迎大家指正~ 可加QQ群交流：412191494</h2><h2 id="1、vertica备份"><a href="#1、vertica备份" class="headerlink" title="1、vertica备份"></a>1、vertica备份</h2><h2 id="1-1-vertica备份配置"><a href="#1-1-vertica备份配置" class="headerlink" title="1.1 vertica备份配置:"></a>1.1 vertica备份配置:</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py  --setupconfig<br>Snapshot name (backup_snapshot): full_backup20160505<br>Number of restore points (1): 1<br>Specify objects (<span class="hljs-literal">no</span> default): <br>Object restore mode (coexist, createOrReplace <span class="hljs-keyword">or</span> create) (createOrReplace): <br>Vertica<span class="hljs-built_in"> user </span>name (dbadmin): dbadmin<br>Save password <span class="hljs-keyword">to</span> avoid runtime prompt? (n) [y/n]: y<br>Database<span class="hljs-built_in"> user </span>password <span class="hljs-keyword">to</span> save <span class="hljs-keyword">in</span> vbr password<span class="hljs-built_in"> config </span>file (<span class="hljs-literal">no</span> default):<br>Node v_windy1990_node0001<br>Backup host name (<span class="hljs-literal">no</span> default): 192.168.231.110<br>Backup directory (<span class="hljs-literal">no</span> default): /home/dbadmin/backup<br>Change advanced settings? (n) [y/n]: y<br>Temp directory (/tmp/vbr): <br>Number of times <span class="hljs-keyword">to</span> retry (2): <br>Seconds between retry attempts (1): <br>Encrypt data during transmission? (n) [y/n]: <br>Use checksum <span class="hljs-keyword">for</span> data integrity (<span class="hljs-keyword">not</span> file data <span class="hljs-keyword">and</span> size)? (n) [y/n]: <span class="hljs-built_in"><br>Port </span>number <span class="hljs-keyword">for</span> rsync daemon (50000): <span class="hljs-built_in"><br>User </span>name <span class="hljs-keyword">to</span> access rsync daemon (<span class="hljs-literal">no</span> default): <br>Password of the<span class="hljs-built_in"> user </span>who accesses rsync daemon:<br>Backup transfer bandwidth limit <span class="hljs-keyword">in</span> KBps <span class="hljs-keyword">or</span> 0 <span class="hljs-keyword">for</span> unlimited (0): <br>Number of concurrency <span class="hljs-keyword">for</span> backup (1): <br>Restore transfer bandwidth limit <span class="hljs-keyword">in</span> KBps <span class="hljs-keyword">or</span> 0 <span class="hljs-keyword">for</span> unlimited (0): <br>Number of concurrency <span class="hljs-keyword">for</span> restore (1): <br>Password file name (<span class="hljs-literal">no</span> default): password<br>Saved vbr password <span class="hljs-keyword">to</span> password.<span class="hljs-built_in"><br>Config </span>file name (full_backup20160505.ini): <br>Saved vbr<span class="hljs-built_in"> config </span><span class="hljs-keyword">to</span> full_backup20160505.ini.<br></code></pre></td></tr></table></figure><h2 id="备份成功后查看备份的文件内容如下："><a href="#备份成功后查看备份的文件内容如下：" class="headerlink" title="备份成功后查看备份的文件内容如下："></a>备份成功后查看备份的文件内容如下：</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ more full_backup20160505.ini <br>[Misc]<br>snapshotName = full_backup20160505<br>restorePointLimit = 1<br>objectRestoreMode = createOrReplace<br>tempDir = /tmp/vbr<br>retryCount = 2<br>retryDelay = 1<br>passwordFile = password<br><br>[Database]<br>dbName = Windy1990<br>dbUser = dbadmin<br><br>[Transmission]<br>encrypt = False<br>checksum = False<br>port_rsync = 50000<br>serviceAccessUser = None<br>total_bwlimit_backup = 0<br>concurrency_backup = 1<br>total_bwlimit_restore = 0<br>concurrency_restore = 1<br><br>[Mapping]<br>v_windy1990_node0001 = 192.168.231.110:/home/dbadmin/backup<br></code></pre></td></tr></table></figure><h2 id="备份中我选了一个文件保存密码："><a href="#备份中我选了一个文件保存密码：" class="headerlink" title="备份中我选了一个文件保存密码："></a>备份中我选了一个文件保存密码：</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/<span class="hljs-built_in">home</span>/dbadmin/password<br></code></pre></td></tr></table></figure><h2 id="里面存有数据路的密码："><a href="#里面存有数据路的密码：" class="headerlink" title="里面存有数据路的密码："></a>里面存有数据路的密码：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ more password <br>[Passwords]<br>dbPassword = dbadmin<br>1.2 vertica 全备份<br>官方文档：<br>A full <span class="hljs-keyword">backup</span> <span class="hljs-keyword">is</span> a <span class="hljs-keyword">complete</span> copy <span class="hljs-keyword">of</span> the <span class="hljs-keyword">database</span> <span class="hljs-keyword">catalog</span>, its schemas, <span class="hljs-keyword">tables</span>, <span class="hljs-keyword">and</span> other objects. It <span class="hljs-keyword">is</span> a <span class="hljs-keyword">consistent</span> image <span class="hljs-keyword">of</span> the <span class="hljs-keyword">database</span> <span class="hljs-keyword">at</span> the <span class="hljs-keyword">time</span> the <span class="hljs-keyword">backup</span> occurred. You can <span class="hljs-keyword">use</span> a <span class="hljs-keyword">full</span> <span class="hljs-keyword">backup</span> <span class="hljs-keyword">for</span> disaster <span class="hljs-keyword">recovery</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">restore</span> a damaged <span class="hljs-keyword">or</span> incomplete database.<br></code></pre></td></tr></table></figure><h2 id="执行备份命令："><a href="#执行备份命令：" class="headerlink" title="执行备份命令："></a>执行备份命令：</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py --task backup --config-file full_backup20160505.ini<br><span class="hljs-keyword">Error: </span>Manifest not found at rsync://[192.168.231.110]:50000/home/dbadmin/backup/ -- is the backup location initialized? Hint: Execute '--task init' first.<br>Backup FAILED.<br></code></pre></td></tr></table></figure><h2 id="发现报错了，根据提示，必须先初始化路径（个人理解的就是先声明路径）"><a href="#发现报错了，根据提示，必须先初始化路径（个人理解的就是先声明路径）" class="headerlink" title="发现报错了，根据提示，必须先初始化路径（个人理解的就是先声明路径）"></a>发现报错了，根据提示，必须先初始化路径（个人理解的就是先声明路径）</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ <span class="hljs-regexp">/opt/</span>vertica<span class="hljs-regexp">/bin/</span>vbr.py --<span class="hljs-keyword">task</span> init --config-<span class="hljs-keyword">file</span> full_backup20160505.ini<br>Initializing backup locations.<br>Backup locations initialized.<br></code></pre></td></tr></table></figure><h2 id="路径声明成功！-查看该备份路径下多了一个文件。"><a href="#路径声明成功！-查看该备份路径下多了一个文件。" class="headerlink" title="路径声明成功！ 查看该备份路径下多了一个文件。"></a>路径声明成功！ 查看该备份路径下多了一个文件。</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost backup]$ ls -l<br>total 4<br>-rw-r--r--.<span class="hljs-number"> 1 </span>dbadmin verticadba<span class="hljs-number"> 22 </span>May <span class="hljs-number"> 5 </span>13:47 backup_manifest<br></code></pre></td></tr></table></figure><h2 id="然后再次执行备份命令："><a href="#然后再次执行备份命令：" class="headerlink" title="然后再次执行备份命令："></a>然后再次执行备份命令：</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-regexp">/opt/</span>vertica<span class="hljs-regexp">/bin/</span>vbr.py --<span class="hljs-keyword">task</span> backup --config-<span class="hljs-keyword">file</span> full_backup20160505.ini<br></code></pre></td></tr></table></figure><h2 id="可以看到这次可以备份成功了："><a href="#可以看到这次可以备份成功了：" class="headerlink" title="可以看到这次可以备份成功了："></a>可以看到这次可以备份成功了：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py <span class="hljs-comment">--task backup --config-file full_backup20160505.ini</span><br>Starting <span class="hljs-keyword">backup</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">database</span> Windy1990.<br>Participating nodes: v_windy1990_node0001.<br>Snapshotting database.<br><span class="hljs-keyword">Snapshot</span> complete.<br>Approximate <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">to</span> copy: <span class="hljs-number">60269241</span> <span class="hljs-keyword">of</span> <span class="hljs-number">60269241</span> total.<br>[==================================================] <span class="hljs-number">100</span>%<br>Copying <span class="hljs-keyword">backup</span> metadata.<br>Finalizing backup.<br><span class="hljs-keyword">Backup</span> <span class="hljs-keyword">complete</span>!<br></code></pre></td></tr></table></figure><h2 id="我们可以看到，已经完全备份了vertica数据库。-此时我们应该可以猜到，备份的数据存在我们刚刚声明的路径-home-dbamin-backup下："><a href="#我们可以看到，已经完全备份了vertica数据库。-此时我们应该可以猜到，备份的数据存在我们刚刚声明的路径-home-dbamin-backup下：" class="headerlink" title="我们可以看到，已经完全备份了vertica数据库。 此时我们应该可以猜到，备份的数据存在我们刚刚声明的路径/home/dbamin/backup下："></a>我们可以看到，已经完全备份了vertica数据库。 此时我们应该可以猜到，备份的数据存在我们刚刚声明的路径/home/dbamin/backup下：</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost backup]$ ll<br>total 12<br>-rw-r--r--.<span class="hljs-number"> 1 </span>dbadmin verticadba<span class="hljs-number"> 1044 </span>May <span class="hljs-number"> 5 </span>14:08 backup_manifest<br>drwxr-xr-x.<span class="hljs-number"> 8 </span>dbadmin verticadba<span class="hljs-number"> 4096 </span>May <span class="hljs-number"> 5 </span>14:07 Objects<br>drwxr-xr-x.<span class="hljs-number"> 3 </span>dbadmin verticadba<span class="hljs-number"> 4096 </span>May <span class="hljs-number"> 5 </span>14:08 Snapshots<br></code></pre></td></tr></table></figure><h2 id="可以看到多了2个文件夹-Objects-Snapshots-我们打开Objects文件夹可以看到，我们的vertica数据库文件就在该目录下。-home-dbadmin-backup-Snapshots-full-backup20160505-20160505-060600-v-windy1990-node0001目录下存放着我们备份的原vertica数据库的一下信息。"><a href="#可以看到多了2个文件夹-Objects-Snapshots-我们打开Objects文件夹可以看到，我们的vertica数据库文件就在该目录下。-home-dbadmin-backup-Snapshots-full-backup20160505-20160505-060600-v-windy1990-node0001目录下存放着我们备份的原vertica数据库的一下信息。" class="headerlink" title="可以看到多了2个文件夹 /Objects / Snapshots 我们打开Objects文件夹可以看到，我们的vertica数据库文件就在该目录下。 /home/dbadmin/backup/Snapshots/full_backup20160505_20160505_060600/v_windy1990_node0001目录下存放着我们备份的原vertica数据库的一下信息。"></a>可以看到多了2个文件夹 /Objects / Snapshots 我们打开Objects文件夹可以看到，我们的vertica数据库文件就在该目录下。 /home/dbadmin/backup/Snapshots/full_backup20160505_20160505_060600/v_windy1990_node0001目录下存放着我们备份的原vertica数据库的一下信息。</h2><h2 id="检查每个节点的数据流："><a href="#检查每个节点的数据流：" class="headerlink" title="检查每个节点的数据流："></a>检查每个节点的数据流：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">select node_name,sum(used_bytes) as size_in_bytes <span class="hljs-keyword">from</span> v_monitor.storage_containers<span class="hljs-built_in"> group </span>by node_name;<br></code></pre></td></tr></table></figure><h2 id="1-3-vertica的增量备份-官方文档上是把全量和增量一起介绍的，称为Full-and-Incremental-Backups，在这里我把增量单独列了出来。-restorePointLimit控制着增量备份集的数量-我这只有一个节点，刚在配置备份文件的时候设置restorePointLimit-1-再次执行1-2中的全备份命令即可实现增量备份"><a href="#1-3-vertica的增量备份-官方文档上是把全量和增量一起介绍的，称为Full-and-Incremental-Backups，在这里我把增量单独列了出来。-restorePointLimit控制着增量备份集的数量-我这只有一个节点，刚在配置备份文件的时候设置restorePointLimit-1-再次执行1-2中的全备份命令即可实现增量备份" class="headerlink" title="1.3 vertica的增量备份 官方文档上是把全量和增量一起介绍的，称为Full and Incremental Backups，在这里我把增量单独列了出来。 restorePointLimit控制着增量备份集的数量 我这只有一个节点，刚在配置备份文件的时候设置restorePointLimit = 1 再次执行1.2中的全备份命令即可实现增量备份~"></a>1.3 vertica的增量备份 官方文档上是把全量和增量一起介绍的，称为Full and Incremental Backups，在这里我把增量单独列了出来。 restorePointLimit控制着增量备份集的数量 我这只有一个节点，刚在配置备份文件的时候设置restorePointLimit = 1 再次执行1.2中的全备份命令即可实现增量备份~</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py <span class="hljs-comment">--task backup --config-file full_backup20160505.ini</span><br>Starting <span class="hljs-keyword">backup</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">database</span> Windy1990.<br>Participating nodes: v_windy1990_node0001.<br>Snapshotting database.<br><span class="hljs-keyword">Snapshot</span> complete.<br>Approximate <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">to</span> copy: <span class="hljs-number">0</span> <span class="hljs-keyword">of</span> <span class="hljs-number">60269241</span> total.<br>[==================================================] <span class="hljs-number">100</span>%<br>Copying <span class="hljs-keyword">backup</span> metadata.<br>Finalizing backup.<br><span class="hljs-keyword">Backup</span> <span class="hljs-keyword">complete</span>!<br></code></pre></td></tr></table></figure><h2 id="有人会问，我怎么知道这样就是增量备份而不是全量备份的呢？？-这个问题很好，我备份的时候也在想，备份完成后，我再次打开了backup文件夹，看到："><a href="#有人会问，我怎么知道这样就是增量备份而不是全量备份的呢？？-这个问题很好，我备份的时候也在想，备份完成后，我再次打开了backup文件夹，看到：" class="headerlink" title="有人会问，我怎么知道这样就是增量备份而不是全量备份的呢？？ 这个问题很好，我备份的时候也在想，备份完成后，我再次打开了backup文件夹，看到："></a>有人会问，我怎么知道这样就是增量备份而不是全量备份的呢？？ 这个问题很好，我备份的时候也在想，备份完成后，我再次打开了backup文件夹，看到：</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ cd backup/<br>[dbadmin@localhost backup]$ ll<br>total 12<br>-rw-r--r--.<span class="hljs-number"> 1 </span>dbadmin verticadba<span class="hljs-number"> 1103 </span>May <span class="hljs-number"> 5 </span>14:36 backup_manifest<br>drwxr-xr-x.<span class="hljs-number"> 8 </span>dbadmin verticadba<span class="hljs-number"> 4096 </span>May <span class="hljs-number"> 5 </span>14:07 Objects<br>drwxr-xr-x.<span class="hljs-number"> 4 </span>dbadmin verticadba<span class="hljs-number"> 4096 </span>May <span class="hljs-number"> 5 </span>14:36 Snapshots<br></code></pre></td></tr></table></figure><h2 id="大家看Objects目录的时间，因为在此过程中我没有对vertica数据库进行操作，所以vertica数据库文件还是原来的就没有更新。-所以想要知道上面我们操作的是增量的其实很简单，我在vertica数据库中的任意一张表中插入一条数据，然后我再执行上面的备份脚本。-我插入一条手机号："><a href="#大家看Objects目录的时间，因为在此过程中我没有对vertica数据库进行操作，所以vertica数据库文件还是原来的就没有更新。-所以想要知道上面我们操作的是增量的其实很简单，我在vertica数据库中的任意一张表中插入一条数据，然后我再执行上面的备份脚本。-我插入一条手机号：" class="headerlink" title="大家看Objects目录的时间，因为在此过程中我没有对vertica数据库进行操作，所以vertica数据库文件还是原来的就没有更新。 所以想要知道上面我们操作的是增量的其实很简单，我在vertica数据库中的任意一张表中插入一条数据，然后我再执行上面的备份脚本。 我插入一条手机号："></a>大家看Objects目录的时间，因为在此过程中我没有对vertica数据库进行操作，所以vertica数据库文件还是原来的就没有更新。 所以想要知道上面我们操作的是增量的其实很简单，我在vertica数据库中的任意一张表中插入一条数据，然后我再执行上面的备份脚本。 我插入一条手机号：</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; insert into tb<span class="hljs-emphasis">_serv_</span>num values(<span class="hljs-emphasis">'13488888888'</span>,<span class="hljs-emphasis">'qin**'</span>);<br><span class="hljs-section"> OUTPUT <br>--------</span><br><span class="hljs-code">      1</span><br>(1 row)<br><br>dbadmin=&gt; commit;<br>COMMIT<br>dbadmin=&gt; \q<br></code></pre></td></tr></table></figure><h2 id="然后重新执行备份语句，执行后查看backup文件下的内容："><a href="#然后重新执行备份语句，执行后查看backup文件下的内容：" class="headerlink" title="然后重新执行备份语句，执行后查看backup文件下的内容："></a>然后重新执行备份语句，执行后查看backup文件下的内容：</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ cd backup/<br>[dbadmin@localhost backup]$ ll<br>total 12<br>-rw-r--r--.<span class="hljs-number"> 1 </span>dbadmin verticadba<span class="hljs-number"> 1171 </span>May <span class="hljs-number"> 5 </span>14:46 backup_manifest<br>drwxr-xr-x.<span class="hljs-number"> 9 </span>dbadmin verticadba<span class="hljs-number"> 4096 </span>May <span class="hljs-number"> 5 </span>14:46 Objects<br>drwxr-xr-x.<span class="hljs-number"> 4 </span>dbadmin verticadba<span class="hljs-number"> 4096 </span>May <span class="hljs-number"> 5 </span>14:46 Snapshots<br></code></pre></td></tr></table></figure><h2 id="看文件时间，是不是说明我们上面的推理是正确的呢-所以，不要怀疑了，我们的增量备份是没有问题的！-1-4-vertica对象级备份-官网文档：-The-database-administrator-user-can-create-object-level-backups-consisting-of-one-or-more-schemas-and-tables-Object-level-backups-are-especially-useful-for-multi-tenanted-database-sites-其实对象级备份和全量备份差不多，知识在生成备份配置文件时有所不同（注意不同之处）："><a href="#看文件时间，是不是说明我们上面的推理是正确的呢-所以，不要怀疑了，我们的增量备份是没有问题的！-1-4-vertica对象级备份-官网文档：-The-database-administrator-user-can-create-object-level-backups-consisting-of-one-or-more-schemas-and-tables-Object-level-backups-are-especially-useful-for-multi-tenanted-database-sites-其实对象级备份和全量备份差不多，知识在生成备份配置文件时有所不同（注意不同之处）：" class="headerlink" title="看文件时间，是不是说明我们上面的推理是正确的呢~~~ 所以，不要怀疑了，我们的增量备份是没有问题的！ 1.4 vertica对象级备份 官网文档： The database administrator user can create object-level backups consisting of one or more schemas and tables. Object-level backups are especially useful for multi-tenanted database sites. 其实对象级备份和全量备份差不多，知识在生成备份配置文件时有所不同（注意不同之处）："></a>看文件时间，是不是说明我们上面的推理是正确的呢~~~ 所以，不要怀疑了，我们的增量备份是没有问题的！ 1.4 vertica对象级备份 官网文档： The database administrator user can create object-level backups consisting of one or more schemas and tables. Object-level backups are especially useful for multi-tenanted database sites. 其实对象级备份和全量备份差不多，知识在生成备份配置文件时有所不同（注意不同之处）：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py --setupconfigSnapshot name (backup_snapshot): backup_object_tb_serv<br>Number of restore points (1): <br>Specify objects (<span class="hljs-literal">no</span> default): tb_serv_num<br>Object restore mode (coexist, createOrReplace <span class="hljs-keyword">or</span> create) (createOrReplace): <br>Vertica<span class="hljs-built_in"> user </span>name (dbadmin): <br>Save password <span class="hljs-keyword">to</span> avoid runtime prompt? (n) [y/n]: y<br>Database<span class="hljs-built_in"> user </span>password <span class="hljs-keyword">to</span> save <span class="hljs-keyword">in</span> vbr password<span class="hljs-built_in"> config </span>file (<span class="hljs-literal">no</span> default):<br>Node v_windy1990_node0001<br>Backup host name (<span class="hljs-literal">no</span> default): 192.168.231.110<br>Backup directory (<span class="hljs-literal">no</span> default): /home/dbadmin/backup<br>Change advanced settings? (n) [y/n]: <br>Password file name (<span class="hljs-literal">no</span> default): password<br>Saved vbr password <span class="hljs-keyword">to</span> password.<span class="hljs-built_in"><br>Config </span>file name (backup_object_tb_serv.ini): <br>Saved vbr<span class="hljs-built_in"> config </span><span class="hljs-keyword">to</span> backup_object_tb_serv.ini.<br></code></pre></td></tr></table></figure><h2 id="然后在执行备份命令："><a href="#然后在执行备份命令：" class="headerlink" title="然后在执行备份命令："></a>然后在执行备份命令：</h2><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py --task backup --config-file backup_object_tb_serv.ini <br><span class="hljs-symbol">Starting</span> backup of database <span class="hljs-symbol">Windy1990</span>.<br><span class="hljs-symbol">Objects</span>: [<span class="hljs-string">'tb_serv_num'</span>]<br><span class="hljs-symbol">Participating</span> nodes: v_windy1990_node0001.<br><span class="hljs-symbol">Snapshotting</span> database.<br><span class="hljs-symbol">Snapshot</span> complete.<br><span class="hljs-symbol">Approximate</span> bytes to copy: <span class="hljs-number">0</span> of <span class="hljs-number">244</span> total.<br>[==================================================] <span class="hljs-number">100</span><span class="hljs-comment">%</span><br><span class="hljs-symbol">Copying</span> backup metadata.<br><span class="hljs-symbol">Finalizing</span> backup.<br><span class="hljs-symbol">Backup</span> complete!<br></code></pre></td></tr></table></figure><h2 id="已备份完成-1-5-vertica-Hard-Link-Local备份-官方文档：-A-hard-link-local-backup-is-a-full-or-object-level-backup-consisting-of-a-complete-copy-of-the-database-catalog-and-a-set-of-hard-file-links-to-corresponding-data-files-直接修改全备份的配置文件即可，加上一行："><a href="#已备份完成-1-5-vertica-Hard-Link-Local备份-官方文档：-A-hard-link-local-backup-is-a-full-or-object-level-backup-consisting-of-a-complete-copy-of-the-database-catalog-and-a-set-of-hard-file-links-to-corresponding-data-files-直接修改全备份的配置文件即可，加上一行：" class="headerlink" title="已备份完成~~ 1.5 vertica Hard Link Local备份 官方文档： A hard link local backup is a full or object-level backup consisting of a complete copy of the database catalog, and a set of hard file links to corresponding data files. 直接修改全备份的配置文件即可，加上一行："></a>已备份完成~~ 1.5 vertica Hard Link Local备份 官方文档： A hard link local backup is a full or object-level backup consisting of a complete copy of the database catalog, and a set of hard file links to corresponding data files. 直接修改全备份的配置文件即可，加上一行：</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-section">[Transmission]</span><br><span class="hljs-attr">encrypt</span> = <span class="hljs-literal">False</span><br><span class="hljs-attr">checksum</span> = <span class="hljs-literal">False</span><br><span class="hljs-attr">port_rsync</span> = <span class="hljs-number">50000</span><br><span class="hljs-attr">serviceAccessUser</span> = None<br><span class="hljs-attr">total_bwlimit_backup</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">concurrency_backup</span> = <span class="hljs-number">1</span><br><span class="hljs-attr">total_bwlimit_restore</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">concurrency_restore</span> = <span class="hljs-number">1</span><br><span class="hljs-attr">hardLinkLocal</span> = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><h2 id="然后还是执行备份命令："><a href="#然后还是执行备份命令：" class="headerlink" title="然后还是执行备份命令："></a>然后还是执行备份命令：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/bin/vbr.py <span class="hljs-comment">--task backup --config-file HardLinkLocal_backup20160505.ini</span><br>[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py <span class="hljs-comment">--task backup --config-file HardLinkLocal_backup20160505.ini </span><br>Starting <span class="hljs-keyword">backup</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">database</span> Windy1990.<br>Participating nodes: v_windy1990_node0001.<br>Snapshotting database.<br><span class="hljs-keyword">Snapshot</span> complete.<br>Approximate <span class="hljs-keyword">bytes</span> <span class="hljs-keyword">to</span> copy: <span class="hljs-number">0</span> <span class="hljs-keyword">of</span> <span class="hljs-number">60269355</span> total.<br>[==================================================] <span class="hljs-number">100</span>%<br>Copying <span class="hljs-keyword">backup</span> metadata.<br>Finalizing backup.<br><span class="hljs-keyword">Backup</span> <span class="hljs-keyword">complete</span>!<br></code></pre></td></tr></table></figure><h2 id="1-6-查看备份-查看备份的内容："><a href="#1-6-查看备份-查看备份的内容：" class="headerlink" title="1.6 查看备份 查看备份的内容："></a>1.6 查看备份 查看备份的内容：</h2><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/bin/vbr.py --task listbackup --config-file HardLinkLocal_backup<span class="hljs-number">20160505</span>.ini<br>[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py --task listbackup --config-file HardLinkLocal_backup<span class="hljs-number">20160505</span>.ini <br>backup                                epoch   objects   hosts(nodes)                            file_system_type  <br>full_backup20160505_201605<span class="hljs-number">05_074850</span>   <span class="hljs-number">16</span>                v_windy1990_node<span class="hljs-number">0001(192.168</span>.<span class="hljs-number">231.110</span>)   [Linux]           <br>full_backup20160505_201605<span class="hljs-number">05_064640</span>   <span class="hljs-number">16</span>                v_windy1990_node<span class="hljs-number">0001(192.168</span>.<span class="hljs-number">231.110</span>)   [Linux]<br></code></pre></td></tr></table></figure><h2 id="在vertica数据库中可以查询到备份的信息："><a href="#在vertica数据库中可以查询到备份的信息：" class="headerlink" title="在vertica数据库中可以查询到备份的信息："></a>在vertica数据库中可以查询到备份的信息：</h2><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; select * from database_backups;<br>       backup_timestamp        |      <span class="hljs-type">node_name</span>       |     <span class="hljs-type">snapshot_name</span>     | <span class="hljs-type">backup_epoch</span> | <span class="hljs-type">node_count</span> | <span class="hljs-type">file_system_type</span> |   <span class="hljs-type">objects</span>   <br>-------------------------------+----------------------+-----------------------+--------------+------------+------------------+-------------<br> <span class="hljs-number">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">14</span>:<span class="hljs-number">08</span>:<span class="hljs-number">03.369797</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">full_backup20160505</span>   |           <span class="hljs-type">15</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <br> <span class="hljs-type">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">14</span>:<span class="hljs-number">36</span>:<span class="hljs-number">39.496688</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">full_backup20160505</span>   |           <span class="hljs-type">15</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <br> <span class="hljs-type">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">14</span>:<span class="hljs-number">42</span>:<span class="hljs-number">35.517465</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">full_backup20160505</span>   |           <span class="hljs-type">15</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <br> <span class="hljs-type">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">14</span>:<span class="hljs-number">44</span>:<span class="hljs-number">43.043536</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">full_backup20160505</span>   |           <span class="hljs-type">15</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <br> <span class="hljs-type">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">14</span>:<span class="hljs-number">46</span>:<span class="hljs-number">57.958863</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">full_backup20160505</span>   |           <span class="hljs-type">16</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <br> <span class="hljs-type">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">15</span>:<span class="hljs-number">03</span>:<span class="hljs-number">19.580159</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">backup_object_tb_serv</span> |           <span class="hljs-type">16</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <span class="hljs-type">tb_serv_num</span><br> <span class="hljs-number">2016</span><span class="hljs-number">-05</span><span class="hljs-number">-05</span> <span class="hljs-number">15</span>:<span class="hljs-number">50</span>:<span class="hljs-number">53.143446</span>+<span class="hljs-number">08</span> | <span class="hljs-type">v_windy1990_node0001</span> | <span class="hljs-type">full_backup20160505</span>   |           <span class="hljs-type">16</span> |          <span class="hljs-type">1</span> | <span class="hljs-type">[Linux</span>]          | <br><span class="hljs-type">(7</span> rows)<br></code></pre></td></tr></table></figure><h2 id="2、vertica恢复"><a href="#2、vertica恢复" class="headerlink" title="2、vertica恢复"></a>2、vertica恢复</h2><h2 id="2-1-vertica恢复"><a href="#2-1-vertica恢复" class="headerlink" title="2.1 vertica恢复"></a>2.1 vertica恢复</h2><h2 id="为了看到是恢复是有用的，再次我破坏一下数据，drop一个表，删除一条数据"><a href="#为了看到是恢复是有用的，再次我破坏一下数据，drop一个表，删除一条数据" class="headerlink" title="为了看到是恢复是有用的，再次我破坏一下数据，drop一个表，删除一条数据"></a>为了看到是恢复是有用的，再次我破坏一下数据，drop一个表，删除一条数据</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; select * from tb<span class="hljs-emphasis">_rp_</span>st<span class="hljs-emphasis">_user_</span>day ;<br><span class="hljs-section"> serv_number | user_name <br>-------------+-----------</span><br>(0 rows)<br><br>dbadmin=&gt; drop table tb<span class="hljs-emphasis">_rp_</span>st<span class="hljs-emphasis">_user_</span>day;<br>DROP TABLE<br><br>dbadmin=&gt; select * from tb<span class="hljs-emphasis">_serv_</span>num where name=<span class="hljs-emphasis">'ss'</span>;<br><span class="hljs-section">  serv_num   | name <br>-------------+------</span><br><span class="hljs-code"> 186371***** | ss</span><br>(1 row)<br><br>dbadmin=&gt; delete from tb<span class="hljs-emphasis">_serv_</span>num where name=<span class="hljs-emphasis">'ss'</span>;<br><span class="hljs-section"> OUTPUT <br>--------</span><br><span class="hljs-code">      1</span><br>(1 row)<br><br>dbadmin=&gt; commit;<br>COMMIT<br></code></pre></td></tr></table></figure><h2 id="开始执行恢复命令："><a href="#开始执行恢复命令：" class="headerlink" title="开始执行恢复命令："></a>开始执行恢复命令：</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-regexp">/opt/</span>vertica<span class="hljs-regexp">/bin/</span>vbr.py --<span class="hljs-keyword">task</span> restore --config-<span class="hljs-keyword">file</span> full_backup20160505.ini<br>[dbadmin@localhost ~]$ <span class="hljs-regexp">/opt/</span>vertica<span class="hljs-regexp">/bin/</span>vbr.py --<span class="hljs-keyword">task</span> restore --config-<span class="hljs-keyword">file</span> full_backup20160505.ini Error: Full database restore requires the nodes be DOWN.<br>Restore FAILED.<br></code></pre></td></tr></table></figure><h2 id="报错啦-提示只有在vertica数据库down的状态下才能恢复……"><a href="#报错啦-提示只有在vertica数据库down的状态下才能恢复……" class="headerlink" title="报错啦~ 提示只有在vertica数据库down的状态下才能恢复……"></a>报错啦~ 提示只有在vertica数据库down的状态下才能恢复……</h2><h2 id="查看官方文档："><a href="#查看官方文档：" class="headerlink" title="查看官方文档："></a>查看官方文档：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">To <span class="hljs-keyword">restore</span> a <span class="hljs-keyword">full</span> <span class="hljs-keyword">database</span> <span class="hljs-keyword">backup</span>, you must ensure that:<br>•The <span class="hljs-keyword">database</span> <span class="hljs-keyword">is</span> down. You cannot <span class="hljs-keyword">restore</span> a <span class="hljs-keyword">full</span> <span class="hljs-keyword">backup</span> <span class="hljs-keyword">when</span> the <span class="hljs-keyword">database</span> <span class="hljs-keyword">is</span> running.<br>•All <span class="hljs-keyword">of</span> the <span class="hljs-keyword">backup</span> <span class="hljs-keyword">hosts</span> <span class="hljs-keyword">are</span> up <span class="hljs-keyword">and</span> available.<br>•The <span class="hljs-keyword">backup</span> <span class="hljs-keyword">directory</span> <span class="hljs-keyword">exists</span> <span class="hljs-keyword">and</span> contains the backups <span class="hljs-keyword">from</span> which <span class="hljs-keyword">to</span> restore.<br>•The cluster <span class="hljs-keyword">to</span> which you <span class="hljs-keyword">are</span> restoring the <span class="hljs-keyword">backup</span> has the same <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">hosts</span> <span class="hljs-keyword">as</span> the one used <span class="hljs-keyword">to</span> <span class="hljs-keyword">create</span> the backup. The node <span class="hljs-keyword">names</span> <span class="hljs-keyword">and</span> the IP addresses must also be identical.<br>•The <span class="hljs-keyword">database</span> you <span class="hljs-keyword">are</span> restoring must already exist <span class="hljs-keyword">on</span> the cluster <span class="hljs-keyword">to</span> which you <span class="hljs-keyword">are</span> restoring data. The <span class="hljs-keyword">database</span> can be completely <span class="hljs-keyword">empty</span> <span class="hljs-keyword">without</span> <span class="hljs-keyword">any</span> <span class="hljs-keyword">data</span> <span class="hljs-keyword">or</span> schema. <span class="hljs-keyword">As</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">as</span> the <span class="hljs-keyword">database</span> <span class="hljs-keyword">name</span> matches the <span class="hljs-keyword">name</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">backup</span>, <span class="hljs-keyword">and</span> all <span class="hljs-keyword">of</span> the node <span class="hljs-keyword">names</span> <span class="hljs-keyword">match</span> the <span class="hljs-keyword">names</span> <span class="hljs-keyword">of</span> the nodes <span class="hljs-keyword">in</span> the configuration <span class="hljs-keyword">file</span>, you can <span class="hljs-keyword">restore</span> <span class="hljs-keyword">to</span> it.<br>•The <span class="hljs-keyword">user</span> performing the <span class="hljs-keyword">restore</span> <span class="hljs-keyword">is</span> the <span class="hljs-keyword">database</span> administrator.<br></code></pre></td></tr></table></figure><h2 id="所以此处，我们先尝试第二种恢复方式（对象级恢复）来恢复数据，刚刚我们同时对tb-serv-num表做了对象级备份："><a href="#所以此处，我们先尝试第二种恢复方式（对象级恢复）来恢复数据，刚刚我们同时对tb-serv-num表做了对象级备份：" class="headerlink" title="所以此处，我们先尝试第二种恢复方式（对象级恢复）来恢复数据，刚刚我们同时对tb_serv_num表做了对象级备份："></a>所以此处，我们先尝试第二种恢复方式（对象级恢复）来恢复数据，刚刚我们同时对tb_serv_num表做了对象级备份：</h2><h2 id="执行对象级恢复："><a href="#执行对象级恢复：" class="headerlink" title="执行对象级恢复："></a>执行对象级恢复：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/bin/vbr.py <span class="hljs-comment">--task restore --config-file backup_object_tb_serv.ini</span><br>[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py <span class="hljs-comment">--task restore --config-file backup_object_tb_serv.ini </span><br>Starting object <span class="hljs-keyword">restore</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">database</span> Windy1990.<br>Participating nodes: v_windy1990_node0001.<br>Objects <span class="hljs-keyword">to</span> <span class="hljs-keyword">restore</span>: tb_serv_num.<br>Restoring <span class="hljs-keyword">from</span> <span class="hljs-keyword">restore</span> point: backup_object_tb_serv_20160505_070249<br>Loading <span class="hljs-keyword">snapshot</span> <span class="hljs-keyword">catalog</span> <span class="hljs-keyword">from</span> backup.<br>Syncing <span class="hljs-keyword">data</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">backup</span> <span class="hljs-keyword">to</span> cluster nodes.<br>[==================================================] <span class="hljs-number">100</span>%<br>Finalizing restore.<br><span class="hljs-keyword">Restore</span> <span class="hljs-keyword">complete</span>!<br></code></pre></td></tr></table></figure><h2 id="OK-看到上面我们已经恢复成功了，那就登上vertica数据库验证一下数据是否恢复了。"><a href="#OK-看到上面我们已经恢复成功了，那就登上vertica数据库验证一下数据是否恢复了。" class="headerlink" title="OK~看到上面我们已经恢复成功了，那就登上vertica数据库验证一下数据是否恢复了。"></a>OK~看到上面我们已经恢复成功了，那就登上vertica数据库验证一下数据是否恢复了。</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; select * from tb<span class="hljs-emphasis">_serv_</span>num ;<br><span class="hljs-section">  serv_num   | name  <br>-------------+-------</span><br><span class="hljs-code"> 138***** | windy</span><br><span class="hljs-code"> 186***** | ss</span><br><span class="hljs-code"> 134***** | qin**</span><br>(3 rows)<br></code></pre></td></tr></table></figure><h2 id="可以看到，数据已恢复了-，等等，刚才我们还drop了一个-表，这个表是不是恢复了呢？"><a href="#可以看到，数据已恢复了-，等等，刚才我们还drop了一个-表，这个表是不是恢复了呢？" class="headerlink" title="可以看到，数据已恢复了~，等等，刚才我们还drop了一个 表，这个表是不是恢复了呢？"></a>可以看到，数据已恢复了~，等等，刚才我们还drop了一个 表，这个表是不是恢复了呢？</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-attribute">dbadmin</span>=&gt; \d tb_rp_st_user_day;<br>Did <span class="hljs-keyword">not</span> <span class="hljs-builtin-name">find</span> any relation.<br></code></pre></td></tr></table></figure><h2 id="可以看到，表并没有恢复，为什么呢？-要知道我们此次恢复为对象级恢复，我们对象级备份是只备份了tb-serv-num表的数据而已，随意恢复也只能恢复该表的所有数据。-那么我们用第三种Hard-Link-Local方式恢复数据："><a href="#可以看到，表并没有恢复，为什么呢？-要知道我们此次恢复为对象级恢复，我们对象级备份是只备份了tb-serv-num表的数据而已，随意恢复也只能恢复该表的所有数据。-那么我们用第三种Hard-Link-Local方式恢复数据：" class="headerlink" title="可以看到，表并没有恢复，为什么呢？ 要知道我们此次恢复为对象级恢复，我们对象级备份是只备份了tb_serv_num表的数据而已，随意恢复也只能恢复该表的所有数据。 那么我们用第三种Hard Link Local方式恢复数据："></a>可以看到，表并没有恢复，为什么呢？ 要知道我们此次恢复为对象级恢复，我们对象级备份是只备份了tb_serv_num表的数据而已，随意恢复也只能恢复该表的所有数据。 那么我们用第三种Hard Link Local方式恢复数据：</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/bin/vbr.py --task restore --config-file HardLinkLocal_backup20160505.ini<br>[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py --task restore --config-file HardLinkLocal_backup20160505.ini <br><span class="hljs-keyword">Error: </span>Full database restore requires the nodes be DOWN.<br>Restore FAILED.<br></code></pre></td></tr></table></figure><h2 id="同样看到，也需要vertica数据库为DOWN"><a href="#同样看到，也需要vertica数据库为DOWN" class="headerlink" title="同样看到，也需要vertica数据库为DOWN"></a>同样看到，也需要vertica数据库为DOWN</h2><p>看来要停掉vertica数据库了~（停掉数据库，此处略）<br>停掉vertica数据库后，再试全量恢复：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">[dbadmin@localhost ~]$ /opt/vertica/bin/vbr.py <span class="hljs-comment">--task restore --config-file full_backup20160505.ini </span><br>Starting full <span class="hljs-keyword">restore</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">database</span> Windy1990.<br>Participating nodes: v_windy1990_node0001.<br>Restoring <span class="hljs-keyword">from</span> <span class="hljs-keyword">restore</span> point: full_backup20160505_20160505_074850<br>Computing the <span class="hljs-keyword">size</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">data</span> <span class="hljs-keyword">to</span> be synced <span class="hljs-keyword">from</span> <span class="hljs-keyword">backup</span> <span class="hljs-keyword">to</span> cluster nodes.<br>Syncing <span class="hljs-keyword">data</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">backup</span> <span class="hljs-keyword">to</span> cluster nodes.<br>[==================================================] <span class="hljs-number">100</span>%<br>Restoring catalog.<br><span class="hljs-keyword">Restore</span> <span class="hljs-keyword">complete</span>!<br></code></pre></td></tr></table></figure><p>可以看到，恢复的还不错。<br>再重新启动vertica，登上vertica后查看表tb_rp_st_user_day是否恢复了：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; \d tb_rp_st_user_day;<br>                                            List of <span class="hljs-keyword">Fields</span> <span class="hljs-built_in">by</span> <span class="hljs-keyword">Tables</span><br> Schema |       <span class="hljs-type">Table</span>       |   <span class="hljs-type">Column</span>    |    <span class="hljs-type">Type</span>     | <span class="hljs-type">Size</span> | <span class="hljs-type">Default</span> | <span class="hljs-type">Not</span> Null | <span class="hljs-type">Primary</span> Key | <span class="hljs-type">Foreign</span> Key <br>--------+-------------------+-------------+-------------+------+---------+----------+-------------+-------------<br> public | <span class="hljs-type">tb_rp_st_user_day</span> | <span class="hljs-type">serv_number</span> | <span class="hljs-type">varchar</span>(<span class="hljs-number">13</span>) |   <span class="hljs-type">13</span> |         <span class="hljs-type">| f</span>        | <span class="hljs-type">f</span>           | <br> <span class="hljs-type">public</span> | <span class="hljs-type">tb_rp_st_user_day</span> | <span class="hljs-type">user_name</span>   | <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) |   <span class="hljs-type">50</span> |         <span class="hljs-type">| f</span>        | <span class="hljs-type">f</span>           | <br><span class="hljs-type">(2</span> rows)<br></code></pre></td></tr></table></figure><p>可以看到，恢复成功了。</p><p>以上就是vertica备份以及简单的恢复。</p><h2 id="通过此次vertica恢复可以看到，很多问题可以在官方文档中找到解决方法，在停掉vertica和启动时，遇到了一点问题，不过根据错误提示可以看出解决方法的。"><a href="#通过此次vertica恢复可以看到，很多问题可以在官方文档中找到解决方法，在停掉vertica和启动时，遇到了一点问题，不过根据错误提示可以看出解决方法的。" class="headerlink" title="通过此次vertica恢复可以看到，很多问题可以在官方文档中找到解决方法，在停掉vertica和启动时，遇到了一点问题，不过根据错误提示可以看出解决方法的。"></a>通过此次vertica恢复可以看到，很多问题可以在官方文档中找到解决方法，在停掉vertica和启动时，遇到了一点问题，不过根据错误提示可以看出解决方法的。</h2>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（十一）——-Vertica备份元数据信息</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94-Vertica%E5%A4%87%E4%BB%BD%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94-Vertica%E5%A4%87%E4%BB%BD%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>—备份资源池</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span>    <span class="hljs-string">'CREATE RESOURCE POOL '</span> || <span class="hljs-keyword">name</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> memorysize                <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' MEMORYSIZE '</span>                 || <span class="hljs-string">''''</span> || memorysize               || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> maxmemorysize = <span class="hljs-string">''</span>                <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' MAXMEMORYSIZE '</span>              || <span class="hljs-string">''''</span> || maxmemorysize            || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> executionparallelism     = <span class="hljs-string">'AUTO'</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' EXECUTIONPARALLELISM '</span>       || <span class="hljs-string">''''</span> || executionparallelism     || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> NULLIFZERO(<span class="hljs-keyword">priority</span>)      <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' PRIORITY '</span>                   || <span class="hljs-string">''''</span> || <span class="hljs-keyword">priority</span>                 || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> runtimepriority           <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' RUNTIMEPRIORITY '</span>            ||         runtimepriority                  <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> runtimeprioritythreshold  <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' RUNTIMEPRIORITYTHRESHOLD '</span>   ||         runtimeprioritythreshold         <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> queuetimeout              <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' QUEUETIMEOUT '</span>               ||         queuetimeout                     <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> maxconcurrency            <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' MAXCONCURRENCY '</span>             ||         maxconcurrency                   <span class="hljs-keyword">END</span><br>        || <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> runtimecap                <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">' '</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">' RUNTIMECAP '</span>                 || <span class="hljs-string">''''</span> || runtimecap               || <span class="hljs-string">''''</span> <span class="hljs-keyword">END</span><br>        || <span class="hljs-string">' ; '</span><br><span class="hljs-keyword">FROM</span> v_catalog.resource_pools<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NOT</span> is_internal<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-keyword">name</span>;<br></code></pre></td></tr></table></figure><blockquote><p>—备份角色</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Create Roles'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'CREATE ROLE '</span> || <span class="hljs-keyword">name</span> || <span class="hljs-string">' ;'</span> <span class="hljs-keyword">AS</span> TXT_CR<br><span class="hljs-keyword">FROM</span> v_catalog.roles<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'public'</span>,<span class="hljs-string">'dbadmin'</span>,<span class="hljs-string">'pseudosuperuser'</span>,<span class="hljs-string">'dbduser'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Add users to roles'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'GRANT '</span> || all_roles || <span class="hljs-string">' TO '</span> || user_name || <span class="hljs-string">';'</span><br><span class="hljs-keyword">FROM</span> v_catalog.users<br><span class="hljs-keyword">WHERE</span> user_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'dbadmin'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>–备份schema</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Create Schema'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'CREATE SCHEMA '</span> || schema_name  ||  <span class="hljs-string">';'</span><br><span class="hljs-keyword">FROM</span> schemata<br><span class="hljs-keyword">WHERE</span> schema_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'v_internal'</span>,<span class="hljs-string">'v_catalog'</span>,<span class="hljs-string">'v_monitor'</span>,<span class="hljs-string">'TxtIndex'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>–备份用户</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'-- Create Users'</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">'CREATE USER '</span> || user_name  || <span class="hljs-string">' RESOURCE POOL '</span> || resource_pool ||  <span class="hljs-string">' ;'</span><br><span class="hljs-keyword">FROM</span> v_catalog.users<br><span class="hljs-keyword">WHERE</span> user_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'dbadmin'</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>—各手shcema大小</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-comment">/*+(estimated_raw_size)*/</span><br>       pj.anchor_table_schema,<br>       pj.used_compressed_gb,<br>       pj.used_compressed_gb * la.ratio <span class="hljs-keyword">AS</span> raw_estimate_gb<br><span class="hljs-keyword">FROM</span>   (<span class="hljs-keyword">SELECT</span> ps.anchor_table_schema,<br>               <span class="hljs-keyword">SUM</span>(used_bytes) / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> ) <span class="hljs-keyword">AS</span> used_compressed_gb<br>        <span class="hljs-keyword">FROM</span>   v_catalog.projections p<br>               <span class="hljs-keyword">JOIN</span> v_monitor.projection_storage ps<br>                 <span class="hljs-keyword">ON</span> ps.projection_id = p.projection_id<br>        <span class="hljs-keyword">WHERE</span>  p.is_super_projection = <span class="hljs-string">'t'</span><br>        <span class="hljs-keyword">GROUP</span>  <span class="hljs-keyword">BY</span> ps.anchor_table_schema) pj<br>       <span class="hljs-keyword">CROSS</span> <span class="hljs-keyword">JOIN</span> (<span class="hljs-keyword">SELECT</span> (<span class="hljs-keyword">SELECT</span> database_size_bytes<br>                           <span class="hljs-keyword">FROM</span>   v_catalog.license_audits<br>                           <span class="hljs-keyword">ORDER</span>  <span class="hljs-keyword">BY</span> audit_start_timestamp <span class="hljs-keyword">DESC</span><br>                           <span class="hljs-keyword">LIMIT</span>  <span class="hljs-number">1</span>) / (<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">SUM</span>(used_bytes)<br>                                        <span class="hljs-keyword">FROM</span>   V_MONITOR.projection_storage) <span class="hljs-keyword">AS</span> ratio) la<br><span class="hljs-keyword">ORDER</span>  <span class="hljs-keyword">BY</span> pj.used_compressed_gb <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><blockquote><p>–备份赋权语句<br>–backup grants</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> <span class="hljs-string">'grant '</span>|| privileges_description || <span class="hljs-string">' on '</span>|| object_name || <span class="hljs-string">' to '</span>|| grantee||<span class="hljs-string">';'</span> <br><span class="hljs-keyword">from</span> <span class="hljs-keyword">grants</span> <span class="hljs-keyword">where</span> grantor&lt;&gt;grantee <br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> object_name;<br></code></pre></td></tr></table></figure><p>备份建表语句以及schema语句</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">SELECT EXPORT_CATALOG('','DESIGN_ALL')<span class="hljs-string">"</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vertica的这些事（十）——-Vertica停止数据库的操作步骤</title>
    <link href="/2018/09/12/vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%EF%BC%89%E2%80%94%E2%80%94-Vertica%E5%81%9C%E6%AD%A2%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4/"/>
    <url>/2018/09/12/vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%8D%81%EF%BC%89%E2%80%94%E2%80%94-Vertica%E5%81%9C%E6%AD%A2%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<ul><li>1、查看各个节点的状态，保证没有节点出现down状态</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> nodes;<br></code></pre></td></tr></table></figure><ul><li>2、设置最大会话数</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">=&gt; SELECT CURRENT_VALUE FROM CONFIGURATION_PARAMETERS WHERE parameter_name='MaxClientSessions';<br>  CURRENT_VALUE<br>---------------<br> <span class="hljs-number">50</span><br>(<span class="hljs-number">1</span> <span class="hljs-built_in">row</span>)<br>ALTER DATABASE mydb SET MaxClientSessions = <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><ul><li>3、关闭所有会话</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sessions;<br><span class="hljs-keyword">SELECT</span> CLOSE_ALL_SESSIONS();<br></code></pre></td></tr></table></figure><ul><li>4、打开admintools，停库</li><li>5、操作完成后回复最大会话数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">DATABASE</span> CSAP <span class="hljs-keyword">SET</span> MaxClientSessions = <span class="hljs-number">50</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（九）——-vertica存储统计信息</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B9%9D%EF%BC%89%E2%80%94%E2%80%94-vertica%E5%AD%98%E5%82%A8%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B9%9D%EF%BC%89%E2%80%94%E2%80%94-vertica%E5%AD%98%E5%82%A8%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF/</url>
    
    <content type="html"><![CDATA[<p><strong>vertica存储统计信息：</strong></p><p>表数量： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> <span class="hljs-keyword">count</span>(<span class="hljs-keyword">distinct</span> table_name)  <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">tables</span>;<br></code></pre></td></tr></table></figure><p>分区表数量：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> table_name) <span class="hljs-keyword">from</span> PARTITION_COLUMNS;<br></code></pre></td></tr></table></figure><p>总表占大小：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">sum</span>(used_bytes)/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span> <span class="hljs-keyword">FROM</span> projection_storage ;<br></code></pre></td></tr></table></figure><p>分区表总大小：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(disk_space_bytes)/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span> <span class="hljs-keyword">from</span> PARTITION_COLUMNS;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">sum</span>(used_bytes)/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span> <span class="hljs-keyword">FROM</span> projection_storage <span class="hljs-keyword">where</span> anchor_table_name <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> table_name <span class="hljs-keyword">from</span> PARTITION_COLUMNS);<br></code></pre></td></tr></table></figure><p>分区表大小（前10）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> table_name,<span class="hljs-keyword">sum</span>(disk_space_bytes)/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span> <span class="hljs-keyword">size</span> <span class="hljs-keyword">from</span> PARTITION_COLUMNS <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> table_name <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">size</span> <span class="hljs-keyword">desc</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><p>分区表每个分区的大小（前20）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> partition_key,<span class="hljs-keyword">sum</span>(disk_space_bytes)/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span>/<span class="hljs-number">1024</span> <span class="hljs-keyword">size</span> <span class="hljs-keyword">from</span> PARTITION_COLUMNS <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> partition_key <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">size</span> <span class="hljs-keyword">desc</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（八）——-Vertica-管理</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%85%AB%EF%BC%89%E2%80%94%E2%80%94-Vertica-%E7%AE%A1%E7%90%86/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%85%AB%EF%BC%89%E2%80%94%E2%80%94-Vertica-%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>1、版本信息</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; SELECT version();<br><span class="hljs-section">              version               <br>------------------------------------</span><br><span class="hljs-code"> Vertica Analytic Database v7.2.3-7</span><br>(1 row)<br></code></pre></td></tr></table></figure><p>2、license信息</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; SELECT DISPLAY_LICENSE();<br>              DISPLAY_LICENSE              <br>-------------------------------------------<br> HPE Vertica<br><span class="hljs-number">2</span>/<span class="hljs-number">16</span>/<span class="hljs-number">2016</span><br>Perpetual<br><span class="hljs-number">3</span><br><span class="hljs-number">2</span> TB<br><br>(<span class="hljs-number">1</span> row)<br></code></pre></td></tr></table></figure><p>3、各节点硬盘使用情况</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-comment">/*+label(diag_disk_space_utilization)*/</span> <br>       host_name, <br>       ( disk_space_free_mb / <span class="hljs-number">1024</span> )  <span class="hljs-keyword">AS</span> disk_space_free_gb, <br>       ( disk_space_used_mb / <span class="hljs-number">1024</span> )  <span class="hljs-keyword">AS</span> disk_space_used_gb, <br>       ( disk_space_total_mb / <span class="hljs-number">1024</span> ) <span class="hljs-keyword">AS</span> disk_space_total_gb <br><span class="hljs-keyword">FROM</span>   v_monitor.host_resources;<br></code></pre></td></tr></table></figure><p>4、各节点内存使用情况</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">SELECT <span class="hljs-comment">/*+label(diag_memory_info)*/</span> <br>       host_name, <br>       total_memory_bytes / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> )           AS total_memory_gb, <br>       total_memory_free_bytes / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> )      AS total_memory_free_gb, <br>       total_swap_memory_bytes / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> )      AS total_swap_memory_gb, <br>       total_swap_memory_free_bytes / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> ) AS total_swap_memory_free_gb <br>FROM   v_monitor.host_resources;<br></code></pre></td></tr></table></figure><p>5、每个scheme 数据使用情况</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> <span class="hljs-comment">/*+label(diag_schema_space_utilization)*/</span> <br>       pj.anchor_table_schema, <br>       pj.used_compressed_gb, <br>       pj.used_compressed_gb * la.ratio <span class="hljs-keyword">AS</span> raw_estimate_gb <br><span class="hljs-keyword">FROM</span>   (<span class="hljs-keyword">SELECT</span> ps.anchor_table_schema, <br>               <span class="hljs-keyword">SUM</span>(used_bytes) / ( <span class="hljs-number">1024</span>^<span class="hljs-number">3</span> ) <span class="hljs-keyword">AS</span> used_compressed_gb <br>        <span class="hljs-keyword">FROM</span>   v_catalog.projections p <br>               <span class="hljs-keyword">JOIN</span> v_monitor.projection_storage ps <br>                 <span class="hljs-keyword">ON</span> ps.projection_id = p.projection_id <br>        <span class="hljs-keyword">WHERE</span>  p.is_super_projection = <span class="hljs-string">'t'</span> <br>        <span class="hljs-keyword">GROUP</span>  <span class="hljs-keyword">BY</span> ps.anchor_table_schema) pj <br>       <span class="hljs-keyword">CROSS</span> <span class="hljs-keyword">JOIN</span> (<span class="hljs-keyword">SELECT</span> (<span class="hljs-keyword">SELECT</span> database_size_bytes <br>                           <span class="hljs-keyword">FROM</span>   v_catalog.license_audits <br>                           <span class="hljs-keyword">ORDER</span>  <span class="hljs-keyword">BY</span> audit_start_timestamp <span class="hljs-keyword">DESC</span> <br>                           <span class="hljs-keyword">LIMIT</span>  <span class="hljs-number">1</span>) / (<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">SUM</span>(used_bytes) <br>                                        <span class="hljs-keyword">FROM</span>   v_monitor.projection_storage) <span class="hljs-keyword">AS</span> ratio) la <br><span class="hljs-keyword">ORDER</span>  <span class="hljs-keyword">BY</span> pj.used_compressed_gb <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（七）——-关于vertica的Connection-Failover</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94-%E5%85%B3%E4%BA%8Evertica%E7%9A%84Connection-Failover/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94-%E5%85%B3%E4%BA%8Evertica%E7%9A%84Connection-Failover/</url>
    
    <content type="html"><![CDATA[<p>最近在生产中发现vertica有个别节点老是宕机（又碰到的童鞋交流下），实际业务中有Python通过odbc连接vertica，还有Java通过jdbc连接vertica。假如你连接的那个节点正好是down的节点或者是standby节点，那么就会连接失败，程序就会报错，影响正常业务。其实vertica官方文档已经给出了解决方法，下面我们来看一下如何实现。</p><p><a href="https://my.vertica.com/docs/7.2.x/HTML/index.htm#Authoring/ConnectingToHPVertica/ClientODBC/ODBCConnectionFailover.htm?Highlight=ODBC%20Connection%20Failover" target="_blank" rel="noopener">ODBC Connection Failover</a></p><p>官方给出的代码如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-section">[VMartBadNode]</span><br><span class="hljs-attr">Description</span>=VMart Vertica Database<br><span class="hljs-attr">Driver</span>=/opt/vertica/lib64/libverticaodbc.so<br><span class="hljs-attr">Database</span>=VMart<br><span class="hljs-attr">Servername</span>=badnode.example.com<br><span class="hljs-attr">BackupServerNode</span>=node02.example.com,node03.example.com<br></code></pre></td></tr></table></figure><p>其中上面的BackupServerNode就是备用的IP</p><p><a href="https://my.vertica.com/docs/7.2.x/HTML/index.htm#Authoring/ConnectingToHPVertica/ClientJDBC/JDBCConnectionFailover.htm?Highlight=ODBC%20Connection%20Failover" target="_blank" rel="noopener">JDBC Connection Failover</a></p><p>代码：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">import</span> java.sql.*;<br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-keyword">public</span> class ConnectionFailoverExample &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(<span class="hljs-keyword">String</span>[] args) &#123;<br>        <span class="hljs-comment">// Assume using JDBC 4.0 driver on JVM 6+. No driver loading needed.</span><br>        Properties myProp = <span class="hljs-keyword">new</span> Properties();<br>        myProp.<span class="hljs-built_in">put</span>(<span class="hljs-string">"user"</span>, <span class="hljs-string">"dbadmin"</span>);<br>        myProp.<span class="hljs-built_in">put</span>(<span class="hljs-string">"password"</span>, <span class="hljs-string">"vertica"</span>);<br>        <span class="hljs-comment">// Set two backup hosts to be used if connecting to the first host</span><br>        <span class="hljs-comment">// fails. All of these hosts will be tried in order until the connection</span><br>        <span class="hljs-comment">// succeeds or all of the connections fail.</span><br>        myProp.<span class="hljs-built_in">put</span>(<span class="hljs-string">"BackupServerNode"</span>, <span class="hljs-string">"VerticaHost02,VerticaHost03"</span>);<br>        Connection conn;<br>        <span class="hljs-built_in">try</span> &#123;<br>            <span class="hljs-comment">// The connection string is set to try to connect to a known</span><br>            <span class="hljs-comment">// bnad host (in this case, a host that never existed). </span><br>            conn = DriverManager.getConnection(<br>                    <span class="hljs-string">"jdbc:vertica://BadVerticaHost:5433/vmart"</span>, myProp);<br>            System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"Connected!"</span>);<br>            <span class="hljs-comment">// Query system to table to see what node we are connected to. </span><br>            <span class="hljs-comment">// Assume a single row in response set.            </span><br>            Statement stmt = conn.createStatement();<br>            ResultSet rs = stmt.executeQuery(<br>                    <span class="hljs-string">"SELECT node_name FROM v_monitor.current_session;"</span>);      <br>            rs.next();<br>            System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"Connected to node "</span> + rs.getString(<span class="hljs-number">1</span>).trim());<br>            <span class="hljs-comment">// Done with connection.</span><br>            conn.<span class="hljs-built_in">close</span>();<br>        &#125; <span class="hljs-built_in">catch</span> (SQLException e) &#123;<br>            <span class="hljs-comment">// Catch-all for other exceptions</span><br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>另外也可以通过jdbc连接串来实现：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-symbol">jdbc:</span>vertica://<span class="hljs-number">192.168</span><span class="hljs-meta">.000</span><span class="hljs-meta">.00</span>:<span class="hljs-number">5433</span>/DBname?ConnectionLoadBalance=<span class="hljs-number">1</span>&amp;BackupServerNode=<span class="hljs-number">192.168</span><span class="hljs-meta">.000</span><span class="hljs-meta">.01</span>:<span class="hljs-number">5433</span>,<span class="hljs-number">192.168</span><span class="hljs-meta">.000</span><span class="hljs-meta">.02</span>:<span class="hljs-number">5433</span><br></code></pre></td></tr></table></figure><p>其中ConnectionLoadBalance是vertica的负载均衡，如果在库中没有开启该功能的话，此时是没有作用的，不影响。<br>开启ConnectionLoadBalance的话，需要管理员账户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> SET_LOAD_BALANCE_POLICY(<span class="hljs-string">'ROUNDROBIN'</span>);<br></code></pre></td></tr></table></figure><p>取消该功能：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> SET_LOAD_BALANCE_POLICY(<span class="hljs-string">'NONE'</span>);<br></code></pre></td></tr></table></figure><p>查询是否开启：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> GET_LOAD_BALANCE_POLICY();<br></code></pre></td></tr></table></figure><p>通过这次设置，加了几个备用连接节点，确保业务正常。</p>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（六）——-vertica中group-by-和join-语句的优化</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94-vertica%E4%B8%ADgroup-by-%E5%92%8Cjoin-%E8%AF%AD%E5%8F%A5%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94-vertica%E4%B8%ADgroup-by-%E5%92%8Cjoin-%E8%AF%AD%E5%8F%A5%E7%9A%84%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<blockquote><p>vertica group by优化语句，先对语句进行explain 操作查看预执行计划，其中group by 分为 GROUPBY PIPELINED 和 GROUPBY HASH，通过执行计划可以清楚的看到vertica到底采用的那种执行方式，优化一般就是吧GROUPBY HASH优化为GROUPBY PIPELINED<br>下面讲一下官网举得例子</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sortopt (<br>    a <span class="hljs-built_in">INT</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>, <br>    b <span class="hljs-built_in">INT</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>,<br>    c <span class="hljs-built_in">INT</span>,<br>    d <span class="hljs-built_in">INT</span><br>);<br><span class="hljs-keyword">CREATE</span> PROJECTION sortopt_p (<br>   a_proj,<br>   b_proj,<br>   c_proj,<br>   d_proj )<br><span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> sortopt<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> a,b,c <br>UNSEGMENTED ALL NODES;<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> sortopt <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">13</span>,<span class="hljs-number">84</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> sortopt <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">14</span>,<span class="hljs-number">22</span>,<span class="hljs-number">8</span>,<span class="hljs-number">115</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> sortopt <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">79</span>,<span class="hljs-number">9</span>,<span class="hljs-number">401</span>,<span class="hljs-number">33</span>);<br></code></pre></td></tr></table></figure><ul><li><strong>第一种情况</strong></li><li>GROUP BY a<br>GROUP BY a,b<br>GROUP BY b,a<br>GROUP BY a,b,c<br>GROUP BY c,a,b<br>如果是按照上面的这种group by 则使用的是GROUPBY PIPELINED，因为group by 后的字段全部在projection中预排序</li><li>GROUP BY a,b,c,d</li><li><p>这种情况则是采用的GROUPBY HASH 不建议~</p></li><li><p><strong>第二种情况</strong><br>GROUP BY a,c<br>执行 按照GROUPBY HASH  因为a,c字段没有相邻，如果是<br>GROUP BY a,c或者GROUP BY b,c则会按照GROUPBY PIPELINED 执行</p></li><li><p><strong>第三种情况</strong></p></li><li>group by 之前有 where条件时</li></ul><blockquote><p> SELECT a FROM tab WHERE a = 10 GROUP BY b  此时按照 GROUPBY PIPELINED</p><p>SELECT a FROM tab WHERE a = 10 GROUP BY c 此时按照 GROUPBY HASH 以为按照c排序的<br>处理的所有的 Projectionn 列的列未出现在  where  子句等值条件中，如果上如改为SELECT a FROM tab<br>WHERE a = 10 and b=10 GROUP BY c 则会按照GROUPBY PIPELINED 执行</p></blockquote><p>通过以上3中情况的介绍，希望大家对vertica的group by有一定的理解。</p><p>**&gt; 关于join vertica会有两种执行方式 Merge Join 和Hash join ，建议关联是要走Merge join</p><blockquote><p>执行Merge  join的必要条件就是 关联的字段要在两个表中预排序，也就是要是两个表的order by 字段**</p></blockquote><p>可以参考官网<a href="https://my.vertica.com/docs/7.2.x/HTML/index.htm#Authoring/AnalyzingData/SQLAnalytics/AvoidingGROUPBYHASHWithProjectionDesign.htm?TocPath=Analyzing%2520Data%7COptimizing%2520Query%2520Performance%7CGROUP%2520BY%2520Queries%7C_____1" target="_blank" rel="noopener">Avoiding GROUP BY HASH with Projection Design</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（五）——-谈谈vertica的flex-table</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94-%E8%B0%88%E8%B0%88vertica%E7%9A%84flex-table/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94-%E8%B0%88%E8%B0%88vertica%E7%9A%84flex-table/</url>
    
    <content type="html"><![CDATA[<h1 id="Json格式对于现在所有的软件开发者都不陌生，很多数据格式都用他来存储，我们来看一下vertica是怎么处理json数据的。这就是vertica的flex-table！"><a href="#Json格式对于现在所有的软件开发者都不陌生，很多数据格式都用他来存储，我们来看一下vertica是怎么处理json数据的。这就是vertica的flex-table！" class="headerlink" title="Json格式对于现在所有的软件开发者都不陌生，很多数据格式都用他来存储，我们来看一下vertica是怎么处理json数据的。这就是vertica的flex table！"></a>Json格式对于现在所有的软件开发者都不陌生，很多数据格式都用他来存储，我们来看一下vertica是怎么处理json数据的。这就是vertica的flex table！</h1><h2 id="首先创建一个json文件："><a href="#首先创建一个json文件：" class="headerlink" title="首先创建一个json文件："></a>首先创建一个json文件：</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">&#123;<span class="hljs-attr">"name"</span>: <span class="hljs-string">"Everest"</span>, <span class="hljs-attr">"type"</span>:<span class="hljs-string">"mountain"</span>, <span class="hljs-attr">"height"</span>:<span class="hljs-number">29029</span>, <span class="hljs-attr">"hike_safety"</span>: <span class="hljs-number">34.1</span>&#125;<br>&#123;<span class="hljs-attr">"name"</span>: <span class="hljs-string">"Mt St Helens"</span>, <span class="hljs-attr">"type"</span>:<span class="hljs-string">"volcano"</span>, <span class="hljs-attr">"height"</span>:<span class="hljs-number">29029</span>, <span class="hljs-attr">"hike_safety"</span>: <span class="hljs-number">15.4</span>&#125;<br>&#123;<span class="hljs-attr">"name"</span>: <span class="hljs-string">"Denali"</span>, <span class="hljs-attr">"type"</span>:<span class="hljs-string">"mountain"</span>, <span class="hljs-attr">"height"</span>:<span class="hljs-number">17000</span>, <span class="hljs-attr">"hike_safety"</span>: <span class="hljs-number">12.2</span>&#125;<br>&#123;<span class="hljs-attr">"name"</span>: <span class="hljs-string">"Kilimanjaro"</span>, <span class="hljs-attr">"type"</span>:<span class="hljs-string">"mountain"</span>, <span class="hljs-attr">"height"</span>:<span class="hljs-number">14000</span> &#125;<br>&#123;<span class="hljs-attr">"name"</span>: <span class="hljs-string">"Mt Washington"</span>, <span class="hljs-attr">"type"</span>:<span class="hljs-string">"mountain"</span>, <span class="hljs-attr">"hike_safety"</span>: <span class="hljs-number">50.6</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="然后我们创建一个flex-table："><a href="#然后我们创建一个flex-table：" class="headerlink" title="然后我们创建一个flex table："></a>然后我们创建一个flex table：</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; CREATE FLEX <span class="hljs-keyword">TABLE</span> start_json();<br>CREATE <span class="hljs-keyword">TABLE</span><br></code></pre></td></tr></table></figure><h2 id="然后把数据copy进去："><a href="#然后把数据copy进去：" class="headerlink" title="然后把数据copy进去："></a>然后把数据copy进去：</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; <span class="hljs-keyword">COPY</span><span class="bash"> start_json FROM <span class="hljs-string">'/home/dbadmin/qcfData/*json*'</span> PARSER fjsonparser();<br></span> Rows Loaded <br>-------------<br>           <span class="hljs-number">5</span><br>(<span class="hljs-number">1</span> row)<br></code></pre></td></tr></table></figure><h2 id="查询结果："><a href="#查询结果：" class="headerlink" title="查询结果："></a>查询结果：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-attribute">dbadmin</span>=&gt; select * <span class="hljs-keyword">from</span> start_json();<br><span class="hljs-builtin-name">ERROR</span> 4256:  Only relations <span class="hljs-keyword">and</span> subqueries are allowed <span class="hljs-keyword">in</span> the <span class="hljs-keyword">FROM</span> clause<br><span class="hljs-attribute">dbadmin</span>=&gt;  SELECT maptostring(__raw__) <span class="hljs-keyword">FROM</span> start_json;<br>                                               maptostring                                                <br>----------------------------------------------------------------------------------------------------------<br> &#123;<br>   <span class="hljs-string">"height"</span> : <span class="hljs-string">"29029"</span>,<br>   <span class="hljs-string">"hike_safety"</span> : <span class="hljs-string">"34.1"</span>,<br>   <span class="hljs-string">"name"</span> : <span class="hljs-string">"Everest"</span>,<br>   <span class="hljs-string">"type"</span> : <span class="hljs-string">"mountain"</span><br>&#125;<br><br> &#123;<br>   <span class="hljs-string">"height"</span> : <span class="hljs-string">"29029"</span>,<br>   <span class="hljs-string">"hike_safety"</span> : <span class="hljs-string">"15.4"</span>,<br>   <span class="hljs-string">"name"</span> : <span class="hljs-string">"Mt St Helens"</span>,<br>   <span class="hljs-string">"type"</span> : <span class="hljs-string">"volcano"</span><br>&#125;<br><br> &#123;<br>   <span class="hljs-string">"height"</span> : <span class="hljs-string">"17000"</span>,<br>   <span class="hljs-string">"hike_safety"</span> : <span class="hljs-string">"12.2"</span>,<br>   <span class="hljs-string">"name"</span> : <span class="hljs-string">"Denali"</span>,<br>   <span class="hljs-string">"type"</span> : <span class="hljs-string">"mountain"</span><br>&#125;<br><br> &#123;<br>   <span class="hljs-string">"height"</span> : <span class="hljs-string">"14000"</span>,<br>   <span class="hljs-string">"name"</span> : <span class="hljs-string">"Kilimanjaro"</span>,<br>   <span class="hljs-string">"type"</span> : <span class="hljs-string">"mountain"</span><br>&#125;<br><br> &#123;<br>   <span class="hljs-string">"hike_safety"</span> : <span class="hljs-string">"50.6"</span>,<br>   <span class="hljs-string">"name"</span> : <span class="hljs-string">"Mt Washington"</span>,<br>   <span class="hljs-string">"type"</span> : <span class="hljs-string">"mountain"</span><br>&#125;<br><br>(5 rows)<br></code></pre></td></tr></table></figure><h2 id="发现很好的解析了json文件，并且格式化了文件。"><a href="#发现很好的解析了json文件，并且格式化了文件。" class="headerlink" title="发现很好的解析了json文件，并且格式化了文件。"></a>发现很好的解析了json文件，并且格式化了文件。</h2><h2 id="查询json数据："><a href="#查询json数据：" class="headerlink" title="查询json数据："></a>查询json数据：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-attribute">dbadmin</span>=&gt;  SELECT start_json.type,start_json.name <span class="hljs-keyword">FROM</span> start_json;<br>  <span class="hljs-built_in"> type </span>  |     name      <br>----------+---------------<br> mountain | Everest<br> volcano  | Mt St Helens<br> mountain | Denali<br> mountain | Kilimanjaro<br> mountain | Mt Washington<br>(5 rows)<br></code></pre></td></tr></table></figure><p>此时如果使用 * 查询 会出现乱码：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> start_json;<br></code></pre></td></tr></table></figure><p>需要使用函数 compute_flextable_keys</p><p>select compute_flextable_keys(‘start_json’);</p><p>然后查询就可以有结果</p><h2 id="综上，flex-table-对json格式的数据提供了很好的存储于展示。"><a href="#综上，flex-table-对json格式的数据提供了很好的存储于展示。" class="headerlink" title="综上，flex table 对json格式的数据提供了很好的存储于展示。"></a>综上，flex table 对json格式的数据提供了很好的存储于展示。</h2>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（四）——-vertica加密数据</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94-vertica%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94-vertica%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<p>通过创建 Secure Access Policies可以对vertica中的某一列数据进行加密：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">CREATE ACCESS<span class="hljs-built_in"> POLICY </span>ON [schema][tablename]<br><span class="hljs-keyword">FOR</span> COLUMN columnname<br>expression<br>[ENABLE/<span class="hljs-builtin-name">DISABLE</span>];<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ACCESS</span> <span class="hljs-keyword">POLICY</span> <span class="hljs-keyword">ON</span> customers_table<br><span class="hljs-keyword">FOR</span> <span class="hljs-keyword">COLUMN</span> SSN<br><span class="hljs-keyword">CASE</span><br><span class="hljs-keyword">WHEN</span> ENABLED_ROLE(<span class="hljs-string">'manager'</span>) <span class="hljs-keyword">THEN</span> SSN<br><span class="hljs-keyword">WHEN</span> ENABLED_ROLE(<span class="hljs-string">'operator'</span>) <span class="hljs-keyword">THEN</span> <span class="hljs-keyword">SUBSTR</span>(SSN, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>)<br><span class="hljs-keyword">ELSE</span> <span class="hljs-literal">NULL</span><br><span class="hljs-keyword">END</span><br><span class="hljs-keyword">ENABLE</span>;<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs undefined">ALTER ACCESS<span class="hljs-built_in"> POLICY<br></span>ALTER ACCESS<span class="hljs-built_in"> POLICY </span>ON tablename<br><br><span class="hljs-built_in">..</span> .<span class="hljs-keyword">FOR</span> COLUMN columnname<br><span class="hljs-built_in">..</span>. expression<br><span class="hljs-built_in">..</span>. [<span class="hljs-builtin-name">ENABLE</span> | <span class="hljs-builtin-name">DISABLE</span>];<br><span class="hljs-built_in">..</span>. | <span class="hljs-keyword">FOR</span> COLUMN columname<br><span class="hljs-built_in">..</span>.   COPY <span class="hljs-keyword">TO</span> tablename;<br><br>DROP ACCESS<span class="hljs-built_in"> POLICY<br></span>DROP ACCESS<span class="hljs-built_in"> POLICY </span>ON tablename<br><span class="hljs-keyword">FOR</span> COLUMN columnname;<br></code></pre></td></tr></table></figure><p>如果表中存在策略的话，那么drop table 时会报错：<br> <img src="http://upload-images.jianshu.io/upload_images/4579636-e86ec5139ce973ad?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="/img/loading.gif" alt="这里写图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（三）——Vertica中实现Oracle中的ws_concat功能</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Vertica%E4%B8%AD%E5%AE%9E%E7%8E%B0Oracle%E4%B8%AD%E7%9A%84ws-concat%E5%8A%9F%E8%83%BD/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Vertica%E4%B8%AD%E5%AE%9E%E7%8E%B0Oracle%E4%B8%AD%E7%9A%84ws-concat%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<p><strong>vertica中没有类似Oracle中的ws_concat函数功能，需要开发UDF，自己对C++不熟悉，所有只有想其他方法解决了。</strong><br>上代码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">SELECT</span> node_state,<br>    <span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">1</span>, a.node_name)) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">2</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">3</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">4</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">5</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">6</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">7</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">8</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">9</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">10</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">11</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">12</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">13</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">14</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">15</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">16</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">17</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">18</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">19</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">20</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">21</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">22</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">23</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">24</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">25</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">26</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">27</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">28</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">29</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) ||<br>    NVL(<span class="hljs-keyword">MAX</span>(<span class="hljs-keyword">DECODE</span>(row_number, <span class="hljs-number">30</span>, <span class="hljs-string">','</span> || a.node_name)), <span class="hljs-string">''</span>) node_name<br><span class="hljs-keyword">FROM</span> (<span class="hljs-keyword">select</span> node_state,node_name,row_number() <span class="hljs-keyword">over</span> (<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> node_state <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> node_name) row_number <span class="hljs-keyword">from</span> nodes) a<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> node_state;<br></code></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta"><br>&gt;</span><span class="bash">  UP         |</span><br><span class="hljs-meta">&gt;</span><span class="bash"> v_csap_node0001,v_csap_node0002,v_csap_node0003,v_csap_node0004,v_csap_node0005,v_csap_node0006,v_csap_node0007,v_csap_node0008,v_csap_node0009,v_csap_node0010,v_csap_node0011,v_csap_node0012,v_csap_node0013,v_csap_node0014,v_csap_node0015,v_csap_node0016,v_csap_node0018,v_csap_node0019,v_csap_node0020,v_csap_node0021,v_csap_node0022,v_csap_node0023,v_csap_node0024,v_csap_node0025,v_csap_node0026,v_csap_node0027,v_csap_node0028,v_csap_node0029,v_csap_node0030</span><br><span class="hljs-meta">&gt;</span><span class="bash"> STANDBY    | v_csap_node0017 (2 rows)</span><br></code></pre></td></tr></table></figure><p>可以看到是我想要的结果。<br>有人会问了，我不知道自己要ws_concat几个类别怎么办，先运行一下</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">select</span> node_state,node_name,row_number() <span class="hljs-keyword">over</span> (<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> node_state <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> node_name) row_number <span class="hljs-keyword">from</span> nodes<br></code></pre></td></tr></table></figure><p>看下row_number不就行了，或者把decode中的数字多写几个。当然最好的方法还是开发自定义程序包，引入到vertica中，直接使用函数实现，C++好的童鞋可以试一下。</p>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（二）——SQL-Server、Oracle、MySQL和Vertica数据库常用函数对比</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94SQL-Server%E3%80%81Oracle%E3%80%81MySQL%E5%92%8CVertica%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E5%AF%B9%E6%AF%94/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94SQL-Server%E3%80%81Oracle%E3%80%81MySQL%E5%92%8CVertica%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<p>SQL Server、Oracle、MySQL和Vertica数据库常用函数对比<br>Vertica数据库是HP公司新收购的用于BI方面的数据库。</p><ol><li>绝对值</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">abs</span>(<span class="hljs-number">-1</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">abs</span>(<span class="hljs-number">-1</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">abs</span>(<span class="hljs-number">-1</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">abs</span>(<span class="hljs-number">-1</span>)<br></code></pre></td></tr></table></figure><ol start="2"><li>向上取整</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ceiling</span>(<span class="hljs-number">-1.001</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ceil</span>(<span class="hljs-number">-1.001</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ceil</span>(<span class="hljs-number">-1.001</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ceil</span>(<span class="hljs-number">-1.001</span>)<br></code></pre></td></tr></table></figure><ol start="3"><li>向下取整</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">floor</span>(<span class="hljs-number">-1.001</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">floor</span>(<span class="hljs-number">-1.001</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">floor</span>(<span class="hljs-number">-1.001</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">floor</span>(<span class="hljs-number">-1.001</span>)<br></code></pre></td></tr></table></figure><ol start="4"><li>取整（截取）</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">cast</span>(<span class="hljs-number">-1.002</span> <span class="hljs-keyword">as</span> int) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">trunc</span>(<span class="hljs-number">-1.002</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">trunc</span>(<span class="hljs-number">-1.002</span>)<br></code></pre></td></tr></table></figure><ol start="5"><li>四舍五入</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">1.23456</span>,<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">1.23460</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">1.23456</span>,<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">1.2346</span><br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">1.23456</span>,<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">1.2346</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">1.23456</span>,<span class="hljs-number">4.0</span>)<br></code></pre></td></tr></table></figure><ol start="6"><li>e为底的幂</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">Exp</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">2.71828182845905</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">Exp</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">2.71828182</span><br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">Exp</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">2.718281828459045</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">Exp</span>(<span class="hljs-number">1.0</span>) <span class="hljs-number">2.71828182845905</span><br></code></pre></td></tr></table></figure><ol start="7"><li>取e为底的对数</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">log</span>(<span class="hljs-number">2.7182818284590451</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">1</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">ln</span>(<span class="hljs-number">2.7182818284590451</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual; 1<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">ln</span>(<span class="hljs-number">2.7182818284590451</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual; 1<br><br>V: <span class="hljs-keyword">select</span> <span class="hljs-built_in">ln</span>(<span class="hljs-number">2.7182818284590451</span>) <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><ol start="8"><li>取10为底对数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">log10</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">1</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">log</span>(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual; 1<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">log</span>(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual; 1<br><br>M: <span class="hljs-keyword">select</span> <span class="hljs-keyword">log</span>(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><ol start="9"><li>取平方</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">SQUARE</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">16</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">power</span>(<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">16</span><br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">power</span>(<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">16</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">power</span>(<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-number">16</span><br></code></pre></td></tr></table></figure><ol start="10"><li>取平方根</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">SQRT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">2</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">SQRT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">2</span><br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">SQRT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">2</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">SQRT</span>(<span class="hljs-number">4</span>) <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><ol start="11"><li>求任意数为底的幂</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">power</span>(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">81</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">power</span>(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">81</span><br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">power</span>(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">81</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">power</span>(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>) <span class="hljs-number">81</span><br></code></pre></td></tr></table></figure><ol start="12"><li>取随机数</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> rand() <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> sys.dbms_random.<span class="hljs-keyword">value</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual;<br><br>M:<span class="hljs-keyword">select</span> rand() <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual;<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">random</span>()<br></code></pre></td></tr></table></figure><ol start="13"><li>取符号</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">sign</span>(<span class="hljs-number">-8</span>) <span class="hljs-keyword">value</span> <span class="hljs-number">-1</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-built_in">sign</span>(<span class="hljs-number">-8</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">-1</span><br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">sign</span>(<span class="hljs-number">-8</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual <span class="hljs-number">-1</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-built_in">sign</span>(<span class="hljs-number">-8</span>) <span class="hljs-number">-1</span><br></code></pre></td></tr></table></figure><ol start="14"><li>圆周率</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">PI</span>() <span class="hljs-keyword">value</span> <span class="hljs-number">3.14159265358979</span><br><br>O: <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">ACOS</span>(<span class="hljs-number">-1</span>) <span class="hljs-keyword">FROM</span> DUAL;<br><br>M: <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">ACOS</span>(<span class="hljs-number">-1</span>) <span class="hljs-keyword">FROM</span> DUAL; 3.141592653589793<br><br>V: <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">PI</span>() <span class="hljs-number">3.14159265358979</span><br></code></pre></td></tr></table></figure><p>数值间比较</p><ol start="15"><li>求集合最大值</li></ol><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-symbol">S:</span><span class="hljs-keyword">select</span> max(value) value from<br><br>(<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> value<br><br><span class="hljs-class"><span class="hljs-keyword">union</span></span><br><br><span class="hljs-keyword">select</span> -<span class="hljs-number">2</span> value<br><br><span class="hljs-class"><span class="hljs-keyword">union</span></span><br><br><span class="hljs-keyword">select</span> <span class="hljs-number">4</span> value<br><br><span class="hljs-class"><span class="hljs-keyword">union</span></span><br><br><span class="hljs-keyword">select</span> <span class="hljs-number">3</span> value)a<br><br><span class="hljs-symbol">O:</span><span class="hljs-keyword">select</span> greatest(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) value from dual<br><br><span class="hljs-symbol">M:</span><span class="hljs-keyword">select</span> greatest(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) value from dual<br><br><span class="hljs-symbol">V:</span><span class="hljs-keyword">select</span> greatest(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><ol start="16"><li>求集合最小值</li></ol><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-symbol">S:</span><span class="hljs-keyword">select</span> min(value) value from<br><br>(<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> value<br><br>Union<br><br><span class="hljs-keyword">select</span> -<span class="hljs-number">2</span> value<br><br><span class="hljs-class"><span class="hljs-keyword">union</span></span><br><br><span class="hljs-keyword">select</span> <span class="hljs-number">4</span> value<br><br><span class="hljs-class"><span class="hljs-keyword">union</span></span><br><br><span class="hljs-keyword">select</span> <span class="hljs-number">3</span> value)a<br><br><span class="hljs-symbol">O:</span><span class="hljs-keyword">select</span> least(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) value from dual<br><br><span class="hljs-symbol">M:</span><span class="hljs-keyword">select</span> least(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) value from dual<br><br><span class="hljs-symbol">V:</span><span class="hljs-keyword">select</span> least(<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><ol start="17"><li>如何处理null值(F2中的null以10代替)</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> tbl (f1 <span class="hljs-built_in">varchar</span>(<span class="hljs-number">10</span>),f2 <span class="hljs-built_in">int</span>);<br><br><span class="hljs-keyword">Insert</span> <span class="hljs-keyword">into</span> tbl(f1,f2) <span class="hljs-keyword">values</span>(‘aa’,<span class="hljs-literal">null</span>);<br><br><span class="hljs-keyword">Insert</span> <span class="hljs-keyword">into</span> tbl(f1,f2) <span class="hljs-keyword">values</span>(‘bb’,<span class="hljs-number">7</span>);<br><br>S:<span class="hljs-keyword">select</span> F1,<span class="hljs-keyword">IsNull</span>(F2,<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> Tbl<br><br>O:<span class="hljs-keyword">select</span> F1,nvl(F2,<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> Tbl<br><br>M:<span class="hljs-keyword">select</span> F1,<span class="hljs-keyword">ifnull</span>(F2,<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> Tbl<br><br>V:<span class="hljs-keyword">select</span> F1,<span class="hljs-keyword">IsNull</span>(F2,<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> Tbl<br></code></pre></td></tr></table></figure><ol start="18"><li>求字符ascii码</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ascii</span>(<span class="hljs-string">'a'</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ascii</span>(<span class="hljs-string">'a'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ascii</span>(<span class="hljs-string">'a'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">ascii</span>(<span class="hljs-string">'a'</span>)<br></code></pre></td></tr></table></figure><ol start="19"><li>从ascii码求字符</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-built_in">char</span>(<span class="hljs-number">97</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">chr</span>(<span class="hljs-number">97</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-built_in">char</span>(<span class="hljs-number">97</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">chr</span>(<span class="hljs-number">97</span>)<br></code></pre></td></tr></table></figure><ol start="20"><li>连接字符串</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-string">'11'</span>+<span class="hljs-string">'22'</span>+<span class="hljs-string">'33'</span> <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">CONCAT</span>(<span class="hljs-string">'11'</span>,<span class="hljs-string">'22'</span>)　　<span class="hljs-number">33</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">concat</span>(<span class="hljs-string">'11'</span>,<span class="hljs-string">'22'</span>,<span class="hljs-string">'33'</span>) <span class="hljs-keyword">value</span><br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-string">'11'</span>||<span class="hljs-string">'22'</span>||<span class="hljs-string">'33'</span><br></code></pre></td></tr></table></figure><ol start="21"><li>子串位置 –返回3</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">CHARINDEX</span>(<span class="hljs-string">'s'</span>,<span class="hljs-string">'sdsq'</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">INSTR</span>(<span class="hljs-string">'sdsq'</span>,<span class="hljs-string">'s'</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">LOCATE</span>(<span class="hljs-string">'s'</span>,<span class="hljs-string">'sdsq'</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">INSTR</span>(<span class="hljs-string">'sdsq'</span>,<span class="hljs-string">'s'</span>,<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><ol start="22"><li>求子串</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">substring</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">substr</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">substr</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">substr</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><ol start="23"><li>子串代替 返回aijklmnef</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">STUFF</span>(<span class="hljs-string">'abcdef'</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-string">'ijklmn'</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">Replace</span>(<span class="hljs-string">'abcdef'</span>, <span class="hljs-string">'bcd'</span>, <span class="hljs-string">'ijklmn'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">Replace</span>(<span class="hljs-string">'abcdef'</span>, <span class="hljs-string">'bcd'</span>, <span class="hljs-string">'ijklmn'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">Replace</span>(<span class="hljs-string">'abcdef'</span>, <span class="hljs-string">'bcd'</span>, <span class="hljs-string">'ijklmn'</span>)<br></code></pre></td></tr></table></figure><ol start="24"><li>字符串长度</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:len,datalength<br><br>O: <span class="hljs-keyword">select</span> <span class="hljs-keyword">length</span>(<span class="hljs-string">'aaa'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M: <span class="hljs-keyword">select</span> <span class="hljs-keyword">length</span>(<span class="hljs-string">'aaa'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V: <span class="hljs-keyword">select</span> <span class="hljs-keyword">length</span>(<span class="hljs-string">'aaa '</span>::<span class="hljs-built_in">CHAR</span>(<span class="hljs-number">10</span>))<br><br><span class="hljs-keyword">Select</span> <span class="hljs-keyword">length</span>(<span class="hljs-string">'aaa '</span>::<span class="hljs-built_in">varchar</span>(<span class="hljs-number">10</span>))<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">length</span>(<span class="hljs-string">'aaa'</span>)<br></code></pre></td></tr></table></figure><ol start="25"><li>大小写转换 lower,upper</li><li>左补空格（LPAD的第一个参数为空格则同space函数）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">space</span>(<span class="hljs-number">10</span>)+<span class="hljs-string">'abcd'</span> <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">LPAD</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">14</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">LPAD</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">14</span>, <span class="hljs-string">' '</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">LPAD</span>(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">14</span>, <span class="hljs-string">' '</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br></code></pre></td></tr></table></figure><ol start="27"><li>右补空格（RPAD的第一个参数为空格则同space函数）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-string">'abcd'</span>+<span class="hljs-keyword">space</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> RPAD(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">14</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> RPAD(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">14</span>, <span class="hljs-string">' '</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> RPAD(<span class="hljs-string">'abcd'</span>,<span class="hljs-number">14</span>, <span class="hljs-string">' '</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br></code></pre></td></tr></table></figure><ol start="28"><li>删除空格</li></ol><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-built_in">ltrim</span>,<span class="hljs-built_in">rtrim</span><br><br>O:<span class="hljs-built_in">ltrim</span>,<span class="hljs-built_in">rtrim</span>,<span class="hljs-built_in">trim</span><br><br>M:<span class="hljs-built_in">ltrim</span>,<span class="hljs-built_in">rtrim</span>,<span class="hljs-built_in">trim</span><br><br>V:<span class="hljs-built_in">ltrim</span>,<span class="hljs-built_in">rtrim</span>,<span class="hljs-built_in">trim</span><br></code></pre></td></tr></table></figure><p>日期函数</p><ol start="29"><li>系统时间</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">getdate</span>() <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> <span class="hljs-keyword">sysdate</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">now</span>() <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> <span class="hljs-keyword">sysdate</span>()<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">getdate</span>()<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">now</span>() 会显示时区<br></code></pre></td></tr></table></figure><ol start="30"><li>前后几日</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:直接与整数相加减<br><br>O:直接与整数相加减<br><br>M: <span class="hljs-keyword">select</span> <span class="hljs-keyword">now</span>()+<span class="hljs-built_in">interval</span> <span class="hljs-number">1</span> <span class="hljs-keyword">day</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:直接与整数相加减<br></code></pre></td></tr></table></figure><ol start="31"><li>求日期</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">convert</span>(<span class="hljs-built_in">char</span>(<span class="hljs-number">10</span>),<span class="hljs-keyword">getdate</span>(),<span class="hljs-number">20</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> trunc(<span class="hljs-keyword">sysdate</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br><span class="hljs-keyword">select</span> to_char(<span class="hljs-keyword">sysdate</span>,<span class="hljs-string">'yyyy-mm-dd'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">DATE_FORMAT</span>(<span class="hljs-keyword">NOW</span>(),<span class="hljs-string">'%Y-%m-%d'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual;<br><br>V:<span class="hljs-keyword">select</span> to_char(<span class="hljs-keyword">sysdate</span>(),<span class="hljs-string">'YYYY-MM-DD'</span>)<br></code></pre></td></tr></table></figure><ol start="32"><li>求时间</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">S:<span class="hljs-keyword">select</span> <span class="hljs-keyword">convert</span>(<span class="hljs-built_in">char</span>(<span class="hljs-number">8</span>),<span class="hljs-keyword">getdate</span>(),<span class="hljs-number">108</span>) <span class="hljs-keyword">value</span><br><br>O:<span class="hljs-keyword">select</span> to_char(<span class="hljs-keyword">sysdate</span>,<span class="hljs-string">'hh24:mm:ss'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>M:<span class="hljs-keyword">select</span> <span class="hljs-keyword">DATE_FORMAT</span>(<span class="hljs-keyword">NOW</span>(),<span class="hljs-string">'%T'</span>) <span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> dual<br><br>V:<span class="hljs-keyword">select</span> to_char(<span class="hljs-keyword">sysdate</span>,<span class="hljs-string">'hh24:mi:ss'</span>)<br></code></pre></td></tr></table></figure><ol start="33"><li>取日期时间的其他部分</li></ol><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-symbol">S:DA</span>TEPART 和 DATENAME 函数 （第一个参数决定）<br><br><span class="hljs-symbol">O:to</span>_<span class="hljs-built_in">char</span>函数 第二个参数决定<br><br>参数---------------------------------下表需要补充<br><br><span class="hljs-built_in">year</span> yy, yyyy<br><br>quarter qq, q (季度)<br><br><span class="hljs-built_in">month</span> mm, m (m O无效)<br><br>dayofyear dy, y (O表星期)<br><br><span class="hljs-built_in">day</span> dd, d (d O无效)<br><br>week wk, ww (wk O无效)<br><br><span class="hljs-built_in">weekday</span> dw (O不清楚)<br><br><span class="hljs-built_in">Hour</span> hh,<span class="hljs-symbol">hh12</span>,<span class="hljs-symbol">hh24</span> (<span class="hljs-symbol">hh12</span>,<span class="hljs-symbol">hh24</span> S无效)<br><br><span class="hljs-built_in">minute</span> mi, <span class="hljs-built_in">n</span> (<span class="hljs-built_in">n</span> O无效)<br><br><span class="hljs-built_in">second</span> ss, s (s O无效)<br><br>millisecond ms (O无效)<br></code></pre></td></tr></table></figure><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs undefined">M:date_format函数 第二个参数决定<br><br>格式<br><br>描述<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">a</span></span><br><br>缩写星期名<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">b</span></span><br><br>缩写月名<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">c</span></span><br><br>月，数值<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">D</span></span><br><br>带有英文前缀的月中的天<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">d</span></span><br><br>月的天，数值(00-31)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">e</span></span><br><br>月的天，数值(0-31)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">f</span></span><br><br>微秒<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">H</span></span><br><br>小时 (00-23)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">h</span></span><br><br>小时 (01-12)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">I</span></span><br><br>小时 (01-12)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">i</span></span><br><br>分钟，数值(00-59)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">j</span></span><br><br>年的天 (001-366)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">k</span></span><br><br>小时 (0-23)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">l</span></span><br><br>小时 (1-12)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">M</span></span><br><br>月名<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">m</span></span><br><br>月，数值(00-12)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">p</span></span><br><br>AM 或 PM<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">r</span></span><br><br>时间，12-小时（hh:mm:ss AM 或 PM）<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">S</span></span><br><br>秒(00-59)<br><span class="hljs-tag"><br>%<span class="hljs-selector-tag">s</span></span><br></code></pre></td></tr></table></figure><p>原地址：<a href="http://www.verydemo.com/demo_c152_i10134.html" target="_blank" rel="noopener">http://www.verydemo.com/demo_c152_i10134.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vertica的这些事（一）——VSQL常用命令</title>
    <link href="/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94VSQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2018/09/12/Vertica%E7%9A%84%E8%BF%99%E4%BA%9B%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94VSQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p><strong>Linux环境下，一般都是使用vsql客户端连接vertica来执行命令的，下面就介绍一下vsql常用的命令有哪些。</strong></p><p><strong>导出数据</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/bin/vsql -U <span class="hljs-variable">$usr</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">5433</span> -h <span class="hljs-number">172.17</span>.<span class="hljs-number">12.208</span> -w <span class="hljs-variable">$pwd</span> -At -o /home/zyzx/<span class="hljs-number">20160809</span><span class="hljs-selector-class">.dat</span> -c <span class="hljs-string">"select * from tb_test;"</span><br></code></pre></td></tr></table></figure><p>默认是以‘|’分割的，指定分隔符如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">/opt/vertica/bin/vsql -U <span class="hljs-variable">$usr</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">5433</span> -h <span class="hljs-number">172.17</span>.<span class="hljs-number">12.208</span> -w <span class="hljs-variable">$pwd</span> -F $<span class="hljs-string">'\t'</span>  -At -o /home/zyzx/<span class="hljs-number">20160809</span><span class="hljs-selector-class">.dat</span> -c <span class="hljs-string">"select * from tb_test;"</span><br></code></pre></td></tr></table></figure><p><strong>切换路径 ：\cd</strong></p><figure class="highlight clojure-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">dbadmin=&gt;</span><span class="clojure"> \!pwd</span><br>/home/zyzx<br><span class="hljs-meta">dbadmin=&gt;</span><span class="clojure"> \cd /tmp</span><br><span class="hljs-meta">dbadmin=&gt;</span><span class="clojure"> \!pwd</span><br>/tmp<br></code></pre></td></tr></table></figure><p><strong>列出多有表：\d</strong><br><strong>列出多有函数：\df</strong><br><strong>列出所有projection：\dj</strong><br><strong>列出所有的schema：\dn</strong><br><strong>列出所有的序列：\ds</strong><br><strong>列出所有的系统字典表：\dS</strong><br><strong>列出所有支持的类型：\dT</strong><br><strong>列出所有的视图：\dv</strong><br><strong>编辑sql：\e</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">此时会进入编辑模式，输入需要执行的sql脚本，然后保存，就可以执行了（可以同时执行多个sql语句）<br></code></pre></td></tr></table></figure><p><strong>执行缓存的sql：\g</strong><br><strong>输出HTML格式的结果：\H</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; \H<br>Output format is html.<br>dbadmin=&gt; select * <span class="hljs-keyword">from</span> nodes limit <span class="hljs-number">1</span>;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"1"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_name<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_id<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_state<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_address<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_address_family<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>export_address<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>export_address_family<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>catalog_path<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_type<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>is_ephemeral<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>standing_in_for<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>node_down_since<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">valign</span>=<span class="hljs-string">"top"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>v_csap_node0001<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>&gt;</span>45035996273704980<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>UP<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>172.17.12.208<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>ipv4<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>172.17.12.208<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>ipv4<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>/data/CSAP/v_csap_node0001_catalog/Catalog<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>PERMANENT<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>f<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>&amp;nbsp; <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"left"</span>&gt;</span>&amp;nbsp; <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span></span><br>&lt;p&gt;(<span class="hljs-number">1</span> row)&lt;br /&gt;<br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>查看当前缓存buffer里的内容：\p</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; \p<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> nodes <span class="hljs-keyword">limit</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p><strong>修改密码：\password [ USER ]</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">dbadmin=&gt; \password test<br>Changing password <span class="hljs-keyword">for</span> <span class="hljs-string">"test"</span><br><span class="hljs-keyword">New</span> password:<br></code></pre></td></tr></table></figure><p><strong>情况当前buffer：\r</strong></p><figure class="highlight clojure-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined"><span class="hljs-meta">dbadmin=&gt;</span><span class="clojure"> \r</span><br>Query buffer reset (cleared).<br><span class="hljs-meta">dbadmin=&gt;</span><span class="clojure"> \p</span><br>Query buffer is empty.<br></code></pre></td></tr></table></figure><p><strong>历史命令查看保存为file：\s [ FILE ]</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">\s <span class="hljs-keyword">history</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><strong>查看所有表的权限：\dp 或者\z</strong></p><p><strong>copy:</strong></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">vsql -U username -w passwd -d vmart -<span class="hljs-keyword">c</span> <span class="hljs-string">"COPY store.store_sales_fact FROM STDIN DELIMITER '|';"</span><br></code></pre></td></tr></table></figure><p><strong>直接copyHDFS的文件到vertica</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">COPY testTable SOURCE Hdfs(<span class="hljs-attribute">url</span>=<span class="hljs-string">'http://hadoop:50070/webhdfs/v1/tmp/test.txt'</span>,<br>   <span class="hljs-attribute">username</span>=<span class="hljs-string">'hadoopUser'</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vertica</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
